Func input  [line: -1]
Sibling: 0  Func output  [line: -1]
!   Child: 0  Param *dummy*  [line: -1]
Sibling: 1  Func inputb  [line: -1]
Sibling: 2  Func outputb  [line: -1]
!   Child: 0  Param *dummy*  [line: -1]
Sibling: 3  Func inputc  [line: -1]
Sibling: 4  Func outputc  [line: -1]
!   Child: 0  Param *dummy*  [line: -1]
Sibling: 5  Func outnl  [line: -1]
Sibling: 6  Func dog  [line: 3]
!   Child: 0  Param x  [line: 3]
!   Child: 1  Compound  [line: 4]
!   !   Child: 0  Var y  [line: 5]
!   !   Sibling: 0  Var z  [line: 6]
!   !   Child: 1  Assign: = [line: 8]
!   !   !   Child: 0  Id: y  [line: 8]
!   !   !   Child: 1  Op: + [line: 8]
!   !   !   !   Child: 0  Op: * [line: 8]
!   !   !   !   !   Child: 0  Id: x  [line: 8]
!   !   !   !   !   Child: 1  Const: 111 [line: 8]
!   !   !   !   Child: 1  Const: 222 [line: 8]
!   !   Sibling: 0  Assign: = [line: 9]
!   !   !   Child: 0  Id: z  [line: 9]
!   !   !   Child: 1  Id: y  [line: 9]
!   !   Sibling: 1  Return [line: 11]
!   !   !   Child: 0  Id: z  [line: 11]
Sibling: 7  Func main  [line: 15]
!   Child: 1  Compound  [line: 16]
!   !   Child: 1  Call: output [line: 17]
!   !   !   Child: 0  Call: dog [line: 17]
!   !   !   !   Child: 0  Const: 666 [line: 17]
!   !   Sibling: 0  Call: outnl [line: 18]
!   !   