Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: gx is array [ref: Global, size: 8, loc: -1] [type int] [line: 2]
Sibling: 7  Var: gy is array [ref: Global, size: 7, loc: -9] [type int] [line: 2]
Sibling: 8  Func main [ref: Global, size: -19, loc: 0] [type void] [line: 4]
!   Child: 1  Compound [ref: None, size: -19, loc: 0] [type void] [line: 5]
!   !   Child: 0  Var: x is array [ref: Local, size: 9, loc: -3] [type int] [line: 6]
!   !   Sibling: 0  Var: y is array [ref: Local, size: 8, loc: -12] [type int] [line: 6]
!   !   Child: 1  Assign: += [type int] [line: 8]
!   !   !   Child: 0  Op: [ [type int] [line: 8]
!   !   !   !   Child: 0  Id: x is array [ref: Local, size: 9, loc: -3] [type int] [line: 8]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 8]
!   !   !   Child: 1  Const: 111 [type int] [line: 8]
!   !   Sibling: 0  Call: output [type void] [line: 9]
!   !   !   Child: 0  Op: [ [type int] [line: 9]
!   !   !   !   Child: 0  Id: x is array [ref: Local, size: 9, loc: -3] [type int] [line: 9]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 9]
!   !   Sibling: 1  Assign: += [type int] [line: 10]
!   !   !   Child: 0  Op: [ [type int] [line: 10]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 8, loc: -12] [type int] [line: 10]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 10]
!   !   !   Child: 1  Const: 222 [type int] [line: 10]
!   !   Sibling: 2  Call: output [type void] [line: 11]
!   !   !   Child: 0  Op: [ [type int] [line: 11]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 8, loc: -12] [type int] [line: 11]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 11]
!   !   Sibling: 3  Call: outnl [type void] [line: 12]
!   !   Sibling: 4  Assign: += [type int] [line: 14]
!   !   !   Child: 0  Op: [ [type int] [line: 14]
!   !   !   !   Child: 0  Id: gx is array [ref: Global, size: 8, loc: -1] [type int] [line: 14]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 14]
!   !   !   Child: 1  Const: 333 [type int] [line: 14]
!   !   Sibling: 5  Call: output [type void] [line: 15]
!   !   !   Child: 0  Op: [ [type int] [line: 15]
!   !   !   !   Child: 0  Id: gx is array [ref: Global, size: 8, loc: -1] [type int] [line: 15]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 15]
!   !   Sibling: 6  Assign: += [type int] [line: 16]
!   !   !   Child: 0  Op: [ [type int] [line: 16]
!   !   !   !   Child: 0  Id: gy is array [ref: Global, size: 7, loc: -9] [type int] [line: 16]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 16]
!   !   !   Child: 1  Const: 444 [type int] [line: 16]
!   !   Sibling: 7  Call: output [type void] [line: 17]
!   !   !   Child: 0  Op: [ [type int] [line: 17]
!   !   !   !   Child: 0  Id: gy is array [ref: Global, size: 7, loc: -9] [type int] [line: 17]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 17]
!   !   Sibling: 8  Call: outnl [type void] [line: 18]
!   !   Sibling: 9  Assign: += [type int] [line: 20]
!   !   !   Child: 0  Op: [ [type int] [line: 20]
!   !   !   !   Child: 0  Id: x is array [ref: Local, size: 9, loc: -3] [type int] [line: 20]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 20]
!   !   !   Child: 1  Op: [ [type int] [line: 20]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 8, loc: -12] [type int] [line: 20]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 20]
!   !   Sibling: 10  Call: output [type void] [line: 21]
!   !   !   Child: 0  Op: [ [type int] [line: 21]
!   !   !   !   Child: 0  Id: x is array [ref: Local, size: 9, loc: -3] [type int] [line: 21]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 21]
!   !   Sibling: 11  Call: outnl [type void] [line: 22]
!   !   Sibling: 12  Assign: += [type int] [line: 24]
!   !   !   Child: 0  Op: [ [type int] [line: 24]
!   !   !   !   Child: 0  Id: gx is array [ref: Global, size: 8, loc: -1] [type int] [line: 24]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 24]
!   !   !   Child: 1  Op: [ [type int] [line: 24]
!   !   !   !   Child: 0  Id: gy is array [ref: Global, size: 7, loc: -9] [type int] [line: 24]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 24]
!   !   Sibling: 13  Call: output [type void] [line: 25]
!   !   !   Child: 0  Op: [ [type int] [line: 25]
!   !   !   !   Child: 0  Id: gx is array [ref: Global, size: 8, loc: -1] [type int] [line: 25]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 25]
!   !   Sibling: 14  Call: outnl [type void] [line: 26]
!   !   Sibling: 15  Assign: -= [type int] [line: 28]
!   !   !   Child: 0  Op: [ [type int] [line: 28]
!   !   !   !   Child: 0  Id: x is array [ref: Local, size: 9, loc: -3] [type int] [line: 28]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 28]
!   !   !   Child: 1  Const: 111 [type int] [line: 28]
!   !   Sibling: 16  Call: output [type void] [line: 29]
!   !   !   Child: 0  Op: [ [type int] [line: 29]
!   !   !   !   Child: 0  Id: x is array [ref: Local, size: 9, loc: -3] [type int] [line: 29]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 29]
!   !   Sibling: 17  Assign: -= [type int] [line: 30]
!   !   !   Child: 0  Op: [ [type int] [line: 30]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 8, loc: -12] [type int] [line: 30]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 30]
!   !   !   Child: 1  Const: 222 [type int] [line: 30]
!   !   Sibling: 18  Call: output [type void] [line: 31]
!   !   !   Child: 0  Op: [ [type int] [line: 31]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 8, loc: -12] [type int] [line: 31]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 31]
!   !   Sibling: 19  Call: outnl [type void] [line: 32]
!   !   Sibling: 20  Assign: -= [type int] [line: 34]
!   !   !   Child: 0  Op: [ [type int] [line: 34]
!   !   !   !   Child: 0  Id: gx is array [ref: Global, size: 8, loc: -1] [type int] [line: 34]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 34]
!   !   !   Child: 1  Const: 333 [type int] [line: 34]
!   !   Sibling: 21  Call: output [type void] [line: 35]
!   !   !   Child: 0  Op: [ [type int] [line: 35]
!   !   !   !   Child: 0  Id: gx is array [ref: Global, size: 8, loc: -1] [type int] [line: 35]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 35]
!   !   Sibling: 22  Assign: -= [type int] [line: 36]
!   !   !   Child: 0  Op: [ [type int] [line: 36]
!   !   !   !   Child: 0  Id: gy is array [ref: Global, size: 7, loc: -9] [type int] [line: 36]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 36]
!   !   !   Child: 1  Const: 444 [type int] [line: 36]
!   !   Sibling: 23  Call: output [type void] [line: 37]
!   !   !   Child: 0  Op: [ [type int] [line: 37]
!   !   !   !   Child: 0  Id: gy is array [ref: Global, size: 7, loc: -9] [type int] [line: 37]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 37]
!   !   Sibling: 24  Call: outnl [type void] [line: 38]
!   !   Sibling: 25  Assign: -= [type int] [line: 40]
!   !   !   Child: 0  Op: [ [type int] [line: 40]
!   !   !   !   Child: 0  Id: x is array [ref: Local, size: 9, loc: -3] [type int] [line: 40]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 40]
!   !   !   Child: 1  Op: [ [type int] [line: 40]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 8, loc: -12] [type int] [line: 40]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 40]
!   !   Sibling: 26  Call: output [type void] [line: 41]
!   !   !   Child: 0  Op: [ [type int] [line: 41]
!   !   !   !   Child: 0  Id: x is array [ref: Local, size: 9, loc: -3] [type int] [line: 41]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 41]
!   !   Sibling: 27  Call: outnl [type void] [line: 42]
!   !   Sibling: 28  Assign: -= [type int] [line: 44]
!   !   !   Child: 0  Op: [ [type int] [line: 44]
!   !   !   !   Child: 0  Id: gx is array [ref: Global, size: 8, loc: -1] [type int] [line: 44]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 44]
!   !   !   Child: 1  Op: [ [type int] [line: 44]
!   !   !   !   Child: 0  Id: gy is array [ref: Global, size: 7, loc: -9] [type int] [line: 44]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 44]
!   !   Sibling: 29  Call: output [type void] [line: 45]
!   !   !   Child: 0  Op: [ [type int] [line: 45]
!   !   !   !   Child: 0  Id: gx is array [ref: Global, size: 8, loc: -1] [type int] [line: 45]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 45]
!   !   Sibling: 30  Call: outnl [type void] [line: 46]
!   !   Sibling: 31  Return [type void] [line: 48]
Offset for end of global space: -15
Number of warnings: 0
Number of errors: 0
