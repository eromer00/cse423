ERROR(11): Function 'bat' is not defined.
ERROR(26): Expecting type int in parameter 1 of call to 'cow' defined on line 3 but got type void.
ERROR(32): Function 'fox' at line 30 is expecting no return value, but return has return value.
ERROR(37): Function 'gnu' at line 35 is expecting no return value, but return has return value.
ERROR(LINKER): Procedure main is not defined.
Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func cow [ref: Global, size: -3, loc: 0] [type int] [line: 3]
!   Child: 0  Param x [ref: Param, size: 1, loc: -2] [type int] [line: 3]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 4]
!   !   Child: 1  Call: cow [type int] [line: 5]
!   !   !   Child: 0  Const: 42 [type int] [line: 5]
!   !   Sibling: 0  Return [type void] [line: 6]
!   !   !   Child: 0  Const: 666 [type int] [line: 6]
Sibling: 7  Func ant [ref: Global, size: -3, loc: 0] [type void] [line: 9]
!   Child: 0  Param x [ref: Param, size: 1, loc: -2] [type int] [line: 9]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 10]
!   !   Child: 1  Call: bat [undefined type] [line: 11]
!   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 11]
Sibling: 8  Func bat [ref: Global, size: -3, loc: 0] [type void] [line: 14]
!   Child: 0  Param x [ref: Param, size: 1, loc: -2] [type int] [line: 14]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 15]
!   !   Child: 1  Call: ant [type void] [line: 16]
!   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 16]
Sibling: 9  Func dog [ref: Global, size: -3, loc: 0] [type int] [line: 19]
!   Child: 0  Param y [ref: Param, size: 1, loc: -2] [type int] [line: 19]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 20]
!   !   Child: 1  Return [type void] [line: 21]
!   !   !   Child: 0  Call: dog [type int] [line: 21]
!   !   !   !   Child: 0  Const: 3 [type int] [line: 21]
Sibling: 10  Func eel [ref: Global, size: -3, loc: 0] [type int] [line: 24]
!   Child: 0  Param y [ref: Param, size: 1, loc: -2] [type int] [line: 24]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 25]
!   !   Child: 1  Call: cow [type int] [line: 26]
!   !   !   Child: 0  Call: ant [type void] [line: 26]
!   !   !   !   Child: 0  Const: 3 [type int] [line: 26]
!   !   Sibling: 0  Return [type void] [line: 27]
!   !   !   Child: 0  Call: dog [type int] [line: 27]
!   !   !   !   Child: 0  Call: cow [type int] [line: 27]
!   !   !   !   !   Child: 0  Const: 3 [type int] [line: 27]
Sibling: 11  Func fox [ref: Global, size: -3, loc: 0] [type void] [line: 30]
!   Child: 0  Param y [ref: Param, size: 1, loc: -2] [type int] [line: 30]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 31]
!   !   Child: 1  Return [type void] [line: 32]
!   !   !   Child: 0  Call: ant [type void] [line: 32]
!   !   !   !   Child: 0  Const: 3 [type int] [line: 32]
Sibling: 12  Func gnu [ref: Global, size: -3, loc: 0] [type void] [line: 35]
!   Child: 0  Param y [ref: Param, size: 1, loc: -2] [type int] [line: 35]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 36]
!   !   Child: 1  Return [type void] [line: 37]
!   !   !   Child: 0  Call: ant [type void] [line: 37]
!   !   !   !   Child: 0  Const: 3 [type int] [line: 37]
Sibling: 13  Func hog [ref: Global, size: -3, loc: 0] [type bool] [line: 40]
!   Child: 0  Param z [ref: Param, size: 1, loc: -2] [type int] [line: 40]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 41]
!   !   Child: 1  Return [type void] [line: 42]
!   !   !   Child: 0  Call: hog [type bool] [line: 42]
!   !   !   !   Child: 0  Call: eel [type int] [line: 42]
!   !   !   !   !   Child: 0  Call: cow [type int] [line: 42]
!   !   !   !   !   !   Child: 0  Const: 3 [type int] [line: 42]
Sibling: 14  Func ibex [ref: Global, size: -3, loc: 0] [type int] [line: 45]
!   Child: 0  Param z [ref: Param, size: 1, loc: -2] [type bool] [line: 45]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 46]
!   !   Child: 1  Return [type void] [line: 47]
!   !   !   Child: 0  Call: ibex [type int] [line: 47]
!   !   !   !   Child: 0  Call: hog [type bool] [line: 47]
!   !   !   !   !   Child: 0  Call: ibex [type int] [line: 47]
!   !   !   !   !   !   Child: 0  Call: hog [type bool] [line: 47]
!   !   !   !   !   !   !   Child: 0  Call: ibex [type int] [line: 47]
!   !   !   !   !   !   !   !   Child: 0  Const: true [type bool] [line: 47]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 5
