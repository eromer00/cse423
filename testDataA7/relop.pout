Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func main [ref: Global, size: -12, loc: 0] [type void] [line: 4]
!   Child: 1  Compound [ref: None, size: -8, loc: 0] [type void] [line: 5]
!   !   Child: 0  Var: x [ref: Local, size: 1, loc: -2] [type int] [line: 6]
!   !   Sibling: 0  Var: y [ref: Local, size: 1, loc: -3] [type int] [line: 6]
!   !   Sibling: 1  Var: z [ref: Local, size: 1, loc: -4] [type int] [line: 6]
!   !   Sibling: 2  Var: a [ref: Local, size: 1, loc: -5] [type bool] [line: 7]
!   !   Sibling: 3  Var: b [ref: Local, size: 1, loc: -6] [type bool] [line: 7]
!   !   Sibling: 4  Var: c [ref: Local, size: 1, loc: -7] [type bool] [line: 7]
!   !   Child: 1  While  [type void] [line: 9]
!   !   !   Child: 0  Op: < [type bool] [line: 9]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 9]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 9]
!   !   Sibling: 0  While  [type void] [line: 10]
!   !   !   Child: 0  Op: > [type bool] [line: 10]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 10]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 10]
!   !   Sibling: 1  While  [type void] [line: 11]
!   !   !   Child: 0  Op: not [type bool] [line: 11]
!   !   !   !   Child: 0  Op: < [type bool] [line: 11]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 11]
!   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 11]
!   !   Sibling: 2  While  [type void] [line: 12]
!   !   !   Child: 0  Op: > [type bool] [line: 12]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 12]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 12]
!   !   Sibling: 3  While  [type void] [line: 13]
!   !   !   Child: 0  Op: == [type bool] [line: 13]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 13]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 13]
!   !   !   Child: 1  Compound [ref: None, size: -8, loc: 0] [type void] [line: 13]
!   !   Sibling: 4  While  [type void] [line: 14]
!   !   !   Child: 0  Op: <= [type bool] [line: 14]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 14]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 14]
!   !   !   Child: 1  Compound [ref: None, size: -9, loc: 0] [type void] [line: 14]
!   !   !   !   Child: 0  Var: x [ref: Local, size: 1, loc: -8] [type int] [line: 14]
!   !   Sibling: 5  While  [type void] [line: 15]
!   !   !   Child: 0  Op: >= [type bool] [line: 15]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 15]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 15]
!   !   !   Child: 1  Compound [ref: None, size: -10, loc: 0] [type void] [line: 15]
!   !   !   !   Child: 0  Var: x [ref: Local, size: 1, loc: -9] [type int] [line: 15]
!   !   !   !   Child: 1  Assign: = [type int] [line: 15]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -9] [type int] [line: 15]
!   !   !   !   !   Child: 1  Const: 4 [type int] [line: 15]
!   !   Sibling: 6  While  [type void] [line: 16]
!   !   !   Child: 0  Op: != [type bool] [line: 16]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 16]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 16]
!   !   !   Child: 1  While  [type void] [line: 16]
!   !   !   !   Child: 0  Op: == [type bool] [line: 16]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 16]
!   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 16]
!   !   Sibling: 7  If  [type void] [line: 18]
!   !   !   Child: 0  Op: > [type bool] [line: 18]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 18]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 18]
!   !   Sibling: 8  If  [type void] [line: 19]
!   !   !   Child: 0  Op: == [type bool] [line: 19]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 19]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 19]
!   !   !   Child: 1  Compound [ref: None, size: -10, loc: 0] [type void] [line: 19]
!   !   Sibling: 9  If  [type void] [line: 20]
!   !   !   Child: 0  Op: <= [type bool] [line: 20]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 20]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 20]
!   !   !   Child: 1  Compound [ref: None, size: -11, loc: 0] [type void] [line: 20]
!   !   !   !   Child: 0  Var: x [ref: Local, size: 1, loc: -10] [type int] [line: 20]
!   !   Sibling: 10  If  [type void] [line: 21]
!   !   !   Child: 0  Op: >= [type bool] [line: 21]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 21]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 21]
!   !   !   Child: 1  Compound [ref: None, size: -12, loc: 0] [type void] [line: 21]
!   !   !   !   Child: 0  Var: x [ref: Local, size: 1, loc: -11] [type int] [line: 21]
!   !   !   !   Child: 1  Assign: = [type int] [line: 21]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -11] [type int] [line: 21]
!   !   !   !   !   Child: 1  Const: 4 [type int] [line: 21]
!   !   Sibling: 11  If  [type void] [line: 22]
!   !   !   Child: 0  Op: != [type bool] [line: 22]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 22]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 22]
!   !   !   Child: 1  While  [type void] [line: 22]
!   !   !   !   Child: 0  Op: == [type bool] [line: 22]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 22]
!   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 22]
!   !   Sibling: 12  If  [type void] [line: 24]
!   !   !   Child: 0  Op: > [type bool] [line: 24]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 24]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 24]
!   !   Sibling: 13  If  [type void] [line: 25]
!   !   !   Child: 0  Op: > [type bool] [line: 25]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 25]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 25]
!   !   Sibling: 14  If  [type void] [line: 26]
!   !   !   Child: 0  Op: == [type bool] [line: 26]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 26]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 26]
!   !   !   Child: 1  Compound [ref: None, size: -12, loc: 0] [type void] [line: 26]
!   !   !   Child: 2  Compound [ref: None, size: -12, loc: 0] [type void] [line: 26]
!   !   Sibling: 15  If  [type void] [line: 27]
!   !   !   Child: 0  Op: < [type bool] [line: 27]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 27]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 27]
!   !   !   Child: 1  If  [type void] [line: 27]
!   !   !   !   Child: 0  Op: > [type bool] [line: 27]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 27]
!   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 27]
!   !   !   !   Child: 1  Assign: = [type int] [line: 27]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 27]
!   !   !   !   !   Child: 1  Const: 2 [type int] [line: 27]
!   !   !   !   Child: 2  Assign: = [type int] [line: 27]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 27]
!   !   !   !   !   Child: 1  Const: 3 [type int] [line: 27]
!   !   Sibling: 16  If  [type void] [line: 28]
!   !   !   Child: 0  Op: < [type bool] [line: 28]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 28]
!   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 28]
!   !   !   Child: 1  Compound [ref: None, size: -12, loc: 0] [type void] [line: 28]
!   !   !   !   Child: 1  If  [type void] [line: 28]
!   !   !   !   !   Child: 0  Op: > [type bool] [line: 28]
!   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 28]
!   !   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 28]
!   !   !   !   !   Child: 1  Assign: = [type int] [line: 28]
!   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 28]
!   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 28]
!   !   !   Child: 2  Assign: = [type int] [line: 28]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 28]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 28]
!   !   Sibling: 17  If  [type void] [line: 30]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -6] [type bool] [line: 30]
!   !   Sibling: 18  If  [type void] [line: 31]
!   !   !   Child: 0  Op: not [type bool] [line: 31]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -6] [type bool] [line: 31]
!   !   Sibling: 19  If  [type void] [line: 32]
!   !   !   Child: 0  Op: and [type bool] [line: 32]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -5] [type bool] [line: 32]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -6] [type bool] [line: 32]
!   !   Sibling: 20  If  [type void] [line: 33]
!   !   !   Child: 0  Op: or [type bool] [line: 33]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -5] [type bool] [line: 33]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -6] [type bool] [line: 33]
!   !   Sibling: 21  If  [type void] [line: 34]
!   !   !   Child: 0  Op: or [type bool] [line: 34]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -5] [type bool] [line: 34]
!   !   !   !   Child: 1  Op: and [type bool] [line: 34]
!   !   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -6] [type bool] [line: 34]
!   !   !   !   !   Child: 1  Id: c [ref: Local, size: 1, loc: -7] [type bool] [line: 34]
!   !   Sibling: 22  If  [type void] [line: 35]
!   !   !   Child: 0  Op: or [type bool] [line: 35]
!   !   !   !   Child: 0  Op: not [type bool] [line: 35]
!   !   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -5] [type bool] [line: 35]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -6] [type bool] [line: 35]
!   !   Sibling: 23  If  [type void] [line: 37]
!   !   !   Child: 0  Op: and [type bool] [line: 37]
!   !   !   !   Child: 0  Op: > [type bool] [line: 37]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 37]
!   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 37]
!   !   !   !   Child: 1  Op: > [type bool] [line: 37]
!   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 37]
!   !   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 37]
!   !   Sibling: 24  If  [type void] [line: 38]
!   !   !   Child: 0  Op: or [type bool] [line: 38]
!   !   !   !   Child: 0  Op: > [type bool] [line: 38]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 38]
!   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 38]
!   !   !   !   Child: 1  Op: > [type bool] [line: 38]
!   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 38]
!   !   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 38]
!   !   Sibling: 25  Assign: = [type bool] [line: 39]
!   !   !   Child: 0  Id: c [ref: Local, size: 1, loc: -7] [type bool] [line: 39]
!   !   !   Child: 1  Op: and [type bool] [line: 39]
!   !   !   !   Child: 0  Op: > [type bool] [line: 39]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 39]
!   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 39]
!   !   !   !   Child: 1  Op: > [type bool] [line: 39]
!   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 39]
!   !   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 39]
!   !   Sibling: 26  Assign: = [type bool] [line: 40]
!   !   !   Child: 0  Id: c [ref: Local, size: 1, loc: -7] [type bool] [line: 40]
!   !   !   Child: 1  Op: or [type bool] [line: 40]
!   !   !   !   Child: 0  Op: > [type bool] [line: 40]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 40]
!   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 40]
!   !   !   !   Child: 1  Op: > [type bool] [line: 40]
!   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 40]
!   !   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 40]
!   !   Sibling: 27  Assign: = [type bool] [line: 41]
!   !   !   Child: 0  Id: c [ref: Local, size: 1, loc: -7] [type bool] [line: 41]
!   !   !   Child: 1  Op: and [type bool] [line: 41]
!   !   !   !   Child: 0  Op: not [type bool] [line: 41]
!   !   !   !   !   Child: 0  Op: > [type bool] [line: 41]
!   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 41]
!   !   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 41]
!   !   !   !   Child: 1  Op: > [type bool] [line: 41]
!   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 41]
!   !   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 41]
!   !   Sibling: 28  Assign: = [type bool] [line: 42]
!   !   !   Child: 0  Id: c [ref: Local, size: 1, loc: -7] [type bool] [line: 42]
!   !   !   Child: 1  Op: or [type bool] [line: 42]
!   !   !   !   Child: 0  Op: not [type bool] [line: 42]
!   !   !   !   !   Child: 0  Op: > [type bool] [line: 42]
!   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 42]
!   !   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 42]
!   !   !   !   Child: 1  Op: > [type bool] [line: 42]
!   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 42]
!   !   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 42]
!   !   Sibling: 29  Assign: = [type bool] [line: 43]
!   !   !   Child: 0  Id: c [ref: Local, size: 1, loc: -7] [type bool] [line: 43]
!   !   !   Child: 1  Op: or [type bool] [line: 43]
!   !   !   !   Child: 0  Op: == [type bool] [line: 43]
!   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 43]
!   !   !   !   !   Child: 1  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 43]
!   !   !   !   Child: 1  Op: and [type bool] [line: 43]
!   !   !   !   !   Child: 0  Op: > [type bool] [line: 43]
!   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 43]
!   !   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 43]
!   !   !   !   !   Child: 1  Op: > [type bool] [line: 43]
!   !   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 43]
!   !   !   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 43]
!   !   Sibling: 30  If  [type void] [line: 45]
!   !   !   Child: 0  Op: or [type bool] [line: 45]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -6] [type bool] [line: 45]
!   !   !   !   Child: 1  Op: and [type bool] [line: 45]
!   !   !   !   !   Child: 0  Op: > [type bool] [line: 45]
!   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 45]
!   !   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 45]
!   !   !   !   !   Child: 1  Op: > [type bool] [line: 45]
!   !   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 45]
!   !   !   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 45]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 0
