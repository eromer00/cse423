Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func main [ref: Global, size: -4, loc: 0] [type void] [line: 6]
!   Child: 1  Compound [ref: None, size: -4, loc: 0] [type void] [line: 7]
!   !   Child: 0  Var: x [ref: Local, size: 1, loc: -2] [type int] [line: 8]
!   !   Sibling: 0  Var: b [ref: Local, size: 1, loc: -3] [type bool] [line: 9]
!   !   Child: 1  Call: output [type void] [line: 11]
!   !   !   Child: 0  Const: 777 [type int] [line: 11]
!   !   Sibling: 0  Call: outputb [type void] [line: 12]
!   !   !   Child: 0  Const: false [type bool] [line: 12]
!   !   Sibling: 1  Call: outnl [type void] [line: 13]
!   !   Sibling: 2  Assign: = [type int] [line: 15]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 15]
!   !   !   Child: 1  Const: 666 [type int] [line: 15]
!   !   Sibling: 3  Call: output [type void] [line: 16]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 16]
!   !   Sibling: 4  Call: outnl [type void] [line: 17]
!   !   Sibling: 5  Call: output [type void] [line: 19]
!   !   !   Child: 0  Op: - [type int] [line: 19]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 19]
!   !   Sibling: 6  Call: output [type void] [line: 20]
!   !   !   Child: 0  Op: * [type int] [line: 20]
!   !   !   !   Child: 0  Op: - [type int] [line: 20]
!   !   !   !   !   Child: 0  Const: 1 [type int] [line: 20]
!   !   !   !   Child: 1  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 20]
!   !   Sibling: 7  Call: outnl [type void] [line: 21]
!   !   Sibling: 8  Call: output [type void] [line: 23]
!   !   !   Child: 0  Op: + [type int] [line: 23]
!   !   !   !   Child: 0  Op: + [type int] [line: 23]
!   !   !   !   !   Child: 0  Const: 111 [type int] [line: 23]
!   !   !   !   !   Child: 1  Const: 222 [type int] [line: 23]
!   !   !   !   Child: 1  Const: 333 [type int] [line: 23]
!   !   Sibling: 9  Call: output [type void] [line: 24]
!   !   !   Child: 0  Op: * [type int] [line: 24]
!   !   !   !   Child: 0  Op: * [type int] [line: 24]
!   !   !   !   !   Child: 0  Const: 3 [type int] [line: 24]
!   !   !   !   !   Child: 1  Const: 6 [type int] [line: 24]
!   !   !   !   Child: 1  Op: + [type int] [line: 24]
!   !   !   !   !   Child: 0  Op: * [type int] [line: 24]
!   !   !   !   !   !   Child: 0  Const: 6 [type int] [line: 24]
!   !   !   !   !   !   Child: 1  Const: 6 [type int] [line: 24]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 24]
!   !   Sibling: 10  Call: outnl [type void] [line: 25]
!   !   Sibling: 11  Assign: = [type int] [line: 27]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 27]
!   !   !   Child: 1  Call: input [type int] [line: 27]
!   !   Sibling: 12  Call: output [type void] [line: 28]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 28]
!   !   Sibling: 13  Call: outnl [type void] [line: 29]
!   !   Sibling: 14  Assign: = [type bool] [line: 31]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 31]
!   !   !   Child: 1  Call: inputb [type bool] [line: 31]
!   !   Sibling: 15  Call: outputb [type void] [line: 32]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 32]
!   !   Sibling: 16  Call: outnl [type void] [line: 33]
!   !   Sibling: 17  Call: output [type void] [line: 35]
!   !   !   Child: 0  Op: * [type int] [line: 35]
!   !   !   !   Child: 0  Call: input [type int] [line: 35]
!   !   !   !   Child: 1  Call: input [type int] [line: 35]
!   !   Sibling: 18  Call: outnl [type void] [line: 36]
!   !   Sibling: 19  Call: outputb [type void] [line: 38]
!   !   !   Child: 0  Op: and [type bool] [line: 38]
!   !   !   !   Child: 0  Call: inputb [type bool] [line: 38]
!   !   !   !   Child: 1  Call: inputb [type bool] [line: 38]
!   !   Sibling: 20  Call: outnl [type void] [line: 39]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 0
