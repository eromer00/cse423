WARNING(4): Expecting to return type int but function 'dog' has no return statement.
Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: g [ref: Global, size: 1, loc: 0] [type int] [line: 2]
Sibling: 7  Var: h is array [ref: Global, size: 11, loc: -2] [type int] [line: 3]
Sibling: 8  Func dog [ref: Global, size: -17, loc: 0] [type int] [line: 4]
!   Child: 0  Param p [ref: Param, size: 1, loc: -2] [type int] [line: 4]
!   Sibling: 0  Param q is array [ref: Param, size: 1, loc: -3] [type int] [line: 4]
!   Child: 1  Compound [ref: None, size: -17, loc: 0] [type void] [line: 5]
!   !   Child: 0  Var: a [ref: Local, size: 1, loc: -4] [type int] [line: 6]
!   !   Sibling: 0  Var: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 6]
!   !   Sibling: 1  Var: x [ref: Local, size: 1, loc: -16] [type int] [line: 7]
!   !   Child: 1  Assign: = [type int] [line: 9]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -4] [type int] [line: 9]
!   !   !   Child: 1  Const: 777 [type int] [line: 9]
!   !   Sibling: 0  Call: output [type void] [line: 10]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -4] [type int] [line: 10]
!   !   Sibling: 1  Assign: += [type int] [line: 11]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -4] [type int] [line: 11]
!   !   !   Child: 1  Const: 666 [type int] [line: 11]
!   !   Sibling: 2  Call: output [type void] [line: 12]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -4] [type int] [line: 12]
!   !   Sibling: 3  Assign: -= [type int] [line: 13]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -4] [type int] [line: 13]
!   !   !   Child: 1  Const: 666 [type int] [line: 13]
!   !   Sibling: 4  Call: output [type void] [line: 14]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -4] [type int] [line: 14]
!   !   Sibling: 5  Call: outnl [type void] [line: 15]
!   !   Sibling: 6  Assign: = [type int] [line: 17]
!   !   !   Child: 0  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 17]
!   !   !   Child: 1  Const: 777 [type int] [line: 17]
!   !   Sibling: 7  Call: output [type void] [line: 18]
!   !   !   Child: 0  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 18]
!   !   Sibling: 8  Assign: += [type int] [line: 19]
!   !   !   Child: 0  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 19]
!   !   !   Child: 1  Const: 666 [type int] [line: 19]
!   !   Sibling: 9  Call: output [type void] [line: 20]
!   !   !   Child: 0  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 20]
!   !   Sibling: 10  Assign: -= [type int] [line: 21]
!   !   !   Child: 0  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 21]
!   !   !   Child: 1  Const: 666 [type int] [line: 21]
!   !   Sibling: 11  Call: output [type void] [line: 22]
!   !   !   Child: 0  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 22]
!   !   Sibling: 12  Call: outnl [type void] [line: 23]
!   !   Sibling: 13  Assign: = [type int] [line: 25]
!   !   !   Child: 0  Id: p [ref: Param, size: 1, loc: -2] [type int] [line: 25]
!   !   !   Child: 1  Const: 777 [type int] [line: 25]
!   !   Sibling: 14  Call: output [type void] [line: 26]
!   !   !   Child: 0  Id: p [ref: Param, size: 1, loc: -2] [type int] [line: 26]
!   !   Sibling: 15  Assign: += [type int] [line: 27]
!   !   !   Child: 0  Id: p [ref: Param, size: 1, loc: -2] [type int] [line: 27]
!   !   !   Child: 1  Const: 666 [type int] [line: 27]
!   !   Sibling: 16  Call: output [type void] [line: 28]
!   !   !   Child: 0  Id: p [ref: Param, size: 1, loc: -2] [type int] [line: 28]
!   !   Sibling: 17  Assign: -= [type int] [line: 29]
!   !   !   Child: 0  Id: p [ref: Param, size: 1, loc: -2] [type int] [line: 29]
!   !   !   Child: 1  Const: 666 [type int] [line: 29]
!   !   Sibling: 18  Call: output [type void] [line: 30]
!   !   !   Child: 0  Id: p [ref: Param, size: 1, loc: -2] [type int] [line: 30]
!   !   Sibling: 19  Call: outnl [type void] [line: 31]
!   !   Sibling: 20  Assign: = [type int] [line: 33]
!   !   !   Child: 0  Op: [ [type int] [line: 33]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 33]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 33]
!   !   !   Child: 1  Const: 777 [type int] [line: 33]
!   !   Sibling: 21  Call: output [type void] [line: 34]
!   !   !   Child: 0  Op: [ [type int] [line: 34]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 34]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 34]
!   !   Sibling: 22  Assign: += [type int] [line: 35]
!   !   !   Child: 0  Op: [ [type int] [line: 35]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 35]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 35]
!   !   !   Child: 1  Const: 666 [type int] [line: 35]
!   !   Sibling: 23  Call: output [type void] [line: 36]
!   !   !   Child: 0  Op: [ [type int] [line: 36]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 36]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 36]
!   !   Sibling: 24  Assign: -= [type int] [line: 37]
!   !   !   Child: 0  Op: [ [type int] [line: 37]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 37]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 37]
!   !   !   Child: 1  Const: 666 [type int] [line: 37]
!   !   Sibling: 25  Call: output [type void] [line: 38]
!   !   !   Child: 0  Op: [ [type int] [line: 38]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 38]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 38]
!   !   Sibling: 26  Call: outnl [type void] [line: 39]
!   !   Sibling: 27  Assign: = [type int] [line: 41]
!   !   !   Child: 0  Op: [ [type int] [line: 41]
!   !   !   !   Child: 0  Id: h is array [ref: Global, size: 11, loc: -2] [type int] [line: 41]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 41]
!   !   !   Child: 1  Const: 777 [type int] [line: 41]
!   !   Sibling: 28  Call: output [type void] [line: 42]
!   !   !   Child: 0  Op: [ [type int] [line: 42]
!   !   !   !   Child: 0  Id: h is array [ref: Global, size: 11, loc: -2] [type int] [line: 42]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 42]
!   !   Sibling: 29  Assign: += [type int] [line: 43]
!   !   !   Child: 0  Op: [ [type int] [line: 43]
!   !   !   !   Child: 0  Id: h is array [ref: Global, size: 11, loc: -2] [type int] [line: 43]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 43]
!   !   !   Child: 1  Const: 666 [type int] [line: 43]
!   !   Sibling: 30  Call: output [type void] [line: 44]
!   !   !   Child: 0  Op: [ [type int] [line: 44]
!   !   !   !   Child: 0  Id: h is array [ref: Global, size: 11, loc: -2] [type int] [line: 44]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 44]
!   !   Sibling: 31  Assign: -= [type int] [line: 45]
!   !   !   Child: 0  Op: [ [type int] [line: 45]
!   !   !   !   Child: 0  Id: h is array [ref: Global, size: 11, loc: -2] [type int] [line: 45]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 45]
!   !   !   Child: 1  Const: 666 [type int] [line: 45]
!   !   Sibling: 32  Call: output [type void] [line: 46]
!   !   !   Child: 0  Op: [ [type int] [line: 46]
!   !   !   !   Child: 0  Id: h is array [ref: Global, size: 11, loc: -2] [type int] [line: 46]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 46]
!   !   Sibling: 33  Call: outnl [type void] [line: 47]
!   !   Sibling: 34  Assign: = [type int] [line: 49]
!   !   !   Child: 0  Op: [ [type int] [line: 49]
!   !   !   !   Child: 0  Id: q is array [ref: Param, size: 1, loc: -3] [type int] [line: 49]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 49]
!   !   !   Child: 1  Const: 777 [type int] [line: 49]
!   !   Sibling: 35  Call: output [type void] [line: 50]
!   !   !   Child: 0  Op: [ [type int] [line: 50]
!   !   !   !   Child: 0  Id: q is array [ref: Param, size: 1, loc: -3] [type int] [line: 50]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 50]
!   !   Sibling: 36  Assign: += [type int] [line: 51]
!   !   !   Child: 0  Op: [ [type int] [line: 51]
!   !   !   !   Child: 0  Id: q is array [ref: Param, size: 1, loc: -3] [type int] [line: 51]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 51]
!   !   !   Child: 1  Const: 666 [type int] [line: 51]
!   !   Sibling: 37  Call: output [type void] [line: 52]
!   !   !   Child: 0  Op: [ [type int] [line: 52]
!   !   !   !   Child: 0  Id: q is array [ref: Param, size: 1, loc: -3] [type int] [line: 52]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 52]
!   !   Sibling: 38  Assign: -= [type int] [line: 53]
!   !   !   Child: 0  Op: [ [type int] [line: 53]
!   !   !   !   Child: 0  Id: q is array [ref: Param, size: 1, loc: -3] [type int] [line: 53]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 53]
!   !   !   Child: 1  Const: 666 [type int] [line: 53]
!   !   Sibling: 39  Call: output [type void] [line: 54]
!   !   !   Child: 0  Op: [ [type int] [line: 54]
!   !   !   !   Child: 0  Id: q is array [ref: Param, size: 1, loc: -3] [type int] [line: 54]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 54]
!   !   Sibling: 40  Call: outnl [type void] [line: 55]
!   !   Sibling: 41  Assign: = [type int] [line: 57]
!   !   !   Child: 0  Op: [ [type int] [line: 57]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 57]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 57]
!   !   !   Child: 1  Const: 3 [type int] [line: 57]
!   !   Sibling: 42  Assign: = [type int] [line: 58]
!   !   !   Child: 0  Op: [ [type int] [line: 58]
!   !   !   !   Child: 0  Id: q is array [ref: Param, size: 1, loc: -3] [type int] [line: 58]
!   !   !   !   Child: 1  Op: + [type int] [line: 58]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 58]
!   !   !   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 58]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 58]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 58]
!   !   !   Child: 1  Const: 777 [type int] [line: 58]
!   !   Sibling: 43  Call: output [type void] [line: 59]
!   !   !   Child: 0  Op: [ [type int] [line: 59]
!   !   !   !   Child: 0  Id: q is array [ref: Param, size: 1, loc: -3] [type int] [line: 59]
!   !   !   !   Child: 1  Op: + [type int] [line: 59]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 59]
!   !   !   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 59]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 59]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 59]
!   !   Sibling: 44  Assign: += [type int] [line: 60]
!   !   !   Child: 0  Op: [ [type int] [line: 60]
!   !   !   !   Child: 0  Id: q is array [ref: Param, size: 1, loc: -3] [type int] [line: 60]
!   !   !   !   Child: 1  Op: + [type int] [line: 60]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 60]
!   !   !   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 60]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 60]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 60]
!   !   !   Child: 1  Const: 666 [type int] [line: 60]
!   !   Sibling: 45  Call: output [type void] [line: 61]
!   !   !   Child: 0  Op: [ [type int] [line: 61]
!   !   !   !   Child: 0  Id: q is array [ref: Param, size: 1, loc: -3] [type int] [line: 61]
!   !   !   !   Child: 1  Op: + [type int] [line: 61]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 61]
!   !   !   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 61]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 61]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 61]
!   !   Sibling: 46  Assign: -= [type int] [line: 62]
!   !   !   Child: 0  Op: [ [type int] [line: 62]
!   !   !   !   Child: 0  Id: q is array [ref: Param, size: 1, loc: -3] [type int] [line: 62]
!   !   !   !   Child: 1  Op: + [type int] [line: 62]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 62]
!   !   !   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 62]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 62]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 62]
!   !   !   Child: 1  Const: 666 [type int] [line: 62]
!   !   Sibling: 47  Call: output [type void] [line: 63]
!   !   !   Child: 0  Op: [ [type int] [line: 63]
!   !   !   !   Child: 0  Id: q is array [ref: Param, size: 1, loc: -3] [type int] [line: 63]
!   !   !   !   Child: 1  Op: + [type int] [line: 63]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 63]
!   !   !   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 63]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 63]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 63]
!   !   Sibling: 48  Call: outnl [type void] [line: 64]
!   !   Sibling: 49  Assign: = [type int] [line: 66]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -16] [type int] [line: 66]
!   !   !   Child: 1  Assign: = [type int] [line: 66]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -4] [type int] [line: 66]
!   !   !   !   Child: 1  Const: 777 [type int] [line: 66]
!   !   Sibling: 50  Call: output [type void] [line: 67]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -16] [type int] [line: 67]
!   !   Sibling: 51  Assign: = [type int] [line: 68]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -16] [type int] [line: 68]
!   !   !   Child: 1  Assign: += [type int] [line: 68]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -4] [type int] [line: 68]
!   !   !   !   Child: 1  Const: 666 [type int] [line: 68]
!   !   Sibling: 52  Call: output [type void] [line: 69]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -16] [type int] [line: 69]
!   !   Sibling: 53  Assign: = [type int] [line: 70]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -16] [type int] [line: 70]
!   !   !   Child: 1  Assign: -= [type int] [line: 70]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -4] [type int] [line: 70]
!   !   !   !   Child: 1  Const: 666 [type int] [line: 70]
!   !   Sibling: 54  Call: output [type void] [line: 71]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -16] [type int] [line: 71]
!   !   Sibling: 55  Call: outnl [type void] [line: 72]
!   !   Sibling: 56  Assign: = [type int] [line: 74]
!   !   !   Child: 0  Op: [ [type int] [line: 74]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 74]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 74]
!   !   !   Child: 1  Assign: = [type int] [line: 74]
!   !   !   !   Child: 0  Op: [ [type int] [line: 74]
!   !   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 74]
!   !   !   !   !   Child: 1  Const: 2 [type int] [line: 74]
!   !   !   !   Child: 1  Const: 777 [type int] [line: 74]
!   !   Sibling: 57  Call: output [type void] [line: 75]
!   !   !   Child: 0  Op: [ [type int] [line: 75]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 75]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 75]
!   !   Sibling: 58  Assign: = [type int] [line: 76]
!   !   !   Child: 0  Op: [ [type int] [line: 76]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 76]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 76]
!   !   !   Child: 1  Assign: += [type int] [line: 76]
!   !   !   !   Child: 0  Op: [ [type int] [line: 76]
!   !   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 76]
!   !   !   !   !   Child: 1  Const: 2 [type int] [line: 76]
!   !   !   !   Child: 1  Const: 666 [type int] [line: 76]
!   !   Sibling: 59  Call: output [type void] [line: 77]
!   !   !   Child: 0  Op: [ [type int] [line: 77]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 77]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 77]
!   !   Sibling: 60  Assign: = [type int] [line: 78]
!   !   !   Child: 0  Op: [ [type int] [line: 78]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 78]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 78]
!   !   !   Child: 1  Assign: -= [type int] [line: 78]
!   !   !   !   Child: 0  Op: [ [type int] [line: 78]
!   !   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 78]
!   !   !   !   !   Child: 1  Const: 2 [type int] [line: 78]
!   !   !   !   Child: 1  Const: 666 [type int] [line: 78]
!   !   Sibling: 61  Call: output [type void] [line: 79]
!   !   !   Child: 0  Op: [ [type int] [line: 79]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 11, loc: -6] [type int] [line: 79]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 79]
!   !   Sibling: 62  Call: outnl [type void] [line: 80]
!   !   Sibling: 63  Assign: += [type int] [line: 82]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -4] [type int] [line: 82]
!   !   !   Child: 1  Op: * [type int] [line: 82]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -4] [type int] [line: 82]
!   !   !   !   Child: 1  Id: x [ref: Local, size: 1, loc: -16] [type int] [line: 82]
!   !   Sibling: 64  Call: output [type void] [line: 83]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -4] [type int] [line: 83]
!   !   Sibling: 65  Call: outnl [type void] [line: 84]
Sibling: 9  Func main [ref: Global, size: -24, loc: 0] [type void] [line: 87]
!   Child: 1  Compound [ref: None, size: -24, loc: 0] [type void] [line: 88]
!   !   Child: 0  Var: pp [ref: Local, size: 1, loc: -2] [type int] [line: 89]
!   !   Sibling: 0  Var: qq is array [ref: Local, size: 21, loc: -4] [type int] [line: 89]
!   !   Child: 1  Assign: = [type int] [line: 90]
!   !   !   Child: 0  Id: pp [ref: Local, size: 1, loc: -2] [type int] [line: 90]
!   !   !   Child: 1  Const: 888 [type int] [line: 90]
!   !   Sibling: 0  Assign: = [type int] [line: 91]
!   !   !   Child: 0  Op: [ [type int] [line: 91]
!   !   !   !   Child: 0  Id: qq is array [ref: Local, size: 21, loc: -4] [type int] [line: 91]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 91]
!   !   !   Child: 1  Const: 999 [type int] [line: 91]
!   !   Sibling: 1  Call: dog [type int] [line: 92]
!   !   !   Child: 0  Id: pp [ref: Local, size: 1, loc: -2] [type int] [line: 92]
!   !   !   Sibling: 0  Id: qq is array [ref: Local, size: 21, loc: -4] [type int] [line: 92]
!   !   Sibling: 2  Call: output [type void] [line: 93]
!   !   !   Child: 0  Id: pp [ref: Local, size: 1, loc: -2] [type int] [line: 93]
!   !   Sibling: 3  Call: output [type void] [line: 94]
!   !   !   Child: 0  Op: [ [type int] [line: 94]
!   !   !   !   Child: 0  Id: qq is array [ref: Local, size: 21, loc: -4] [type int] [line: 94]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 94]
!   !   Sibling: 4  Call: outnl [type void] [line: 95]
Offset for end of global space: -12
Number of warnings: 1
Number of errors: 0
