Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: x [ref: Global, size: 1, loc: 0] [type int] [line: 3]
Sibling: 7  Var: y [ref: Global, size: 1, loc: -1] [type int] [line: 4]
Sibling: 8  Var: z [ref: Global, size: 1, loc: -2] [type int] [line: 5]
Sibling: 9  Func agamemnon [ref: Global, size: -5, loc: 0] [type void] [line: 7]
!   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 8]
!   !   Child: 0  Var: a [ref: Local, size: 1, loc: -2] [type int] [line: 9]
!   !   Sibling: 0  Var: b [ref: Local, size: 1, loc: -3] [type int] [line: 10]
!   !   Sibling: 1  Var: x [ref: Local, size: 1, loc: -4] [type int] [line: 11]
!   !   Child: 1  Assign: = [type int] [line: 13]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 13]
!   !   !   Child: 1  Const: 666 [type int] [line: 13]
!   !   Sibling: 0  Assign: = [type int] [line: 14]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 14]
!   !   !   Child: 1  Const: 666 [type int] [line: 14]
!   !   Sibling: 1  Assign: = [type int] [line: 15]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -4] [type int] [line: 15]
!   !   !   Child: 1  Const: 666 [type int] [line: 15]
!   !   Sibling: 2  Assign: = [type int] [line: 16]
!   !   !   Child: 0  Id: z [ref: Global, size: 1, loc: -2] [type int] [line: 16]
!   !   !   Child: 1  Const: 666 [type int] [line: 16]
!   !   Sibling: 3  Call: output [type void] [line: 18]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 18]
!   !   Sibling: 4  Call: output [type void] [line: 19]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 19]
!   !   Sibling: 5  Call: output [type void] [line: 20]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -4] [type int] [line: 20]
!   !   Sibling: 6  Call: output [type void] [line: 21]
!   !   !   Child: 0  Id: y [ref: Global, size: 1, loc: -1] [type int] [line: 21]
!   !   Sibling: 7  Call: output [type void] [line: 22]
!   !   !   Child: 0  Id: z [ref: Global, size: 1, loc: -2] [type int] [line: 22]
!   !   Sibling: 8  Assign: = [type int] [line: 23]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 23]
!   !   !   Child: 1  Const: 1 [type int] [line: 23]
!   !   Sibling: 9  Assign: = [type int] [line: 24]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 24]
!   !   !   Child: 1  Const: 2 [type int] [line: 24]
!   !   Sibling: 10  Assign: = [type int] [line: 25]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -4] [type int] [line: 25]
!   !   !   Child: 1  Const: 3 [type int] [line: 25]
!   !   Sibling: 11  Assign: = [type int] [line: 26]
!   !   !   Child: 0  Id: y [ref: Global, size: 1, loc: -1] [type int] [line: 26]
!   !   !   Child: 1  Const: 4 [type int] [line: 26]
!   !   Sibling: 12  Assign: = [type int] [line: 27]
!   !   !   Child: 0  Id: z [ref: Global, size: 1, loc: -2] [type int] [line: 27]
!   !   !   Child: 1  Const: 5 [type int] [line: 27]
Sibling: 10  Func main [ref: Global, size: -8, loc: 0] [type void] [line: 30]
!   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 31]
!   !   Child: 0  Var: a [ref: Local, size: 1, loc: -2] [type int] [line: 32]
!   !   Sibling: 0  Var: b [ref: Local, size: 1, loc: -3] [type int] [line: 33]
!   !   Sibling: 1  Var: z [ref: Local, size: 1, loc: -4] [type int] [line: 34]
!   !   Child: 1  Assign: = [type int] [line: 36]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 36]
!   !   !   Child: 1  Const: 6 [type int] [line: 36]
!   !   Sibling: 0  Assign: = [type int] [line: 37]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 37]
!   !   !   Child: 1  Const: 7 [type int] [line: 37]
!   !   Sibling: 1  Assign: = [type int] [line: 38]
!   !   !   Child: 0  Id: x [ref: Global, size: 1, loc: 0] [type int] [line: 38]
!   !   !   Child: 1  Const: 8 [type int] [line: 38]
!   !   Sibling: 2  Assign: = [type int] [line: 39]
!   !   !   Child: 0  Id: y [ref: Global, size: 1, loc: -1] [type int] [line: 39]
!   !   !   Child: 1  Const: 9 [type int] [line: 39]
!   !   Sibling: 3  Assign: = [type int] [line: 40]
!   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 40]
!   !   !   Child: 1  Const: 10 [type int] [line: 40]
!   !   Sibling: 4  Call: output [type void] [line: 42]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 42]
!   !   Sibling: 5  Call: output [type void] [line: 43]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 43]
!   !   Sibling: 6  Call: output [type void] [line: 44]
!   !   !   Child: 0  Id: x [ref: Global, size: 1, loc: 0] [type int] [line: 44]
!   !   Sibling: 7  Call: output [type void] [line: 45]
!   !   !   Child: 0  Id: y [ref: Global, size: 1, loc: -1] [type int] [line: 45]
!   !   Sibling: 8  Call: output [type void] [line: 46]
!   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 46]
!   !   Sibling: 9  Compound [ref: None, size: -8, loc: 0] [type void] [line: 47]
!   !   !   Child: 0  Var: a [ref: Local, size: 1, loc: -5] [type int] [line: 48]
!   !   !   Sibling: 0  Var: b [ref: Local, size: 1, loc: -6] [type int] [line: 49]
!   !   !   Sibling: 1  Var: z [ref: Local, size: 1, loc: -7] [type int] [line: 50]
!   !   !   Child: 1  Assign: = [type int] [line: 52]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -5] [type int] [line: 52]
!   !   !   !   Child: 1  Const: 666 [type int] [line: 52]
!   !   !   Sibling: 0  Assign: = [type int] [line: 53]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -6] [type int] [line: 53]
!   !   !   !   Child: 1  Const: 666 [type int] [line: 53]
!   !   !   Sibling: 1  Assign: = [type int] [line: 54]
!   !   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -7] [type int] [line: 54]
!   !   !   !   Child: 1  Const: 666 [type int] [line: 54]
!   !   !   Sibling: 2  Call: output [type void] [line: 56]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -5] [type int] [line: 56]
!   !   !   Sibling: 3  Call: output [type void] [line: 57]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -6] [type int] [line: 57]
!   !   !   Sibling: 4  Call: output [type void] [line: 58]
!   !   !   !   Child: 0  Id: x [ref: Global, size: 1, loc: 0] [type int] [line: 58]
!   !   !   Sibling: 5  Call: output [type void] [line: 59]
!   !   !   !   Child: 0  Id: y [ref: Global, size: 1, loc: -1] [type int] [line: 59]
!   !   !   Sibling: 6  Call: output [type void] [line: 60]
!   !   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -7] [type int] [line: 60]
!   !   !   Sibling: 7  Assign: = [type int] [line: 62]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -5] [type int] [line: 62]
!   !   !   !   Child: 1  Const: 11 [type int] [line: 62]
!   !   !   Sibling: 8  Assign: = [type int] [line: 63]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -6] [type int] [line: 63]
!   !   !   !   Child: 1  Const: 12 [type int] [line: 63]
!   !   !   Sibling: 9  Assign: = [type int] [line: 64]
!   !   !   !   Child: 0  Id: x [ref: Global, size: 1, loc: 0] [type int] [line: 64]
!   !   !   !   Child: 1  Const: 13 [type int] [line: 64]
!   !   !   Sibling: 10  Assign: = [type int] [line: 65]
!   !   !   !   Child: 0  Id: y [ref: Global, size: 1, loc: -1] [type int] [line: 65]
!   !   !   !   Child: 1  Const: 14 [type int] [line: 65]
!   !   !   Sibling: 11  Assign: = [type int] [line: 66]
!   !   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -7] [type int] [line: 66]
!   !   !   !   Child: 1  Const: 15 [type int] [line: 66]
!   !   !   Sibling: 12  Call: output [type void] [line: 67]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -5] [type int] [line: 67]
!   !   !   Sibling: 13  Call: output [type void] [line: 68]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -6] [type int] [line: 68]
!   !   !   Sibling: 14  Call: output [type void] [line: 69]
!   !   !   !   Child: 0  Id: x [ref: Global, size: 1, loc: 0] [type int] [line: 69]
!   !   !   Sibling: 15  Call: output [type void] [line: 70]
!   !   !   !   Child: 0  Id: y [ref: Global, size: 1, loc: -1] [type int] [line: 70]
!   !   !   Sibling: 16  Call: output [type void] [line: 71]
!   !   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -7] [type int] [line: 71]
!   !   !   Sibling: 17  Compound [ref: None, size: -8, loc: 0] [type void] [line: 72]
!   !   !   !   Child: 1  Call: output [type void] [line: 73]
!   !   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -5] [type int] [line: 73]
!   !   !   !   Sibling: 0  Call: output [type void] [line: 74]
!   !   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -6] [type int] [line: 74]
!   !   !   !   Sibling: 1  Call: output [type void] [line: 75]
!   !   !   !   !   Child: 0  Id: x [ref: Global, size: 1, loc: 0] [type int] [line: 75]
!   !   !   !   Sibling: 2  Call: output [type void] [line: 76]
!   !   !   !   !   Child: 0  Id: y [ref: Global, size: 1, loc: -1] [type int] [line: 76]
!   !   !   !   Sibling: 3  Call: output [type void] [line: 77]
!   !   !   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -7] [type int] [line: 77]
!   !   !   !   Sibling: 4  Assign: = [type int] [line: 79]
!   !   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -5] [type int] [line: 79]
!   !   !   !   !   Child: 1  Const: 16 [type int] [line: 79]
!   !   !   !   Sibling: 5  Assign: = [type int] [line: 80]
!   !   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -6] [type int] [line: 80]
!   !   !   !   !   Child: 1  Const: 17 [type int] [line: 80]
!   !   !   !   Sibling: 6  Assign: = [type int] [line: 81]
!   !   !   !   !   Child: 0  Id: x [ref: Global, size: 1, loc: 0] [type int] [line: 81]
!   !   !   !   !   Child: 1  Const: 18 [type int] [line: 81]
!   !   !   !   Sibling: 7  Assign: = [type int] [line: 82]
!   !   !   !   !   Child: 0  Id: y [ref: Global, size: 1, loc: -1] [type int] [line: 82]
!   !   !   !   !   Child: 1  Const: 19 [type int] [line: 82]
!   !   !   !   Sibling: 8  Assign: = [type int] [line: 83]
!   !   !   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -7] [type int] [line: 83]
!   !   !   !   !   Child: 1  Const: 20 [type int] [line: 83]
!   !   !   !   Sibling: 9  Call: output [type void] [line: 84]
!   !   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -5] [type int] [line: 84]
!   !   !   !   Sibling: 10  Call: output [type void] [line: 85]
!   !   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -6] [type int] [line: 85]
!   !   !   !   Sibling: 11  Call: output [type void] [line: 86]
!   !   !   !   !   Child: 0  Id: x [ref: Global, size: 1, loc: 0] [type int] [line: 86]
!   !   !   !   Sibling: 12  Call: output [type void] [line: 87]
!   !   !   !   !   Child: 0  Id: y [ref: Global, size: 1, loc: -1] [type int] [line: 87]
!   !   !   !   Sibling: 13  Call: output [type void] [line: 88]
!   !   !   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -7] [type int] [line: 88]
!   !   !   Sibling: 18  Call: output [type void] [line: 90]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -5] [type int] [line: 90]
!   !   !   Sibling: 19  Call: output [type void] [line: 91]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -6] [type int] [line: 91]
!   !   !   Sibling: 20  Call: output [type void] [line: 92]
!   !   !   !   Child: 0  Id: x [ref: Global, size: 1, loc: 0] [type int] [line: 92]
!   !   !   Sibling: 21  Call: output [type void] [line: 93]
!   !   !   !   Child: 0  Id: y [ref: Global, size: 1, loc: -1] [type int] [line: 93]
!   !   !   Sibling: 22  Call: output [type void] [line: 94]
!   !   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -7] [type int] [line: 94]
!   !   !   Sibling: 23  Call: agamemnon [type void] [line: 96]
!   !   !   Sibling: 24  Call: output [type void] [line: 98]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -5] [type int] [line: 98]
!   !   !   Sibling: 25  Call: output [type void] [line: 99]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -6] [type int] [line: 99]
!   !   !   Sibling: 26  Call: output [type void] [line: 100]
!   !   !   !   Child: 0  Id: x [ref: Global, size: 1, loc: 0] [type int] [line: 100]
!   !   !   Sibling: 27  Call: output [type void] [line: 101]
!   !   !   !   Child: 0  Id: y [ref: Global, size: 1, loc: -1] [type int] [line: 101]
!   !   !   Sibling: 28  Call: output [type void] [line: 102]
!   !   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -7] [type int] [line: 102]
Offset for end of global space: -3
Number of warnings: 0
Number of errors: 0
