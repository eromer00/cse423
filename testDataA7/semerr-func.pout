ERROR(10): Function 'bat' at line 8 is expecting to return type bool but instead returns type int.
ERROR(56): Expecting type int in parameter 2 of call to 'dog' defined on line 18 but got type bool.
ERROR(56): Expecting array in parameter 2 of call to 'dog' defined on line 18.
ERROR(56): Expecting type bool in parameter 3 of call to 'dog' defined on line 18 but got type int.
ERROR(56): Not expecting array in parameter 3 of call to 'dog' defined on line 18.
Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func ant [ref: Global, size: -2, loc: 0] [type int] [line: 3]
!   Child: 1  Compound [ref: None, size: -2, loc: 0] [type void] [line: 4]
!   !   Child: 1  Return [type void] [line: 5]
!   !   !   Child: 0  Const: 0 [type int] [line: 5]
Sibling: 7  Func bat [ref: Global, size: -3, loc: 0] [type bool] [line: 8]
!   Child: 0  Param x [ref: Param, size: 1, loc: -2] [type int] [line: 8]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 9]
!   !   Child: 1  Return [type void] [line: 10]
!   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 10]
Sibling: 8  Func cat [ref: Global, size: -3, loc: 0] [type void] [line: 13]
!   Child: 0  Param x [ref: Param, size: 1, loc: -2] [type bool] [line: 13]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 14]
!   !   Child: 1  Return [type void] [line: 15]
Sibling: 9  Func dog [ref: Global, size: -6, loc: 0] [type int] [line: 18]
!   Child: 0  Param a [ref: Param, size: 1, loc: -2] [type int] [line: 18]
!   Sibling: 0  Param b is array [ref: Param, size: 1, loc: -3] [type int] [line: 18]
!   Sibling: 1  Param c [ref: Param, size: 1, loc: -4] [type bool] [line: 18]
!   Sibling: 2  Param d is array [ref: Param, size: 1, loc: -5] [type bool] [line: 18]
!   Child: 1  Compound [ref: None, size: -6, loc: 0] [type void] [line: 19]
!   !   Child: 1  Return [type void] [line: 20]
!   !   !   Child: 0  Id: a [ref: Param, size: 1, loc: -2] [type int] [line: 20]
Sibling: 10  Var: eel [ref: Global, size: 1, loc: 0] [type int] [line: 23]
Sibling: 11  Var: fox is array [ref: Global, size: 12, loc: -2] [type bool] [line: 24]
Sibling: 12  Func gnu [ref: Global, size: -2, loc: 0] [type void] [line: 26]
!   Child: 1  Compound [ref: None, size: -2, loc: 0] [type void] [line: 27]
!   !   Child: 1  Assign: = [type int] [line: 28]
!   !   !   Child: 0  Id: eel [ref: Global, size: 1, loc: 0] [type int] [line: 28]
!   !   !   Child: 1  Op: + [type int] [line: 28]
!   !   !   !   Child: 0  Id: eel [ref: Global, size: 1, loc: 0] [type int] [line: 28]
!   !   !   !   Child: 1  Const: 666 [type int] [line: 28]
!   !   Sibling: 0  Return [type void] [line: 29]
Sibling: 13  Func hog [ref: Global, size: -3, loc: 0] [type void] [line: 32]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 33]
!   !   Child: 0  Var: ibex [ref: Local, size: 1, loc: -2] [type int] [line: 34]
Sibling: 14  Func junko [ref: Global, size: -2, loc: 0] [type void] [line: 37]
!   Child: 1  Compound [ref: None, size: -2, loc: 0] [type void] [line: 38]
Sibling: 15  Func max [ref: Global, size: -5, loc: 0] [type int] [line: 41]
!   Child: 0  Param x [ref: Param, size: 1, loc: -2] [type int] [line: 41]
!   Sibling: 0  Param y [ref: Param, size: 1, loc: -3] [type int] [line: 41]
!   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 41]
!   !   Child: 0  Var: z [ref: Local, size: 1, loc: -4] [type int] [line: 42]
!   !   Child: 1  If  [type void] [line: 44]
!   !   !   Child: 0  Op: > [type bool] [line: 44]
!   !   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 44]
!   !   !   !   Child: 1  Id: y [ref: Param, size: 1, loc: -3] [type int] [line: 44]
!   !   !   Child: 1  Assign: = [type int] [line: 44]
!   !   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 44]
!   !   !   !   Child: 1  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 44]
!   !   !   Child: 2  Assign: = [type int] [line: 44]
!   !   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 44]
!   !   !   !   Child: 1  Id: y [ref: Param, size: 1, loc: -3] [type int] [line: 44]
!   !   Sibling: 0  Return [type void] [line: 45]
!   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 45]
Sibling: 16  Func main [ref: Global, size: -16, loc: 0] [type void] [line: 48]
!   Child: 1  Compound [ref: None, size: -16, loc: 0] [type void] [line: 49]
!   !   Child: 0  Var: a is array [ref: Local, size: 6, loc: -3] [type int] [line: 50]
!   !   Sibling: 0  Var: b is array [ref: Local, size: 8, loc: -9] [type bool] [line: 51]
!   !   Child: 1  Call: ant [type int] [line: 53]
!   !   Sibling: 0  Call: bat [type bool] [line: 54]
!   !   !   Child: 0  Const: 2 [type int] [line: 54]
!   !   Sibling: 1  Call: cat [type void] [line: 55]
!   !   !   Child: 0  Const: true [type bool] [line: 55]
!   !   Sibling: 2  Call: dog [type int] [line: 56]
!   !   !   Child: 0  Const: 3 [type int] [line: 56]
!   !   !   Sibling: 0  Const: false [type bool] [line: 56]
!   !   !   Sibling: 1  Id: a is array [ref: Local, size: 6, loc: -3] [type int] [line: 56]
!   !   !   Sibling: 2  Id: b is array [ref: Local, size: 8, loc: -9] [type bool] [line: 56]
Offset for end of global space: -13
Number of warnings: 0
Number of errors: 5
