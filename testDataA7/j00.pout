Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func cat [ref: Global, size: -4, loc: 0] [type int] [line: 1]
!   Child: 0  Param x is array [ref: Param, size: 1, loc: -2] [type int] [line: 1]
!   Sibling: 0  Param i [ref: Param, size: 1, loc: -3] [type int] [line: 1]
!   Child: 1  Return [type void] [line: 1]
!   !   Child: 0  Op: [ [type int] [line: 1]
!   !   !   Child: 0  Id: x is array [ref: Param, size: 1, loc: -2] [type int] [line: 1]
!   !   !   Child: 1  Id: i [ref: Param, size: 1, loc: -3] [type int] [line: 1]
Sibling: 7  Func dog [ref: Global, size: -4, loc: 0] [type int] [line: 3]
!   Child: 0  Param x is array [ref: Param, size: 1, loc: -2] [type int] [line: 3]
!   Sibling: 0  Param i [ref: Param, size: 1, loc: -3] [type int] [line: 3]
!   Child: 1  Return [type void] [line: 3]
!   !   Child: 0  Call: cat [type int] [line: 3]
!   !   !   Child: 0  Id: x is array [ref: Param, size: 1, loc: -2] [type int] [line: 3]
!   !   !   Sibling: 0  Id: i [ref: Param, size: 1, loc: -3] [type int] [line: 3]
Sibling: 8  Func fox [ref: Global, size: -4, loc: 0] [type int] [line: 5]
!   Child: 0  Param x is array [ref: Param, size: 1, loc: -2] [type int] [line: 5]
!   Sibling: 0  Param i [ref: Param, size: 1, loc: -3] [type int] [line: 5]
!   Child: 1  Return [type void] [line: 5]
!   !   Child: 0  Call: dog [type int] [line: 5]
!   !   !   Child: 0  Id: x is array [ref: Param, size: 1, loc: -2] [type int] [line: 5]
!   !   !   Sibling: 0  Id: i [ref: Param, size: 1, loc: -3] [type int] [line: 5]
Sibling: 9  Var: g is array [ref: Global, size: 11, loc: -1] [type int] [line: 7]
Sibling: 10  Func main [ref: Global, size: -25, loc: 0] [type void] [line: 8]
!   Child: 1  Compound [ref: None, size: -25, loc: 0] [type void] [line: 9]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -2] [type int] [line: 10]
!   !   Sibling: 0  Var: h is array [ref: Local, size: 11, loc: -4] [type int] [line: 11]
!   !   Sibling: 1  Var: s is array [ref: Local, size: 11, loc: -15] [type int] [line: 12]
!   !   Child: 1  Assign: = [type int] [line: 14]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 14]
!   !   !   Child: 1  Const: 1 [type int] [line: 14]
!   !   Sibling: 0  While  [type void] [line: 15]
!   !   !   Child: 0  Op: < [type bool] [line: 15]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 15]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 15]
!   !   !   Child: 1  Compound [ref: None, size: -25, loc: 0] [type void] [line: 15]
!   !   !   !   Child: 1  Assign: = [type int] [line: 16]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 16]
!   !   !   !   !   !   Child: 0  Id: h is array [ref: Local, size: 11, loc: -4] [type int] [line: 16]
!   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 16]
!   !   !   !   !   Child: 1  Assign: = [type int] [line: 16]
!   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 16]
!   !   !   !   !   !   !   Child: 0  Id: g is array [ref: Global, size: 11, loc: -1] [type int] [line: 16]
!   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 16]
!   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 16]
!   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 16]
!   !   !   !   !   !   !   !   Child: 0  Id: s is array [ref: Local, size: 11, loc: -15] [type int] [line: 16]
!   !   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 16]
!   !   !   !   !   !   !   Child: 1  Assign: ++ [type int] [line: 16]
!   !   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 16]
!   !   !   !   Sibling: 0  Call: output [type void] [line: 17]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 17]
!   !   !   !   Sibling: 1  Call: outnl [type void] [line: 18]
!   !   Sibling: 1  Call: output [type void] [line: 21]
!   !   !   Child: 0  Op: [ [type int] [line: 21]
!   !   !   !   Child: 0  Id: g is array [ref: Global, size: 11, loc: -1] [type int] [line: 21]
!   !   !   !   Child: 1  Const: 6 [type int] [line: 21]
!   !   Sibling: 2  Call: output [type void] [line: 22]
!   !   !   Child: 0  Op: [ [type int] [line: 22]
!   !   !   !   Child: 0  Id: h is array [ref: Local, size: 11, loc: -4] [type int] [line: 22]
!   !   !   !   Child: 1  Const: 6 [type int] [line: 22]
!   !   Sibling: 3  Call: output [type void] [line: 23]
!   !   !   Child: 0  Op: [ [type int] [line: 23]
!   !   !   !   Child: 0  Id: s is array [ref: Local, size: 11, loc: -15] [type int] [line: 23]
!   !   !   !   Child: 1  Const: 6 [type int] [line: 23]
!   !   Sibling: 4  Call: outnl [type void] [line: 24]
!   !   Sibling: 5  Call: output [type void] [line: 26]
!   !   !   Child: 0  Call: cat [type int] [line: 26]
!   !   !   !   Child: 0  Id: g is array [ref: Global, size: 11, loc: -1] [type int] [line: 26]
!   !   !   !   Sibling: 0  Const: 6 [type int] [line: 26]
!   !   Sibling: 6  Call: output [type void] [line: 27]
!   !   !   Child: 0  Call: cat [type int] [line: 27]
!   !   !   !   Child: 0  Id: h is array [ref: Local, size: 11, loc: -4] [type int] [line: 27]
!   !   !   !   Sibling: 0  Const: 6 [type int] [line: 27]
!   !   Sibling: 7  Call: output [type void] [line: 28]
!   !   !   Child: 0  Call: cat [type int] [line: 28]
!   !   !   !   Child: 0  Id: s is array [ref: Local, size: 11, loc: -15] [type int] [line: 28]
!   !   !   !   Sibling: 0  Const: 6 [type int] [line: 28]
!   !   Sibling: 8  Call: outnl [type void] [line: 29]
!   !   Sibling: 9  Call: output [type void] [line: 31]
!   !   !   Child: 0  Call: dog [type int] [line: 31]
!   !   !   !   Child: 0  Id: g is array [ref: Global, size: 11, loc: -1] [type int] [line: 31]
!   !   !   !   Sibling: 0  Const: 6 [type int] [line: 31]
!   !   Sibling: 10  Call: output [type void] [line: 32]
!   !   !   Child: 0  Call: dog [type int] [line: 32]
!   !   !   !   Child: 0  Id: h is array [ref: Local, size: 11, loc: -4] [type int] [line: 32]
!   !   !   !   Sibling: 0  Const: 6 [type int] [line: 32]
!   !   Sibling: 11  Call: output [type void] [line: 33]
!   !   !   Child: 0  Call: dog [type int] [line: 33]
!   !   !   !   Child: 0  Id: s is array [ref: Local, size: 11, loc: -15] [type int] [line: 33]
!   !   !   !   Sibling: 0  Const: 6 [type int] [line: 33]
!   !   Sibling: 12  Call: outnl [type void] [line: 34]
!   !   Sibling: 13  Call: output [type void] [line: 36]
!   !   !   Child: 0  Call: fox [type int] [line: 36]
!   !   !   !   Child: 0  Id: g is array [ref: Global, size: 11, loc: -1] [type int] [line: 36]
!   !   !   !   Sibling: 0  Const: 6 [type int] [line: 36]
!   !   Sibling: 14  Call: output [type void] [line: 37]
!   !   !   Child: 0  Call: fox [type int] [line: 37]
!   !   !   !   Child: 0  Id: h is array [ref: Local, size: 11, loc: -4] [type int] [line: 37]
!   !   !   !   Sibling: 0  Const: 6 [type int] [line: 37]
!   !   Sibling: 15  Call: output [type void] [line: 38]
!   !   !   Child: 0  Call: fox [type int] [line: 38]
!   !   !   !   Child: 0  Id: s is array [ref: Local, size: 11, loc: -15] [type int] [line: 38]
!   !   !   !   Sibling: 0  Const: 6 [type int] [line: 38]
!   !   Sibling: 16  Call: outnl [type void] [line: 39]
Offset for end of global space: -11
Number of warnings: 0
Number of errors: 0
