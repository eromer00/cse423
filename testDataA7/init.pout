Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: ga [ref: Global, size: 1, loc: 0] [type int] [line: 2]
!   Child: 0  Const: 111 [type int] [line: 2]
Sibling: 7  Var: gb [ref: Global, size: 1, loc: -1] [type bool] [line: 3]
!   Child: 0  Const: true [type bool] [line: 3]
Sibling: 8  Var: gc is array [ref: Global, size: 14, loc: -3] [type char] [line: 4]
Sibling: 9  Func main [ref: Global, size: -59, loc: 0] [type void] [line: 6]
!   Child: 1  Compound [ref: None, size: -37, loc: 0] [type void] [line: 6]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -2] [type int] [line: 7]
!   !   !   Child: 0  Const: 666 [type int] [line: 7]
!   !   Sibling: 0  Var: y [ref: Local, size: 1, loc: -3] [type char] [line: 8]
!   !   !   Child: 0  Const: 'a' [type char] [line: 8]
!   !   Sibling: 1  Var: ba [ref: Local, size: 1, loc: -4] [type bool] [line: 9]
!   !   !   Child: 0  Const: true [type bool] [line: 9]
!   !   Sibling: 2  Var: bb [ref: Local, size: 1, loc: -5] [type bool] [line: 9]
!   !   !   Child: 0  Op: and [type bool] [line: 9]
!   !   !   !   Child: 0  Const: true [type bool] [line: 9]
!   !   !   !   Child: 1  Op: not [type bool] [line: 9]
!   !   !   !   !   Child: 0  Const: false [type bool] [line: 9]
!   !   Sibling: 3  Var: bc [ref: Local, size: 1, loc: -6] [type bool] [line: 9]
!   !   !   Child: 0  Op: > [type bool] [line: 9]
!   !   !   !   Child: 0  Const: 5 [type int] [line: 9]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 9]
!   !   Sibling: 4  Var: x is array [ref: Local, size: 11, loc: -8] [type int] [line: 10]
!   !   Sibling: 5  Var: k [ref: Local, size: 1, loc: -18] [type int] [line: 11]
!   !   !   Child: 0  Op: + [type int] [line: 11]
!   !   !   !   Child: 0  Op: * [type int] [line: 11]
!   !   !   !   !   Child: 0  Const: 4 [type int] [line: 11]
!   !   !   !   !   Child: 1  Const: 5 [type int] [line: 11]
!   !   !   !   Child: 1  Op: * [type int] [line: 11]
!   !   !   !   !   Child: 0  Const: 3 [type int] [line: 11]
!   !   !   !   !   Child: 1  Const: 2 [type int] [line: 11]
!   !   Sibling: 6  Var: l [ref: Local, size: 1, loc: -19] [type int] [line: 11]
!   !   !   Child: 0  Op: - [type int] [line: 11]
!   !   !   !   Child: 0  Const: 46 [type int] [line: 11]
!   !   Sibling: 7  Var: sia [ref: Local, size: 1, loc: -20] [type int] [line: 13]
!   !   !   Child: 0  Const: 666 [type int] [line: 13]
!   !   Sibling: 8  Var: sib is array [ref: Local, size: 16, loc: -22] [type int] [line: 14]
!   !   Child: 1  Call: output [type void] [line: 16]
!   !   !   Child: 0  Id: ga [ref: Global, size: 1, loc: 0] [type int] [line: 16]
!   !   Sibling: 0  Call: outnl [type void] [line: 17]
!   !   Sibling: 1  Call: outputb [type void] [line: 18]
!   !   !   Child: 0  Id: gb [ref: Global, size: 1, loc: -1] [type bool] [line: 18]
!   !   Sibling: 2  Call: outnl [type void] [line: 19]
!   !   Sibling: 3  Call: output [type void] [line: 20]
!   !   !   Child: 0  Op: * [type int] [line: 20]
!   !   !   !   Child: 0  Id: gc is array [ref: Global, size: 14, loc: -3] [type char] [line: 20]
!   !   Sibling: 4  Call: outnl [type void] [line: 21]
!   !   Sibling: 5  Call: output [type void] [line: 22]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 22]
!   !   Sibling: 6  Call: outnl [type void] [line: 23]
!   !   Sibling: 7  Call: outputc [type void] [line: 24]
!   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type char] [line: 24]
!   !   Sibling: 8  Call: outnl [type void] [line: 25]
!   !   Sibling: 9  Call: outputb [type void] [line: 26]
!   !   !   Child: 0  Id: ba [ref: Local, size: 1, loc: -4] [type bool] [line: 26]
!   !   Sibling: 10  Call: outnl [type void] [line: 27]
!   !   Sibling: 11  Call: outputb [type void] [line: 28]
!   !   !   Child: 0  Id: bb [ref: Local, size: 1, loc: -5] [type bool] [line: 28]
!   !   Sibling: 12  Call: outnl [type void] [line: 29]
!   !   Sibling: 13  Call: outputb [type void] [line: 30]
!   !   !   Child: 0  Id: bc [ref: Local, size: 1, loc: -6] [type bool] [line: 30]
!   !   Sibling: 14  Call: outnl [type void] [line: 31]
!   !   Sibling: 15  Call: output [type void] [line: 32]
!   !   !   Child: 0  Op: * [type int] [line: 32]
!   !   !   !   Child: 0  Id: x is array [ref: Local, size: 11, loc: -8] [type int] [line: 32]
!   !   Sibling: 16  Call: outnl [type void] [line: 33]
!   !   Sibling: 17  Call: output [type void] [line: 34]
!   !   !   Child: 0  Id: k [ref: Local, size: 1, loc: -18] [type int] [line: 34]
!   !   Sibling: 18  Call: outnl [type void] [line: 35]
!   !   Sibling: 19  Call: output [type void] [line: 36]
!   !   !   Child: 0  Id: l [ref: Local, size: 1, loc: -19] [type int] [line: 36]
!   !   Sibling: 20  Call: outnl [type void] [line: 37]
!   !   Sibling: 21  Call: output [type void] [line: 38]
!   !   !   Child: 0  Id: sia [ref: Local, size: 1, loc: -20] [type int] [line: 38]
!   !   Sibling: 22  Call: outnl [type void] [line: 39]
!   !   Sibling: 23  Call: output [type void] [line: 40]
!   !   !   Child: 0  Op: * [type int] [line: 40]
!   !   !   !   Child: 0  Id: sib is array [ref: Local, size: 16, loc: -22] [type int] [line: 40]
!   !   Sibling: 24  Call: outnl [type void] [line: 41]
!   !   Sibling: 25  Compound [ref: None, size: -59, loc: 0] [type void] [line: 43]
!   !   !   Child: 0  Var: y is array [ref: Local, size: 21, loc: -38] [type int] [line: 44]
!   !   !   Sibling: 0  Var: t [ref: Local, size: 1, loc: -58] [type bool] [line: 45]
!   !   !   !   Child: 0  Op: not [type bool] [line: 45]
!   !   !   !   !   Child: 0  Const: true [type bool] [line: 45]
!   !   !   Child: 1  Call: output [type void] [line: 47]
!   !   !   !   Child: 0  Op: * [type int] [line: 47]
!   !   !   !   !   Child: 0  Id: y is array [ref: Local, size: 21, loc: -38] [type int] [line: 47]
!   !   !   Sibling: 0  Call: outnl [type void] [line: 48]
!   !   !   Sibling: 1  Call: outputb [type void] [line: 49]
!   !   !   !   Child: 0  Id: t [ref: Local, size: 1, loc: -58] [type bool] [line: 49]
!   !   !   Sibling: 2  Call: outnl [type void] [line: 50]
Offset for end of global space: -16
Number of warnings: 0
Number of errors: 0
