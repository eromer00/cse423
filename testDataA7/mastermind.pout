Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: turns [ref: Global, size: 1, loc: 0] [type int] [line: 32]
Sibling: 7  Var: n [ref: Global, size: 1, loc: -1] [type int] [line: 32]
Sibling: 8  Var: r is array [ref: Global, size: 129, loc: -3] [type int] [line: 32]
Sibling: 9  Var: known is array [ref: Global, size: 5, loc: -132] [type int] [line: 32]
Sibling: 10  Var: guess is array [ref: Global, size: 5, loc: -137] [type int] [line: 32]
Sibling: 11  Func rand [ref: Global, size: -2, loc: 0] [type int] [line: 40]
!   Child: 1  Compound [ref: None, size: -2, loc: 0] [type void] [line: 41]
!   !   Child: 1  If  [type void] [line: 42]
!   !   !   Child: 0  Op: < [type bool] [line: 42]
!   !   !   !   Child: 0  Id: n [ref: Global, size: 1, loc: -1] [type int] [line: 42]
!   !   !   !   Child: 1  Const: 0 [type int] [line: 42]
!   !   !   Child: 1  Assign: = [type int] [line: 42]
!   !   !   !   Child: 0  Id: n [ref: Global, size: 1, loc: -1] [type int] [line: 42]
!   !   !   !   Child: 1  Op: - [type int] [line: 42]
!   !   !   !   !   Child: 0  Id: n [ref: Global, size: 1, loc: -1] [type int] [line: 42]
!   !   Sibling: 0  If  [type void] [line: 43]
!   !   !   Child: 0  Op: > [type bool] [line: 43]
!   !   !   !   Child: 0  Id: n [ref: Global, size: 1, loc: -1] [type int] [line: 43]
!   !   !   !   Child: 1  Const: 128 [type int] [line: 43]
!   !   !   Child: 1  Assign: = [type int] [line: 43]
!   !   !   !   Child: 0  Id: n [ref: Global, size: 1, loc: -1] [type int] [line: 43]
!   !   !   !   Child: 1  Op: % [type int] [line: 43]
!   !   !   !   !   Child: 0  Id: n [ref: Global, size: 1, loc: -1] [type int] [line: 43]
!   !   !   !   !   Child: 1  Const: 128 [type int] [line: 43]
!   !   Sibling: 1  Assign: ++ [type int] [line: 44]
!   !   !   Child: 0  Id: n [ref: Global, size: 1, loc: -1] [type int] [line: 44]
!   !   Sibling: 2  Assign: = [type int] [line: 45]
!   !   !   Child: 0  Op: [ [type int] [line: 45]
!   !   !   !   Child: 0  Id: r is array [ref: Global, size: 129, loc: -3] [type int] [line: 45]
!   !   !   !   Child: 1  Id: n [ref: Global, size: 1, loc: -1] [type int] [line: 45]
!   !   !   Child: 1  Op: % [type int] [line: 45]
!   !   !   !   Child: 0  Op: + [type int] [line: 45]
!   !   !   !   !   Child: 0  Op: * [type int] [line: 45]
!   !   !   !   !   !   Child: 0  Const: 1366 [type int] [line: 45]
!   !   !   !   !   !   Child: 1  Op: [ [type int] [line: 45]
!   !   !   !   !   !   !   Child: 0  Id: r is array [ref: Global, size: 129, loc: -3] [type int] [line: 45]
!   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 45]
!   !   !   !   !   !   !   !   Child: 0  Id: n [ref: Global, size: 1, loc: -1] [type int] [line: 45]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 45]
!   !   !   !   !   Child: 1  Const: 150889 [type int] [line: 45]
!   !   !   !   Child: 1  Const: 714025 [type int] [line: 45]
!   !   Sibling: 3  Return [type void] [line: 46]
!   !   !   Child: 0  Op: [ [type int] [line: 46]
!   !   !   !   Child: 0  Id: r is array [ref: Global, size: 129, loc: -3] [type int] [line: 46]
!   !   !   !   Child: 1  Id: n [ref: Global, size: 1, loc: -1] [type int] [line: 46]
Sibling: 12  Func search [ref: Global, size: -5, loc: 0] [type bool] [line: 49]
!   Child: 0  Param a is array [ref: Param, size: 1, loc: -2] [type int] [line: 49]
!   Sibling: 0  Param k [ref: Param, size: 1, loc: -3] [type int] [line: 49]
!   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 50]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -4] [type int] [line: 51]
!   !   Child: 1  Assign: = [type int] [line: 54]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -4] [type int] [line: 54]
!   !   !   Child: 1  Const: 0 [type int] [line: 54]
!   !   Sibling: 0  While  [type void] [line: 55]
!   !   !   Child: 0  Op: < [type bool] [line: 55]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -4] [type int] [line: 55]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 55]
!   !   !   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 55]
!   !   !   !   Child: 1  If  [type void] [line: 56]
!   !   !   !   !   Child: 0  Op: == [type bool] [line: 56]
!   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 56]
!   !   !   !   !   !   !   Child: 0  Id: a is array [ref: Param, size: 1, loc: -2] [type int] [line: 56]
!   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -4] [type int] [line: 56]
!   !   !   !   !   !   Child: 1  Id: k [ref: Param, size: 1, loc: -3] [type int] [line: 56]
!   !   !   !   !   Child: 1  Return [type void] [line: 56]
!   !   !   !   !   !   Child: 0  Const: true [type bool] [line: 56]
!   !   !   !   Sibling: 0  Assign: ++ [type int] [line: 57]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -4] [type int] [line: 57]
!   !   Sibling: 1  Return [type void] [line: 60]
!   !   !   Child: 0  Const: false [type bool] [line: 60]
Sibling: 13  Func check [ref: Global, size: -5, loc: 0] [type bool] [line: 63]
!   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 64]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -2] [type int] [line: 65]
!   !   Sibling: 0  Var: c1 [ref: Local, size: 1, loc: -3] [type int] [line: 65]
!   !   Sibling: 1  Var: c2 [ref: Local, size: 1, loc: -4] [type int] [line: 65]
!   !   Child: 1  Assign: = [type int] [line: 68]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 68]
!   !   !   Child: 1  Assign: = [type int] [line: 68]
!   !   !   !   Child: 0  Id: c1 [ref: Local, size: 1, loc: -3] [type int] [line: 68]
!   !   !   !   Child: 1  Assign: = [type int] [line: 68]
!   !   !   !   !   Child: 0  Id: c2 [ref: Local, size: 1, loc: -4] [type int] [line: 68]
!   !   !   !   !   Child: 1  Const: 0 [type int] [line: 68]
!   !   Sibling: 0  While  [type void] [line: 69]
!   !   !   Child: 0  Op: < [type bool] [line: 69]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 69]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 69]
!   !   !   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 69]
!   !   !   !   Child: 1  If  [type void] [line: 70]
!   !   !   !   !   Child: 0  Op: == [type bool] [line: 70]
!   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 70]
!   !   !   !   !   !   !   Child: 0  Id: known is array [ref: Global, size: 5, loc: -132] [type int] [line: 70]
!   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 70]
!   !   !   !   !   !   Child: 1  Op: [ [type int] [line: 70]
!   !   !   !   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 5, loc: -137] [type int] [line: 70]
!   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 70]
!   !   !   !   !   Child: 1  Assign: ++ [type int] [line: 70]
!   !   !   !   !   !   Child: 0  Id: c2 [ref: Local, size: 1, loc: -4] [type int] [line: 70]
!   !   !   !   !   Child: 2  If  [type void] [line: 71]
!   !   !   !   !   !   Child: 0  Call: search [type bool] [line: 71]
!   !   !   !   !   !   !   Child: 0  Id: known is array [ref: Global, size: 5, loc: -132] [type int] [line: 71]
!   !   !   !   !   !   !   Sibling: 0  Op: [ [type int] [line: 71]
!   !   !   !   !   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 5, loc: -137] [type int] [line: 71]
!   !   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 71]
!   !   !   !   !   !   Child: 1  Assign: ++ [type int] [line: 71]
!   !   !   !   !   !   !   Child: 0  Id: c1 [ref: Local, size: 1, loc: -3] [type int] [line: 71]
!   !   !   !   Sibling: 0  Assign: ++ [type int] [line: 72]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 72]
!   !   Sibling: 1  Call: output [type void] [line: 75]
!   !   !   Child: 0  Id: c1 [ref: Local, size: 1, loc: -3] [type int] [line: 75]
!   !   Sibling: 2  Call: output [type void] [line: 76]
!   !   !   Child: 0  Id: c2 [ref: Local, size: 1, loc: -4] [type int] [line: 76]
!   !   Sibling: 3  Call: outnl [type void] [line: 77]
!   !   Sibling: 4  If  [type void] [line: 79]
!   !   !   Child: 0  Op: == [type bool] [line: 79]
!   !   !   !   Child: 0  Id: c2 [ref: Local, size: 1, loc: -4] [type int] [line: 79]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 79]
!   !   !   Child: 1  Return [type void] [line: 80]
!   !   !   !   Child: 0  Const: true [type bool] [line: 80]
!   !   !   Child: 2  Return [type void] [line: 82]
!   !   !   !   Child: 0  Const: false [type bool] [line: 82]
Sibling: 14  Func turn [ref: Global, size: -3, loc: 0] [type bool] [line: 85]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 86]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -2] [type int] [line: 87]
!   !   Child: 1  Assign: ++ [type int] [line: 90]
!   !   !   Child: 0  Id: turns [ref: Global, size: 1, loc: 0] [type int] [line: 90]
!   !   Sibling: 0  Call: output [type void] [line: 91]
!   !   !   Child: 0  Id: turns [ref: Global, size: 1, loc: 0] [type int] [line: 91]
!   !   Sibling: 1  Call: outnl [type void] [line: 92]
!   !   Sibling: 2  If  [type void] [line: 94]
!   !   !   Child: 0  Op: <= [type bool] [line: 94]
!   !   !   !   Child: 0  Id: turns [ref: Global, size: 1, loc: 0] [type int] [line: 94]
!   !   !   !   Child: 1  Const: 20 [type int] [line: 94]
!   !   !   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 94]
!   !   !   !   Child: 1  Assign: = [type int] [line: 96]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 96]
!   !   !   !   !   Child: 1  Const: 0 [type int] [line: 96]
!   !   !   !   Sibling: 0  While  [type void] [line: 97]
!   !   !   !   !   Child: 0  Op: < [type bool] [line: 97]
!   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 97]
!   !   !   !   !   !   Child: 1  Const: 4 [type int] [line: 97]
!   !   !   !   !   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 97]
!   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 98]
!   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 98]
!   !   !   !   !   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 5, loc: -137] [type int] [line: 98]
!   !   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 98]
!   !   !   !   !   !   !   Child: 1  Call: input [type int] [line: 98]
!   !   !   !   !   !   Sibling: 0  If  [type void] [line: 99]
!   !   !   !   !   !   !   Child: 0  Op: < [type bool] [line: 99]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 99]
!   !   !   !   !   !   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 5, loc: -137] [type int] [line: 99]
!   !   !   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 99]
!   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 99]
!   !   !   !   !   !   !   Child: 1  Return [type void] [line: 100]
!   !   !   !   !   !   !   !   Child: 0  Const: false [type bool] [line: 100]
!   !   !   !   !   !   Sibling: 1  If  [type void] [line: 101]
!   !   !   !   !   !   !   Child: 0  Op: > [type bool] [line: 101]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 101]
!   !   !   !   !   !   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 5, loc: -137] [type int] [line: 101]
!   !   !   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 101]
!   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 101]
!   !   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 101]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 101]
!   !   !   !   !   !   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 5, loc: -137] [type int] [line: 101]
!   !   !   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 101]
!   !   !   !   !   !   !   !   Child: 1  Op: % [type int] [line: 101]
!   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 101]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 5, loc: -137] [type int] [line: 101]
!   !   !   !   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 101]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 101]
!   !   !   !   !   !   Sibling: 2  Assign: ++ [type int] [line: 102]
!   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 102]
!   !   !   !   Sibling: 1  If  [type void] [line: 106]
!   !   !   !   !   Child: 0  Call: check [type bool] [line: 106]
!   !   !   !   !   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 106]
!   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 107]
!   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 107]
!   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 107]
!   !   !   !   !   !   Sibling: 0  While  [type void] [line: 108]
!   !   !   !   !   !   !   Child: 0  Op: < [type bool] [line: 108]
!   !   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 108]
!   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 108]
!   !   !   !   !   !   !   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 108]
!   !   !   !   !   !   !   !   Child: 1  Call: outputb [type void] [line: 109]
!   !   !   !   !   !   !   !   !   Child: 0  Const: true [type bool] [line: 109]
!   !   !   !   !   !   !   !   Sibling: 0  Assign: ++ [type int] [line: 110]
!   !   !   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 110]
!   !   !   !   !   !   Sibling: 1  Call: outnl [type void] [line: 112]
!   !   !   !   !   !   Sibling: 2  Return [type void] [line: 113]
!   !   !   !   !   !   !   Child: 0  Const: false [type bool] [line: 113]
!   !   !   !   !   Child: 2  Compound [ref: None, size: -3, loc: 0] [type void] [line: 114]
!   !   !   !   !   !   Child: 1  Return [type void] [line: 115]
!   !   !   !   !   !   !   Child: 0  Const: true [type bool] [line: 115]
!   !   Sibling: 3  Assign: = [type int] [line: 120]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 120]
!   !   !   Child: 1  Const: 0 [type int] [line: 120]
!   !   Sibling: 4  While  [type void] [line: 121]
!   !   !   Child: 0  Op: < [type bool] [line: 121]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 121]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 121]
!   !   !   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 121]
!   !   !   !   Child: 1  Call: outputb [type void] [line: 122]
!   !   !   !   !   Child: 0  Const: false [type bool] [line: 122]
!   !   !   !   Sibling: 0  Assign: ++ [type int] [line: 123]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 123]
!   !   Sibling: 5  Call: outnl [type void] [line: 125]
!   !   Sibling: 6  Return [type void] [line: 126]
!   !   !   Child: 0  Const: false [type bool] [line: 126]
Sibling: 15  Func main [ref: Global, size: -3, loc: 0] [type void] [line: 129]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 130]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -2] [type int] [line: 131]
!   !   Child: 1  Assign: = [type int] [line: 134]
!   !   !   Child: 0  Id: n [ref: Global, size: 1, loc: -1] [type int] [line: 134]
!   !   !   Child: 1  Const: 0 [type int] [line: 134]
!   !   Sibling: 0  Assign: = [type int] [line: 135]
!   !   !   Child: 0  Op: [ [type int] [line: 135]
!   !   !   !   Child: 0  Id: r is array [ref: Global, size: 129, loc: -3] [type int] [line: 135]
!   !   !   !   Child: 1  Const: 0 [type int] [line: 135]
!   !   !   Child: 1  Call: input [type int] [line: 135]
!   !   Sibling: 1  Call: outnl [type void] [line: 136]
!   !   Sibling: 2  Assign: = [type int] [line: 139]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 139]
!   !   !   Child: 1  Const: 0 [type int] [line: 139]
!   !   Sibling: 3  While  [type void] [line: 140]
!   !   !   Child: 0  Op: < [type bool] [line: 140]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 140]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 140]
!   !   !   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 140]
!   !   !   !   Child: 1  Assign: = [type int] [line: 141]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 141]
!   !   !   !   !   !   Child: 0  Id: known is array [ref: Global, size: 5, loc: -132] [type int] [line: 141]
!   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 141]
!   !   !   !   !   Child: 1  Op: % [type int] [line: 141]
!   !   !   !   !   !   Child: 0  Call: rand [type int] [line: 141]
!   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 141]
!   !   !   !   Sibling: 0  Assign: ++ [type int] [line: 142]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 142]
!   !   Sibling: 4  Assign: = [type int] [line: 146]
!   !   !   Child: 0  Id: turns [ref: Global, size: 1, loc: 0] [type int] [line: 146]
!   !   !   Child: 1  Const: 0 [type int] [line: 146]
!   !   Sibling: 5  While  [type void] [line: 147]
!   !   !   Child: 0  Call: turn [type bool] [line: 147]
!   !   Sibling: 6  Call: outnl [type void] [line: 150]
!   !   Sibling: 7  Assign: = [type int] [line: 151]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 151]
!   !   !   Child: 1  Const: 0 [type int] [line: 151]
!   !   Sibling: 8  While  [type void] [line: 152]
!   !   !   Child: 0  Op: < [type bool] [line: 152]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 152]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 152]
!   !   !   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 152]
!   !   !   !   Child: 1  Call: output [type void] [line: 153]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 153]
!   !   !   !   !   !   Child: 0  Id: known is array [ref: Global, size: 5, loc: -132] [type int] [line: 153]
!   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 153]
!   !   !   !   Sibling: 0  Call: outnl [type void] [line: 154]
!   !   !   !   Sibling: 1  Assign: ++ [type int] [line: 155]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 155]
!   !   Sibling: 9  Call: outnl [type void] [line: 157]
Offset for end of global space: -141
Number of warnings: 0
Number of errors: 0
