Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: gnu [ref: Global, size: 1, loc: 0] [type int] [line: 2]
Sibling: 7  Var: goat is array [ref: Global, size: 17, loc: -2] [type int] [line: 3]
Sibling: 8  Func cat [ref: Global, size: -3, loc: 0] [type void] [line: 5]
!   Child: 0  Param z is array [ref: Param, size: 1, loc: -2] [type int] [line: 5]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 6]
!   !   Child: 1  Op: [ [type int] [line: 7]
!   !   !   Child: 0  Id: z is array [ref: Param, size: 1, loc: -2] [type int] [line: 7]
!   !   !   Child: 1  Const: 7 [type int] [line: 7]
!   !   Sibling: 0  Op: * [type int] [line: 8]
!   !   !   Child: 0  Id: z is array [ref: Param, size: 1, loc: -2] [type int] [line: 8]
Sibling: 9  Func dog [ref: Global, size: -17, loc: 0] [type void] [line: 11]
!   Child: 0  Param x is array [ref: Param, size: 1, loc: -2] [type int] [line: 11]
!   Sibling: 0  Param p [ref: Param, size: 1, loc: -3] [type int] [line: 11]
!   Child: 1  Compound [ref: None, size: -17, loc: 0] [type void] [line: 12]
!   !   Child: 0  Var: a [ref: Local, size: 1, loc: -4] [type int] [line: 13]
!   !   Sibling: 0  Var: y is array [ref: Local, size: 12, loc: -6] [type int] [line: 14]
!   !   Child: 1  Assign: = [type int] [line: 17]
!   !   !   Child: 0  Id: gnu [ref: Global, size: 1, loc: 0] [type int] [line: 17]
!   !   !   Child: 1  Id: gnu [ref: Global, size: 1, loc: 0] [type int] [line: 17]
!   !   Sibling: 0  Assign: = [type int] [line: 18]
!   !   !   Child: 0  Op: [ [type int] [line: 18]
!   !   !   !   Child: 0  Id: goat is array [ref: Global, size: 17, loc: -2] [type int] [line: 18]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 18]
!   !   !   Child: 1  Op: [ [type int] [line: 18]
!   !   !   !   Child: 0  Id: goat is array [ref: Global, size: 17, loc: -2] [type int] [line: 18]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 18]
!   !   Sibling: 1  Op: * [type int] [line: 19]
!   !   !   Child: 0  Id: goat is array [ref: Global, size: 17, loc: -2] [type int] [line: 19]
!   !   Sibling: 2  Assign: = [type int] [line: 22]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -4] [type int] [line: 22]
!   !   !   Child: 1  Id: a [ref: Local, size: 1, loc: -4] [type int] [line: 22]
!   !   Sibling: 3  Assign: = [type int] [line: 23]
!   !   !   Child: 0  Op: [ [type int] [line: 23]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 12, loc: -6] [type int] [line: 23]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 23]
!   !   !   Child: 1  Op: [ [type int] [line: 23]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 12, loc: -6] [type int] [line: 23]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 23]
!   !   Sibling: 4  Op: * [type int] [line: 24]
!   !   !   Child: 0  Id: y is array [ref: Local, size: 12, loc: -6] [type int] [line: 24]
!   !   Sibling: 5  Assign: = [type int] [line: 27]
!   !   !   Child: 0  Id: p [ref: Param, size: 1, loc: -3] [type int] [line: 27]
!   !   !   Child: 1  Id: p [ref: Param, size: 1, loc: -3] [type int] [line: 27]
!   !   Sibling: 6  Assign: = [type int] [line: 28]
!   !   !   Child: 0  Op: [ [type int] [line: 28]
!   !   !   !   Child: 0  Id: x is array [ref: Param, size: 1, loc: -2] [type int] [line: 28]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 28]
!   !   !   Child: 1  Op: [ [type int] [line: 28]
!   !   !   !   Child: 0  Id: x is array [ref: Param, size: 1, loc: -2] [type int] [line: 28]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 28]
!   !   Sibling: 7  Op: * [type int] [line: 29]
!   !   !   Child: 0  Id: x is array [ref: Param, size: 1, loc: -2] [type int] [line: 29]
!   !   Sibling: 8  Call: cat [type void] [line: 31]
!   !   !   Child: 0  Id: x is array [ref: Param, size: 1, loc: -2] [type int] [line: 31]
Sibling: 10  Func main [ref: Global, size: -26, loc: 0] [type void] [line: 34]
!   Child: 1  Compound [ref: None, size: -26, loc: 0] [type void] [line: 35]
!   !   Child: 0  Var: m [ref: Local, size: 1, loc: -2] [type int] [line: 36]
!   !   Sibling: 0  Var: ma is array [ref: Local, size: 23, loc: -4] [type int] [line: 37]
!   !   Child: 1  Call: dog [type void] [line: 39]
!   !   !   Child: 0  Id: ma is array [ref: Local, size: 23, loc: -4] [type int] [line: 39]
!   !   !   Sibling: 0  Id: m [ref: Local, size: 1, loc: -2] [type int] [line: 39]
Offset for end of global space: -18
Number of warnings: 0
Number of errors: 0
