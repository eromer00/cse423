Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func ant [ref: Global, size: -2, loc: 0] [type int] [line: 3]
!   Child: 1  Compound [ref: None, size: -2, loc: 0] [type void] [line: 4]
!   !   Child: 1  Return [type void] [line: 5]
!   !   !   Child: 0  Const: 0 [type int] [line: 5]
Sibling: 7  Func bat [ref: Global, size: -3, loc: 0] [type bool] [line: 9]
!   Child: 0  Param x [ref: Param, size: 1, loc: -2] [type int] [line: 9]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 10]
!   !   Child: 1  Return [type void] [line: 11]
!   !   !   Child: 0  Op: > [type bool] [line: 11]
!   !   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 11]
!   !   !   !   Child: 1  Const: 0 [type int] [line: 11]
Sibling: 8  Func cat [ref: Global, size: -3, loc: 0] [type void] [line: 15]
!   Child: 0  Param x [ref: Param, size: 1, loc: -2] [type bool] [line: 15]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 16]
!   !   Child: 1  Return [type void] [line: 17]
Sibling: 9  Func dog [ref: Global, size: -6, loc: 0] [type int] [line: 21]
!   Child: 0  Param a [ref: Param, size: 1, loc: -2] [type int] [line: 21]
!   Sibling: 0  Param b is array [ref: Param, size: 1, loc: -3] [type int] [line: 21]
!   Sibling: 1  Param c [ref: Param, size: 1, loc: -4] [type bool] [line: 21]
!   Sibling: 2  Param d is array [ref: Param, size: 1, loc: -5] [type bool] [line: 21]
!   Child: 1  Compound [ref: None, size: -6, loc: 0] [type void] [line: 22]
!   !   Child: 1  Return [type void] [line: 23]
!   !   !   Child: 0  Id: a [ref: Param, size: 1, loc: -2] [type int] [line: 23]
Sibling: 10  Var: eel [ref: Global, size: 1, loc: 0] [type int] [line: 27]
Sibling: 11  Var: fox is array [ref: Global, size: 12, loc: -2] [type int] [line: 28]
Sibling: 12  Func gnu [ref: Global, size: -2, loc: 0] [type void] [line: 31]
!   Child: 1  Compound [ref: None, size: -2, loc: 0] [type void] [line: 32]
!   !   Child: 1  Call: output [type void] [line: 33]
!   !   !   Child: 0  Id: eel [ref: Global, size: 1, loc: 0] [type int] [line: 33]
!   !   Sibling: 0  Return [type void] [line: 34]
Sibling: 13  Func hog [ref: Global, size: -4, loc: 0] [type int] [line: 38]
!   Child: 0  Param z [ref: Param, size: 1, loc: -2] [type int] [line: 38]
!   Child: 1  Compound [ref: None, size: -4, loc: 0] [type void] [line: 39]
!   !   Child: 0  Var: ibex [ref: Local, size: 1, loc: -3] [type int] [line: 40]
!   !   Child: 1  Return [type void] [line: 41]
!   !   !   Child: 0  Id: z [ref: Param, size: 1, loc: -2] [type int] [line: 41]
Sibling: 14  Func jay [ref: Global, size: -2, loc: 0] [type void] [line: 45]
!   Child: 1  Compound [ref: None, size: -2, loc: 0] [type void] [line: 46]
Sibling: 15  Func owl [ref: Global, size: -2, loc: 0] [type void] [line: 49]
Sibling: 16  Func pig [ref: Global, size: -3, loc: 0] [type void] [line: 51]
!   Child: 0  Param z [ref: Param, size: 1, loc: -2] [type int] [line: 51]
!   Child: 1  Call: output [type void] [line: 51]
!   !   Child: 0  Id: z [ref: Param, size: 1, loc: -2] [type int] [line: 51]
Sibling: 17  Func pigs [ref: Global, size: -3, loc: 0] [type void] [line: 53]
!   Child: 0  Param z [ref: Param, size: 1, loc: -2] [type int] [line: 53]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 53]
!   !   Child: 1  Call: pig [type void] [line: 54]
!   !   !   Child: 0  Id: z [ref: Param, size: 1, loc: -2] [type int] [line: 54]
!   !   Sibling: 0  Call: outnl [type void] [line: 55]
Sibling: 18  Func max [ref: Global, size: -5, loc: 0] [type int] [line: 58]
!   Child: 0  Param x [ref: Param, size: 1, loc: -2] [type int] [line: 58]
!   Sibling: 0  Param y [ref: Param, size: 1, loc: -3] [type int] [line: 58]
!   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 58]
!   !   Child: 0  Var: z [ref: Local, size: 1, loc: -4] [type int] [line: 59]
!   !   Child: 1  If  [type void] [line: 61]
!   !   !   Child: 0  Op: > [type bool] [line: 61]
!   !   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 61]
!   !   !   !   Child: 1  Id: y [ref: Param, size: 1, loc: -3] [type int] [line: 61]
!   !   !   Child: 1  Assign: = [type int] [line: 61]
!   !   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 61]
!   !   !   !   Child: 1  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 61]
!   !   !   Child: 2  Assign: = [type int] [line: 61]
!   !   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 61]
!   !   !   !   Child: 1  Id: y [ref: Param, size: 1, loc: -3] [type int] [line: 61]
!   !   Sibling: 0  Return [type void] [line: 62]
!   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 62]
Sibling: 19  Func main [ref: Global, size: -16, loc: 0] [type void] [line: 66]
!   Child: 1  Compound [ref: None, size: -16, loc: 0] [type void] [line: 67]
!   !   Child: 0  Var: a is array [ref: Local, size: 6, loc: -3] [type int] [line: 68]
!   !   Sibling: 0  Var: b is array [ref: Local, size: 8, loc: -9] [type bool] [line: 69]
!   !   Child: 1  Call: ant [type int] [line: 71]
!   !   Sibling: 0  Call: bat [type bool] [line: 72]
!   !   !   Child: 0  Const: 2 [type int] [line: 72]
!   !   Sibling: 1  Call: cat [type void] [line: 73]
!   !   !   Child: 0  Const: true [type bool] [line: 73]
!   !   Sibling: 2  Call: dog [type int] [line: 74]
!   !   !   Child: 0  Const: 3 [type int] [line: 74]
!   !   !   Sibling: 0  Id: a is array [ref: Local, size: 6, loc: -3] [type int] [line: 74]
!   !   !   Sibling: 1  Op: [ [type bool] [line: 74]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 8, loc: -9] [type bool] [line: 74]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 74]
!   !   !   Sibling: 2  Id: b is array [ref: Local, size: 8, loc: -9] [type bool] [line: 74]
!   !   Sibling: 3  Assign: = [type int] [line: 75]
!   !   !   Child: 0  Id: eel [ref: Global, size: 1, loc: 0] [type int] [line: 75]
!   !   !   Child: 1  Const: 9 [type int] [line: 75]
!   !   Sibling: 4  Assign: = [type int] [line: 76]
!   !   !   Child: 0  Op: [ [type int] [line: 76]
!   !   !   !   Child: 0  Id: fox is array [ref: Global, size: 12, loc: -2] [type int] [line: 76]
!   !   !   !   Child: 1  Id: eel [ref: Global, size: 1, loc: 0] [type int] [line: 76]
!   !   !   Child: 1  Id: eel [ref: Global, size: 1, loc: 0] [type int] [line: 76]
!   !   Sibling: 5  Call: pig [type void] [line: 77]
!   !   !   Child: 0  Id: eel [ref: Global, size: 1, loc: 0] [type int] [line: 77]
!   !   Sibling: 6  Call: pig [type void] [line: 78]
!   !   !   Child: 0  Op: [ [type int] [line: 78]
!   !   !   !   Child: 0  Id: fox is array [ref: Global, size: 12, loc: -2] [type int] [line: 78]
!   !   !   !   Child: 1  Id: eel [ref: Global, size: 1, loc: 0] [type int] [line: 78]
!   !   Sibling: 7  Call: gnu [type void] [line: 79]
!   !   Sibling: 8  Call: pigs [type void] [line: 80]
!   !   !   Child: 0  Call: hog [type int] [line: 80]
!   !   !   !   Child: 0  Const: 1729 [type int] [line: 80]
!   !   Sibling: 9  Call: jay [type void] [line: 81]
!   !   Sibling: 10  Call: owl [type void] [line: 82]
!   !   Sibling: 11  Call: pigs [type void] [line: 83]
!   !   !   Child: 0  Id: eel [ref: Global, size: 1, loc: 0] [type int] [line: 83]
!   !   Sibling: 12  Call: pigs [type void] [line: 84]
!   !   !   Child: 0  Call: hog [type int] [line: 84]
!   !   !   !   Child: 0  Id: eel [ref: Global, size: 1, loc: 0] [type int] [line: 84]
!   !   Sibling: 13  Call: pigs [type void] [line: 85]
!   !   !   Child: 0  Op: [ [type int] [line: 85]
!   !   !   !   Child: 0  Id: fox is array [ref: Global, size: 12, loc: -2] [type int] [line: 85]
!   !   !   !   Child: 1  Call: hog [type int] [line: 85]
!   !   !   !   !   Child: 0  Id: eel [ref: Global, size: 1, loc: 0] [type int] [line: 85]
Offset for end of global space: -13
Number of warnings: 0
Number of errors: 0
