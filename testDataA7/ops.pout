Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: y is array [ref: Global, size: 11, loc: -1] [type int] [line: 5]
Sibling: 7  Var: x [ref: Global, size: 1, loc: -11] [type bool] [line: 6]
Sibling: 8  Func main [ref: Global, size: -6, loc: 0] [type void] [line: 8]
!   Child: 1  Compound [ref: None, size: -6, loc: 0] [type void] [line: 9]
!   !   Child: 0  Var: a [ref: Local, size: 1, loc: -2] [type int] [line: 10]
!   !   Sibling: 0  Var: b [ref: Local, size: 1, loc: -3] [type int] [line: 11]
!   !   Sibling: 1  Var: c [ref: Local, size: 1, loc: -4] [type int] [line: 12]
!   !   Sibling: 2  Var: z [ref: Local, size: 1, loc: -5] [type bool] [line: 13]
!   !   Child: 1  Assign: = [type int] [line: 15]
!   !   !   Child: 0  Op: [ [type int] [line: 15]
!   !   !   !   Child: 0  Id: y is array [ref: Global, size: 11, loc: -1] [type int] [line: 15]
!   !   !   !   Child: 1  Const: 0 [type int] [line: 15]
!   !   !   Child: 1  Const: 50 [type int] [line: 15]
!   !   Sibling: 0  Assign: = [type int] [line: 16]
!   !   !   Child: 0  Op: [ [type int] [line: 16]
!   !   !   !   Child: 0  Id: y is array [ref: Global, size: 11, loc: -1] [type int] [line: 16]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 16]
!   !   !   Child: 1  Const: 1 [type int] [line: 16]
!   !   Sibling: 1  Assign: = [type int] [line: 17]
!   !   !   Child: 0  Op: [ [type int] [line: 17]
!   !   !   !   Child: 0  Id: y is array [ref: Global, size: 11, loc: -1] [type int] [line: 17]
!   !   !   !   Child: 1  Const: 8 [type int] [line: 17]
!   !   !   Child: 1  Const: 2 [type int] [line: 17]
!   !   Sibling: 2  Assign: = [type int] [line: 19]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 19]
!   !   !   Child: 1  Const: 50 [type int] [line: 19]
!   !   Sibling: 3  Assign: = [type int] [line: 20]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 20]
!   !   !   Child: 1  Const: 1 [type int] [line: 20]
!   !   Sibling: 4  Assign: = [type int] [line: 21]
!   !   !   Child: 0  Id: c [ref: Local, size: 1, loc: -4] [type int] [line: 21]
!   !   !   Child: 1  Const: 8 [type int] [line: 21]
!   !   Sibling: 5  Assign: = [type bool] [line: 23]
!   !   !   Child: 0  Id: x [ref: Global, size: 1, loc: -11] [type bool] [line: 23]
!   !   !   Child: 1  Const: false [type bool] [line: 23]
!   !   Sibling: 6  Assign: = [type bool] [line: 24]
!   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -5] [type bool] [line: 24]
!   !   !   Child: 1  Const: true [type bool] [line: 24]
!   !   Sibling: 7  Call: outputb [type void] [line: 26]
!   !   !   Child: 0  Op: <= [type bool] [line: 26]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 26]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 26]
!   !   Sibling: 8  Call: outputb [type void] [line: 27]
!   !   !   Child: 0  Op: <= [type bool] [line: 27]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 27]
!   !   !   !   Child: 1  Const: 50 [type int] [line: 27]
!   !   Sibling: 9  Call: outputb [type void] [line: 28]
!   !   !   Child: 0  Op: <= [type bool] [line: 28]
!   !   !   !   Child: 0  Const: 50 [type int] [line: 28]
!   !   !   !   Child: 1  Const: 50 [type int] [line: 28]
!   !   Sibling: 10  Call: outnl [type void] [line: 29]
!   !   Sibling: 11  Call: outputb [type void] [line: 31]
!   !   !   Child: 0  Op: < [type bool] [line: 31]
!   !   !   !   Child: 0  Const: 50 [type int] [line: 31]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 31]
!   !   Sibling: 12  Call: outputb [type void] [line: 32]
!   !   !   Child: 0  Op: < [type bool] [line: 32]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 32]
!   !   !   !   Child: 1  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 32]
!   !   Sibling: 13  Call: outputb [type void] [line: 33]
!   !   !   Child: 0  Op: < [type bool] [line: 33]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 33]
!   !   !   !   Child: 1  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 33]
!   !   Sibling: 14  Call: outnl [type void] [line: 34]
!   !   Sibling: 15  Call: outputb [type void] [line: 36]
!   !   !   Child: 0  Op: > [type bool] [line: 36]
!   !   !   !   Child: 0  Const: 50 [type int] [line: 36]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 36]
!   !   Sibling: 16  Call: outputb [type void] [line: 37]
!   !   !   Child: 0  Op: > [type bool] [line: 37]
!   !   !   !   Child: 0  Const: 1 [type int] [line: 37]
!   !   !   !   Child: 1  Const: 50 [type int] [line: 37]
!   !   Sibling: 17  Call: outputb [type void] [line: 38]
!   !   !   Child: 0  Op: > [type bool] [line: 38]
!   !   !   !   Child: 0  Const: 50 [type int] [line: 38]
!   !   !   !   Child: 1  Const: 50 [type int] [line: 38]
!   !   Sibling: 18  Call: outnl [type void] [line: 39]
!   !   Sibling: 19  Call: outputb [type void] [line: 41]
!   !   !   Child: 0  Op: >= [type bool] [line: 41]
!   !   !   !   Child: 0  Const: 50 [type int] [line: 41]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 41]
!   !   Sibling: 20  Call: outputb [type void] [line: 42]
!   !   !   Child: 0  Op: >= [type bool] [line: 42]
!   !   !   !   Child: 0  Const: 1 [type int] [line: 42]
!   !   !   !   Child: 1  Const: 50 [type int] [line: 42]
!   !   Sibling: 21  Call: outputb [type void] [line: 43]
!   !   !   Child: 0  Op: >= [type bool] [line: 43]
!   !   !   !   Child: 0  Const: 50 [type int] [line: 43]
!   !   !   !   Child: 1  Const: 50 [type int] [line: 43]
!   !   Sibling: 22  Call: outnl [type void] [line: 44]
!   !   Sibling: 23  Call: outputb [type void] [line: 46]
!   !   !   Child: 0  Op: == [type bool] [line: 46]
!   !   !   !   Child: 0  Op: [ [type int] [line: 46]
!   !   !   !   !   Child: 0  Id: y is array [ref: Global, size: 11, loc: -1] [type int] [line: 46]
!   !   !   !   !   Child: 1  Const: 0 [type int] [line: 46]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 46]
!   !   Sibling: 24  Call: outputb [type void] [line: 47]
!   !   !   Child: 0  Op: == [type bool] [line: 47]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 47]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 47]
!   !   Sibling: 25  Call: outputb [type void] [line: 48]
!   !   !   Child: 0  Op: == [type bool] [line: 48]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 48]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 48]
!   !   Sibling: 26  Call: outnl [type void] [line: 49]
!   !   Sibling: 27  Call: outputb [type void] [line: 51]
!   !   !   Child: 0  Op: != [type bool] [line: 51]
!   !   !   !   Child: 0  Op: [ [type int] [line: 51]
!   !   !   !   !   Child: 0  Id: y is array [ref: Global, size: 11, loc: -1] [type int] [line: 51]
!   !   !   !   !   Child: 1  Const: 0 [type int] [line: 51]
!   !   !   !   Child: 1  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 51]
!   !   Sibling: 28  Call: outputb [type void] [line: 52]
!   !   !   Child: 0  Op: != [type bool] [line: 52]
!   !   !   !   Child: 0  Op: [ [type int] [line: 52]
!   !   !   !   !   Child: 0  Id: y is array [ref: Global, size: 11, loc: -1] [type int] [line: 52]
!   !   !   !   !   Child: 1  Const: 0 [type int] [line: 52]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 52]
!   !   Sibling: 29  Call: outputb [type void] [line: 53]
!   !   !   Child: 0  Op: != [type bool] [line: 53]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 53]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 53]
!   !   Sibling: 30  Call: outputb [type void] [line: 54]
!   !   !   Child: 0  Op: != [type bool] [line: 54]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 54]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 54]
!   !   Sibling: 31  Call: outnl [type void] [line: 55]
!   !   Sibling: 32  Call: outputb [type void] [line: 57]
!   !   !   Child: 0  Op: and [type bool] [line: 57]
!   !   !   !   Child: 0  Const: true [type bool] [line: 57]
!   !   !   !   Child: 1  Const: true [type bool] [line: 57]
!   !   Sibling: 33  Call: outputb [type void] [line: 58]
!   !   !   Child: 0  Op: and [type bool] [line: 58]
!   !   !   !   Child: 0  Const: true [type bool] [line: 58]
!   !   !   !   Child: 1  Const: false [type bool] [line: 58]
!   !   Sibling: 34  Call: outputb [type void] [line: 59]
!   !   !   Child: 0  Op: and [type bool] [line: 59]
!   !   !   !   Child: 0  Const: false [type bool] [line: 59]
!   !   !   !   Child: 1  Const: true [type bool] [line: 59]
!   !   Sibling: 35  Call: outputb [type void] [line: 60]
!   !   !   Child: 0  Op: and [type bool] [line: 60]
!   !   !   !   Child: 0  Const: false [type bool] [line: 60]
!   !   !   !   Child: 1  Const: false [type bool] [line: 60]
!   !   Sibling: 36  Call: outnl [type void] [line: 61]
!   !   Sibling: 37  Call: outputb [type void] [line: 63]
!   !   !   Child: 0  Op: or [type bool] [line: 63]
!   !   !   !   Child: 0  Const: true [type bool] [line: 63]
!   !   !   !   Child: 1  Const: true [type bool] [line: 63]
!   !   Sibling: 38  Call: outputb [type void] [line: 64]
!   !   !   Child: 0  Op: or [type bool] [line: 64]
!   !   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -5] [type bool] [line: 64]
!   !   !   !   Child: 1  Const: false [type bool] [line: 64]
!   !   Sibling: 39  Call: outputb [type void] [line: 65]
!   !   !   Child: 0  Op: or [type bool] [line: 65]
!   !   !   !   Child: 0  Const: false [type bool] [line: 65]
!   !   !   !   Child: 1  Const: true [type bool] [line: 65]
!   !   Sibling: 40  Call: outputb [type void] [line: 66]
!   !   !   Child: 0  Op: or [type bool] [line: 66]
!   !   !   !   Child: 0  Const: false [type bool] [line: 66]
!   !   !   !   Child: 1  Const: false [type bool] [line: 66]
!   !   Sibling: 41  Call: outnl [type void] [line: 67]
!   !   Sibling: 42  Call: outputb [type void] [line: 69]
!   !   !   Child: 0  Op: not [type bool] [line: 69]
!   !   !   !   Child: 0  Const: true [type bool] [line: 69]
!   !   Sibling: 43  Call: outputb [type void] [line: 70]
!   !   !   Child: 0  Op: not [type bool] [line: 70]
!   !   !   !   Child: 0  Id: x [ref: Global, size: 1, loc: -11] [type bool] [line: 70]
!   !   Sibling: 44  Call: outnl [type void] [line: 71]
!   !   Sibling: 45  Call: output [type void] [line: 73]
!   !   !   Child: 0  Op: + [type int] [line: 73]
!   !   !   !   Child: 0  Const: 5 [type int] [line: 73]
!   !   !   !   Child: 1  Const: 50 [type int] [line: 73]
!   !   Sibling: 46  Call: output [type void] [line: 74]
!   !   !   Child: 0  Op: + [type int] [line: 74]
!   !   !   !   Child: 0  Op: [ [type int] [line: 74]
!   !   !   !   !   Child: 0  Id: y is array [ref: Global, size: 11, loc: -1] [type int] [line: 74]
!   !   !   !   !   Child: 1  Id: c [ref: Local, size: 1, loc: -4] [type int] [line: 74]
!   !   !   !   Child: 1  Const: 50 [type int] [line: 74]
!   !   Sibling: 47  Call: outnl [type void] [line: 75]
!   !   Sibling: 48  Call: output [type void] [line: 77]
!   !   !   Child: 0  Op: - [type int] [line: 77]
!   !   !   !   Child: 0  Const: 5 [type int] [line: 77]
!   !   !   !   Child: 1  Const: 50 [type int] [line: 77]
!   !   Sibling: 49  Call: output [type void] [line: 78]
!   !   !   Child: 0  Op: - [type int] [line: 78]
!   !   !   !   Child: 0  Op: - [type int] [line: 78]
!   !   !   !   !   Child: 0  Const: 30 [type int] [line: 78]
!   !   !   !   !   Child: 1  Const: 5 [type int] [line: 78]
!   !   !   !   Child: 1  Const: 50 [type int] [line: 78]
!   !   Sibling: 50  Call: outnl [type void] [line: 79]
!   !   Sibling: 51  Call: output [type void] [line: 81]
!   !   !   Child: 0  Op: - [type int] [line: 81]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 81]
!   !   Sibling: 52  Call: output [type void] [line: 82]
!   !   !   Child: 0  Op: - [type int] [line: 82]
!   !   !   !   Child: 0  Const: 0 [type int] [line: 82]
!   !   Sibling: 53  Call: output [type void] [line: 83]
!   !   !   Child: 0  Op: - [type int] [line: 83]
!   !   !   !   Child: 0  Const: 1 [type int] [line: 83]
!   !   Sibling: 54  Call: outnl [type void] [line: 84]
!   !   Sibling: 55  Call: output [type void] [line: 86]
!   !   !   Child: 0  Op: * [type int] [line: 86]
!   !   !   !   Child: 0  Op: * [type int] [line: 86]
!   !   !   !   !   Child: 0  Op: * [type int] [line: 86]
!   !   !   !   !   !   Child: 0  Op: * [type int] [line: 86]
!   !   !   !   !   !   !   Child: 0  Const: 2 [type int] [line: 86]
!   !   !   !   !   !   !   Child: 1  Const: 3 [type int] [line: 86]
!   !   !   !   !   !   Child: 1  Const: 5 [type int] [line: 86]
!   !   !   !   !   Child: 1  Const: 7 [type int] [line: 86]
!   !   !   !   Child: 1  Const: 11 [type int] [line: 86]
!   !   Sibling: 56  Call: output [type void] [line: 87]
!   !   !   Child: 0  Op: * [type int] [line: 87]
!   !   !   !   Child: 0  Const: 50 [type int] [line: 87]
!   !   !   !   Child: 1  Op: [ [type int] [line: 87]
!   !   !   !   !   Child: 0  Id: y is array [ref: Global, size: 11, loc: -1] [type int] [line: 87]
!   !   !   !   !   Child: 1  Const: 8 [type int] [line: 87]
!   !   Sibling: 57  Call: output [type void] [line: 88]
!   !   !   Child: 0  Op: * [type int] [line: 88]
!   !   !   !   Child: 0  Op: [ [type int] [line: 88]
!   !   !   !   !   Child: 0  Id: y is array [ref: Global, size: 11, loc: -1] [type int] [line: 88]
!   !   !   !   !   Child: 1  Const: 8 [type int] [line: 88]
!   !   !   !   Child: 1  Const: 50 [type int] [line: 88]
!   !   Sibling: 58  Call: outnl [type void] [line: 89]
!   !   Sibling: 59  Call: output [type void] [line: 91]
!   !   !   Child: 0  Op: / [type int] [line: 91]
!   !   !   !   Child: 0  Const: 50 [type int] [line: 91]
!   !   !   !   Child: 1  Op: [ [type int] [line: 91]
!   !   !   !   !   Child: 0  Id: y is array [ref: Global, size: 11, loc: -1] [type int] [line: 91]
!   !   !   !   !   Child: 1  Const: 8 [type int] [line: 91]
!   !   Sibling: 60  Call: output [type void] [line: 92]
!   !   !   Child: 0  Op: / [type int] [line: 92]
!   !   !   !   Child: 0  Op: [ [type int] [line: 92]
!   !   !   !   !   Child: 0  Id: y is array [ref: Global, size: 11, loc: -1] [type int] [line: 92]
!   !   !   !   !   Child: 1  Const: 8 [type int] [line: 92]
!   !   !   !   Child: 1  Const: 50 [type int] [line: 92]
!   !   Sibling: 61  Call: output [type void] [line: 93]
!   !   !   Child: 0  Op: / [type int] [line: 93]
!   !   !   !   Child: 0  Op: [ [type int] [line: 93]
!   !   !   !   !   Child: 0  Id: y is array [ref: Global, size: 11, loc: -1] [type int] [line: 93]
!   !   !   !   !   Child: 1  Const: 8 [type int] [line: 93]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 93]
!   !   Sibling: 62  Call: output [type void] [line: 94]
!   !   !   Child: 0  Op: / [type int] [line: 94]
!   !   !   !   Child: 0  Op: / [type int] [line: 94]
!   !   !   !   !   Child: 0  Const: 210 [type int] [line: 94]
!   !   !   !   !   Child: 1  Const: 7 [type int] [line: 94]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 94]
!   !   Sibling: 63  Call: outnl [type void] [line: 95]
!   !   Sibling: 64  Call: output [type void] [line: 97]
!   !   !   Child: 0  Op: % [type int] [line: 97]
!   !   !   !   Child: 0  Const: 211 [type int] [line: 97]
!   !   !   !   Child: 1  Const: 7 [type int] [line: 97]
!   !   Sibling: 65  Call: output [type void] [line: 98]
!   !   !   Child: 0  Op: % [type int] [line: 98]
!   !   !   !   Child: 0  Const: 211 [type int] [line: 98]
!   !   !   !   Child: 1  Const: 6 [type int] [line: 98]
!   !   Sibling: 66  Call: output [type void] [line: 99]
!   !   !   Child: 0  Op: % [type int] [line: 99]
!   !   !   !   Child: 0  Const: 211 [type int] [line: 99]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 99]
!   !   Sibling: 67  Call: output [type void] [line: 100]
!   !   !   Child: 0  Op: % [type int] [line: 100]
!   !   !   !   Child: 0  Const: 211 [type int] [line: 100]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 100]
!   !   Sibling: 68  Call: output [type void] [line: 101]
!   !   !   Child: 0  Op: % [type int] [line: 101]
!   !   !   !   Child: 0  Op: % [type int] [line: 101]
!   !   !   !   !   Child: 0  Const: 211 [type int] [line: 101]
!   !   !   !   !   Child: 1  Const: 100 [type int] [line: 101]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 101]
!   !   Sibling: 69  Call: outnl [type void] [line: 102]
!   !   Sibling: 70  Call: output [type void] [line: 104]
!   !   !   Child: 0  Assign: = [type int] [line: 104]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 104]
!   !   !   !   Child: 1  Assign: = [type int] [line: 104]
!   !   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 104]
!   !   !   !   !   Child: 1  Assign: = [type int] [line: 104]
!   !   !   !   !   !   Child: 0  Id: c [ref: Local, size: 1, loc: -4] [type int] [line: 104]
!   !   !   !   !   !   Child: 1  Const: 43 [type int] [line: 104]
!   !   Sibling: 71  Call: output [type void] [line: 105]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 105]
!   !   Sibling: 72  Assign: = [type int] [line: 106]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 106]
!   !   !   Child: 1  Op: * [type int] [line: 106]
!   !   !   !   Child: 0  Assign: = [type int] [line: 106]
!   !   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 106]
!   !   !   !   !   Child: 1  Const: 3 [type int] [line: 106]
!   !   !   !   Child: 1  Assign: = [type int] [line: 106]
!   !   !   !   !   Child: 0  Id: c [ref: Local, size: 1, loc: -4] [type int] [line: 106]
!   !   !   !   !   Child: 1  Const: 4 [type int] [line: 106]
!   !   Sibling: 73  Call: output [type void] [line: 107]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 107]
!   !   Sibling: 74  Call: outnl [type void] [line: 108]
!   !   Sibling: 75  Assign: = [type int] [line: 110]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 110]
!   !   !   Child: 1  Const: 44 [type int] [line: 110]
!   !   Sibling: 76  Assign: = [type int] [line: 111]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 111]
!   !   !   Child: 1  Const: 2 [type int] [line: 111]
!   !   Sibling: 77  Call: output [type void] [line: 112]
!   !   !   Child: 0  Assign: += [type int] [line: 112]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 112]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 112]
!   !   Sibling: 78  Call: output [type void] [line: 113]
!   !   !   Child: 0  Assign: -= [type int] [line: 113]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 113]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 113]
!   !   Sibling: 79  Call: output [type void] [line: 114]
!   !   !   Child: 0  Assign: -= [type int] [line: 114]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 114]
!   !   !   !   Child: 1  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 114]
!   !   Sibling: 80  Call: output [type void] [line: 115]
!   !   !   Child: 0  Assign: += [type int] [line: 115]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 115]
!   !   !   !   Child: 1  Assign: += [type int] [line: 115]
!   !   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type int] [line: 115]
!   !   !   !   !   Child: 1  Const: 10 [type int] [line: 115]
!   !   Sibling: 81  Call: outnl [type void] [line: 116]
!   !   Sibling: 82  Call: output [type void] [line: 118]
!   !   !   Child: 0  Op: - [type int] [line: 118]
!   !   !   !   Child: 0  Op: - [type int] [line: 118]
!   !   !   !   !   Child: 0  Const: 3 [type int] [line: 118]
!   !   !   !   !   Child: 1  Const: 4 [type int] [line: 118]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 118]
!   !   Sibling: 83  Call: output [type void] [line: 119]
!   !   !   Child: 0  Op: / [type int] [line: 119]
!   !   !   !   Child: 0  Op: / [type int] [line: 119]
!   !   !   !   !   Child: 0  Const: 211 [type int] [line: 119]
!   !   !   !   !   Child: 1  Const: 17 [type int] [line: 119]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 119]
!   !   Sibling: 84  Call: output [type void] [line: 120]
!   !   !   Child: 0  Op: / [type int] [line: 120]
!   !   !   !   Child: 0  Const: 211 [type int] [line: 120]
!   !   !   !   Child: 1  Op: / [type int] [line: 120]
!   !   !   !   !   Child: 0  Const: 17 [type int] [line: 120]
!   !   !   !   !   Child: 1  Const: 5 [type int] [line: 120]
!   !   Sibling: 85  Call: outputb [type void] [line: 121]
!   !   !   Child: 0  Op: and [type bool] [line: 121]
!   !   !   !   Child: 0  Op: or [type bool] [line: 121]
!   !   !   !   !   Child: 0  Const: true [type bool] [line: 121]
!   !   !   !   !   Child: 1  Const: false [type bool] [line: 121]
!   !   !   !   Child: 1  Const: false [type bool] [line: 121]
!   !   Sibling: 86  Call: outputb [type void] [line: 122]
!   !   !   Child: 0  Op: or [type bool] [line: 122]
!   !   !   !   Child: 0  Const: true [type bool] [line: 122]
!   !   !   !   Child: 1  Op: and [type bool] [line: 122]
!   !   !   !   !   Child: 0  Const: false [type bool] [line: 122]
!   !   !   !   !   Child: 1  Const: false [type bool] [line: 122]
!   !   Sibling: 87  Call: outputb [type void] [line: 123]
!   !   !   Child: 0  Op: or [type bool] [line: 123]
!   !   !   !   Child: 0  Const: true [type bool] [line: 123]
!   !   !   !   Child: 1  Op: and [type bool] [line: 123]
!   !   !   !   !   Child: 0  Const: false [type bool] [line: 123]
!   !   !   !   !   Child: 1  Const: false [type bool] [line: 123]
!   !   Sibling: 88  Call: outnl [type void] [line: 124]
Offset for end of global space: -12
Number of warnings: 0
Number of errors: 0
