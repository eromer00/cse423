ERROR(25): 'and' requires operands of type bool but rhs is of type int.
ERROR(25): 'or' requires operands of type bool but rhs is of type int.
ERROR(34): '+' requires operands of type int but lhs is of type bool.
ERROR(34): '+' requires operands of type int but rhs is of type bool.
ERROR(34): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(39): Symbol 'x' is not defined.
ERROR(40): Symbol 'x' is not defined.
ERROR(43): Symbol 'x' is not defined.
ERROR(43): Symbol 'x' is not defined.
Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: g [ref: Global, size: 1, loc: 0] [type int] [line: 3]
Sibling: 7  Func main [ref: Global, size: -51, loc: 0] [type void] [line: 5]
!   Child: 1  Compound [ref: None, size: -2, loc: 0] [type void] [line: 6]
!   !   Child: 1  Compound [ref: None, size: -4, loc: 0] [type void] [line: 7]
!   !   !   Child: 0  Var: x [ref: Local, size: 1, loc: -2] [type int] [line: 8]
!   !   !   Sibling: 0  Var: y [ref: Local, size: 1, loc: -3] [type int] [line: 9]
!   !   !   Child: 1  Assign: = [type int] [line: 11]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 11]
!   !   !   !   Child: 1  Const: 11 [type int] [line: 11]
!   !   !   Sibling: 0  Assign: = [type int] [line: 12]
!   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 12]
!   !   !   !   Child: 1  Const: 12 [type int] [line: 12]
!   !   !   Sibling: 1  Assign: = [type int] [line: 13]
!   !   !   !   Child: 0  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 13]
!   !   !   !   Child: 1  Const: 13 [type int] [line: 13]
!   !   !   Sibling: 2  Assign: = [type int] [line: 15]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 15]
!   !   !   !   Child: 1  Op: + [type int] [line: 15]
!   !   !   !   !   Child: 0  Op: + [type int] [line: 15]
!   !   !   !   !   !   Child: 0  Op: + [type int] [line: 15]
!   !   !   !   !   !   !   Child: 0  Const: 3 [type int] [line: 15]
!   !   !   !   !   !   !   Child: 1  Op: * [type int] [line: 15]
!   !   !   !   !   !   !   !   Child: 0  Const: 4 [type int] [line: 15]
!   !   !   !   !   !   !   !   Child: 1  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 15]
!   !   !   !   !   !   Child: 1  Op: * [type int] [line: 15]
!   !   !   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 15]
!   !   !   !   !   !   !   Child: 1  Const: 7 [type int] [line: 15]
!   !   !   !   !   Child: 1  Op: * [type int] [line: 15]
!   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 15]
!   !   !   !   !   !   Child: 1  Op: + [type int] [line: 15]
!   !   !   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 15]
!   !   !   !   !   !   !   Child: 1  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 15]
!   !   !   Sibling: 3  Assign: = [type int] [line: 16]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 16]
!   !   !   !   Child: 1  Op: - [type int] [line: 16]
!   !   !   !   !   Child: 0  Op: - [type int] [line: 16]
!   !   !   !   !   !   Child: 0  Op: - [type int] [line: 16]
!   !   !   !   !   !   !   Child: 0  Const: 3 [type int] [line: 16]
!   !   !   !   !   !   !   Child: 1  Op: / [type int] [line: 16]
!   !   !   !   !   !   !   !   Child: 0  Const: 4 [type int] [line: 16]
!   !   !   !   !   !   !   !   Child: 1  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 16]
!   !   !   !   !   !   Child: 1  Op: / [type int] [line: 16]
!   !   !   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 16]
!   !   !   !   !   !   !   Child: 1  Const: 7 [type int] [line: 16]
!   !   !   !   !   Child: 1  Op: / [type int] [line: 16]
!   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 16]
!   !   !   !   !   !   Child: 1  Op: - [type int] [line: 16]
!   !   !   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 16]
!   !   !   !   !   !   !   Child: 1  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 16]
!   !   !   Sibling: 4  Assign: = [type int] [line: 17]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 17]
!   !   !   !   Child: 1  Op: / [type int] [line: 17]
!   !   !   !   !   Child: 0  Op: % [type int] [line: 17]
!   !   !   !   !   !   Child: 0  Op: / [type int] [line: 17]
!   !   !   !   !   !   !   Child: 0  Op: % [type int] [line: 17]
!   !   !   !   !   !   !   !   Child: 0  Const: 3 [type int] [line: 17]
!   !   !   !   !   !   !   !   Child: 1  Const: 4 [type int] [line: 17]
!   !   !   !   !   !   !   Child: 1  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 17]
!   !   !   !   !   !   Child: 1  Op: % [type int] [line: 17]
!   !   !   !   !   !   !   Child: 0  Op: / [type int] [line: 17]
!   !   !   !   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 17]
!   !   !   !   !   !   !   !   Child: 1  Const: 7 [type int] [line: 17]
!   !   !   !   !   !   !   Child: 1  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 17]
!   !   !   !   !   Child: 1  Op: % [type int] [line: 17]
!   !   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 17]
!   !   !   !   !   !   Child: 1  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 17]
!   !   Sibling: 0  Compound [ref: None, size: -39, loc: 0] [type void] [line: 19]
!   !   !   Child: 0  Var: x [ref: Local, size: 1, loc: -4] [type bool] [line: 20]
!   !   !   Sibling: 0  Var: y [ref: Local, size: 1, loc: -5] [type bool] [line: 20]
!   !   !   Sibling: 1  Var: z is array [ref: Local, size: 33, loc: -7] [type bool] [line: 20]
!   !   !   Child: 1  Assign: = [type bool] [line: 22]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -4] [type bool] [line: 22]
!   !   !   !   Child: 1  Const: true [type bool] [line: 22]
!   !   !   Sibling: 0  Assign: = [type bool] [line: 23]
!   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -5] [type bool] [line: 23]
!   !   !   !   Child: 1  Const: false [type bool] [line: 23]
!   !   !   Sibling: 1  Assign: = [type bool] [line: 25]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -4] [type bool] [line: 25]
!   !   !   !   Child: 1  Op: or [type bool] [line: 25]
!   !   !   !   !   Child: 0  Op: or [type bool] [line: 25]
!   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 25]
!   !   !   !   !   !   !   Child: 0  Const: true [type bool] [line: 25]
!   !   !   !   !   !   !   Child: 1  Op: and [type bool] [line: 25]
!   !   !   !   !   !   !   !   Child: 0  Const: false [type bool] [line: 25]
!   !   !   !   !   !   !   !   Child: 1  Id: x [ref: Local, size: 1, loc: -4] [type bool] [line: 25]
!   !   !   !   !   !   Child: 1  Op: and [type bool] [line: 25]
!   !   !   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -5] [type bool] [line: 25]
!   !   !   !   !   !   !   Child: 1  Const: 7 [type int] [line: 25]
!   !   !   !   !   Child: 1  Op: and [type bool] [line: 25]
!   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -4] [type bool] [line: 25]
!   !   !   !   !   !   Child: 1  Op: or [type bool] [line: 25]
!   !   !   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -5] [type bool] [line: 25]
!   !   !   !   !   !   !   Child: 1  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 25]
!   !   !   Sibling: 2  Assign: = [type bool] [line: 26]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -4] [type bool] [line: 26]
!   !   !   !   Child: 1  Op: or [type bool] [line: 26]
!   !   !   !   !   Child: 0  Op: not [type bool] [line: 26]
!   !   !   !   !   !   Child: 0  Const: true [type bool] [line: 26]
!   !   !   !   !   Child: 1  Op: not [type bool] [line: 26]
!   !   !   !   !   !   Child: 0  Op: not [type bool] [line: 26]
!   !   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -4] [type bool] [line: 26]
!   !   !   Sibling: 3  Assign: = [type bool] [line: 28]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -4] [type bool] [line: 28]
!   !   !   !   Child: 1  Op: and [type bool] [line: 28]
!   !   !   !   !   Child: 0  Op: and [type bool] [line: 28]
!   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -4] [type bool] [line: 28]
!   !   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -5] [type bool] [line: 28]
!   !   !   !   !   Child: 1  Id: x [ref: Local, size: 1, loc: -4] [type bool] [line: 28]
!   !   !   Sibling: 4  Assign: = [type bool] [line: 29]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -4] [type bool] [line: 29]
!   !   !   !   Child: 1  Op: or [type bool] [line: 29]
!   !   !   !   !   Child: 0  Op: or [type bool] [line: 29]
!   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -4] [type bool] [line: 29]
!   !   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -5] [type bool] [line: 29]
!   !   !   !   !   Child: 1  Id: x [ref: Local, size: 1, loc: -4] [type bool] [line: 29]
!   !   !   Sibling: 5  Assign: = [type bool] [line: 31]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -4] [type bool] [line: 31]
!   !   !   !   Child: 1  Op: [ [type bool] [line: 31]
!   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 33, loc: -7] [type bool] [line: 31]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 31]
!   !   !   Sibling: 6  Assign: = [type bool] [line: 32]
!   !   !   !   Child: 0  Op: [ [type bool] [line: 32]
!   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 33, loc: -7] [type bool] [line: 32]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 32]
!   !   !   !   Child: 1  Id: x [ref: Local, size: 1, loc: -4] [type bool] [line: 32]
!   !   !   Sibling: 7  Assign: = [type bool] [line: 33]
!   !   !   !   Child: 0  Op: [ [type bool] [line: 33]
!   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 33, loc: -7] [type bool] [line: 33]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 33]
!   !   !   !   Child: 1  Op: [ [type bool] [line: 33]
!   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 33, loc: -7] [type bool] [line: 33]
!   !   !   !   !   Child: 1  Const: 2 [type int] [line: 33]
!   !   !   Sibling: 8  Assign: = [type bool] [line: 34]
!   !   !   !   Child: 0  Op: [ [type bool] [line: 34]
!   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 33, loc: -7] [type bool] [line: 34]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 34]
!   !   !   !   Child: 1  Op: + [type int] [line: 34]
!   !   !   !   !   Child: 0  Op: [ [type bool] [line: 34]
!   !   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 33, loc: -7] [type bool] [line: 34]
!   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 34]
!   !   !   !   !   Child: 1  Op: [ [type bool] [line: 34]
!   !   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 33, loc: -7] [type bool] [line: 34]
!   !   !   !   !   !   Child: 1  Const: 3 [type int] [line: 34]
!   !   Sibling: 1  Compound [ref: None, size: -43, loc: 0] [type void] [line: 36]
!   !   !   Child: 0  Var: z is array [ref: Local, size: 4, loc: -40] [type int] [line: 37]
!   !   !   Child: 1  Assign: = [undefined type] [line: 39]
!   !   !   !   Child: 0  Id: x [ref: None, size: 1, loc: 0] [undefined type] [line: 39]
!   !   !   !   Child: 1  Op: [ [type int] [line: 39]
!   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 4, loc: -40] [type int] [line: 39]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 39]
!   !   !   Sibling: 0  Assign: = [type int] [line: 40]
!   !   !   !   Child: 0  Op: [ [type int] [line: 40]
!   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 4, loc: -40] [type int] [line: 40]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 40]
!   !   !   !   Child: 1  Id: x [ref: None, size: 1, loc: 0] [undefined type] [line: 40]
!   !   !   Sibling: 1  Assign: = [type int] [line: 41]
!   !   !   !   Child: 0  Op: [ [type int] [line: 41]
!   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 4, loc: -40] [type int] [line: 41]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 41]
!   !   !   !   Child: 1  Op: [ [type int] [line: 41]
!   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 4, loc: -40] [type int] [line: 41]
!   !   !   !   !   Child: 1  Const: 2 [type int] [line: 41]
!   !   !   Sibling: 2  Assign: = [type int] [line: 42]
!   !   !   !   Child: 0  Op: [ [type int] [line: 42]
!   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 4, loc: -40] [type int] [line: 42]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 42]
!   !   !   !   Child: 1  Op: + [type int] [line: 42]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 42]
!   !   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 4, loc: -40] [type int] [line: 42]
!   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 42]
!   !   !   !   !   Child: 1  Op: [ [type int] [line: 42]
!   !   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 4, loc: -40] [type int] [line: 42]
!   !   !   !   !   !   Child: 1  Const: 3 [type int] [line: 42]
!   !   !   Sibling: 3  Assign: = [undefined type] [line: 43]
!   !   !   !   Child: 0  Id: x [ref: None, size: 1, loc: 0] [undefined type] [line: 43]
!   !   !   !   Child: 1  Op: + [type int] [line: 43]
!   !   !   !   !   Child: 0  Op: + [type int] [line: 43]
!   !   !   !   !   !   Child: 0  Op: + [type int] [line: 43]
!   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 43]
!   !   !   !   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 4, loc: -40] [type int] [line: 43]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 43]
!   !   !   !   !   !   !   Child: 1  Op: * [type int] [line: 43]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 43]
!   !   !   !   !   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 4, loc: -40] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 43]
!   !   !   !   !   !   !   !   Child: 1  Op: [ [type int] [line: 43]
!   !   !   !   !   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 4, loc: -40] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 43]
!   !   !   !   !   !   Child: 1  Op: * [type int] [line: 43]
!   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 43]
!   !   !   !   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 4, loc: -40] [type int] [line: 43]
!   !   !   !   !   !   !   !   Child: 1  Const: 3 [type int] [line: 43]
!   !   !   !   !   !   !   Child: 1  Const: 7 [type int] [line: 43]
!   !   !   !   !   Child: 1  Op: * [type int] [line: 43]
!   !   !   !   !   !   Child: 0  Id: x [ref: None, size: 1, loc: 0] [undefined type] [line: 43]
!   !   !   !   !   !   Child: 1  Op: + [type int] [line: 43]
!   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 43]
!   !   !   !   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 4, loc: -40] [type int] [line: 43]
!   !   !   !   !   !   !   !   Child: 1  Const: 4 [type int] [line: 43]
!   !   !   !   !   !   !   Child: 1  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 43]
!   !   Sibling: 2  Compound [ref: None, size: -47, loc: 0] [type void] [line: 46]
!   !   !   Child: 0  Var: a [ref: Local, size: 1, loc: -43] [type int] [line: 47]
!   !   !   Sibling: 0  Var: b [ref: Local, size: 1, loc: -44] [type int] [line: 47]
!   !   !   Sibling: 1  Var: c [ref: Local, size: 1, loc: -45] [type int] [line: 47]
!   !   !   Sibling: 2  Var: d [ref: Local, size: 1, loc: -46] [type int] [line: 47]
!   !   !   Child: 1  Assign: = [type int] [line: 48]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -43] [type int] [line: 48]
!   !   !   !   Child: 1  Assign: = [type int] [line: 48]
!   !   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -44] [type int] [line: 48]
!   !   !   !   !   Child: 1  Id: c [ref: Local, size: 1, loc: -45] [type int] [line: 48]
!   !   !   Sibling: 0  Assign: = [type int] [line: 49]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -43] [type int] [line: 49]
!   !   !   !   Child: 1  Op: + [type int] [line: 49]
!   !   !   !   !   Child: 0  Op: + [type int] [line: 49]
!   !   !   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -44] [type int] [line: 49]
!   !   !   !   !   !   Child: 1  Id: c [ref: Local, size: 1, loc: -45] [type int] [line: 49]
!   !   !   !   !   Child: 1  Id: d [ref: Local, size: 1, loc: -46] [type int] [line: 49]
!   !   !   Sibling: 1  Assign: = [type int] [line: 50]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -43] [type int] [line: 50]
!   !   !   !   Child: 1  Op: * [type int] [line: 50]
!   !   !   !   !   Child: 0  Op: * [type int] [line: 50]
!   !   !   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -44] [type int] [line: 50]
!   !   !   !   !   !   Child: 1  Id: c [ref: Local, size: 1, loc: -45] [type int] [line: 50]
!   !   !   !   !   Child: 1  Id: d [ref: Local, size: 1, loc: -46] [type int] [line: 50]
!   !   !   Sibling: 2  Assign: = [type int] [line: 51]
!   !   !   !   Child: 0  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 51]
!   !   !   !   Child: 1  Assign: += [type int] [line: 51]
!   !   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -43] [type int] [line: 51]
!   !   !   !   !   Child: 1  Assign: -= [type int] [line: 51]
!   !   !   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -44] [type int] [line: 51]
!   !   !   !   !   !   Child: 1  Op: + [type int] [line: 51]
!   !   !   !   !   !   !   Child: 0  Id: c [ref: Local, size: 1, loc: -45] [type int] [line: 51]
!   !   !   !   !   !   !   Child: 1  Id: d [ref: Local, size: 1, loc: -46] [type int] [line: 51]
!   !   !   Sibling: 3  Assign: = [type int] [line: 52]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -43] [type int] [line: 52]
!   !   !   !   Child: 1  Op: + [type int] [line: 52]
!   !   !   !   !   Child: 0  Assign: = [type int] [line: 52]
!   !   !   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -44] [type int] [line: 52]
!   !   !   !   !   !   Child: 1  Const: 3 [type int] [line: 52]
!   !   !   !   !   Child: 1  Assign: = [type int] [line: 52]
!   !   !   !   !   !   Child: 0  Id: c [ref: Local, size: 1, loc: -45] [type int] [line: 52]
!   !   !   !   !   !   Child: 1  Const: 4 [type int] [line: 52]
!   !   Sibling: 3  Compound [ref: None, size: -51, loc: 0] [type void] [line: 54]
!   !   !   Child: 0  Var: a [ref: Local, size: 1, loc: -47] [type int] [line: 55]
!   !   !   Sibling: 0  Var: b [ref: Local, size: 1, loc: -48] [type int] [line: 55]
!   !   !   Sibling: 1  Var: x [ref: Local, size: 1, loc: -49] [type bool] [line: 56]
!   !   !   Sibling: 2  Var: y [ref: Local, size: 1, loc: -50] [type bool] [line: 56]
!   !   !   Child: 1  Assign: = [type bool] [line: 57]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -49] [type bool] [line: 57]
!   !   !   !   Child: 1  Op: or [type bool] [line: 57]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -49] [type bool] [line: 57]
!   !   !   !   !   Child: 1  Op: and [type bool] [line: 57]
!   !   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -50] [type bool] [line: 57]
!   !   !   !   !   !   Child: 1  Op: > [type bool] [line: 57]
!   !   !   !   !   !   !   Child: 0  Op: * [type int] [line: 57]
!   !   !   !   !   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -48] [type int] [line: 57]
!   !   !   !   !   !   !   !   Child: 1  Id: a [ref: Local, size: 1, loc: -47] [type int] [line: 57]
!   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 57]
!   !   !   !   !   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -47] [type int] [line: 57]
!   !   !   !   !   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -48] [type int] [line: 57]
Offset for end of global space: -1
Number of warnings: 0
Number of errors: 9
