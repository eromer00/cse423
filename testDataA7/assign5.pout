Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func main [ref: Global, size: -5, loc: 0] [type void] [line: 3]
!   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 4]
!   !   Child: 0  Var: x [ref: Local, size: 1, loc: -2] [type int] [line: 5]
!   !   Sibling: 0  Var: y [ref: Local, size: 1, loc: -3] [type int] [line: 5]
!   !   Sibling: 1  Var: z [ref: Local, size: 1, loc: -4] [type int] [line: 5]
!   !   Child: 1  Assign: = [type int] [line: 6]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 6]
!   !   !   Child: 1  Const: 333 [type int] [line: 6]
!   !   Sibling: 0  Assign: = [type int] [line: 7]
!   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 7]
!   !   !   Child: 1  Const: 444 [type int] [line: 7]
!   !   Sibling: 1  Assign: = [type int] [line: 8]
!   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 8]
!   !   !   Child: 1  Const: 666 [type int] [line: 8]
!   !   Sibling: 2  Assign: = [type int] [line: 10]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 10]
!   !   !   Child: 1  Assign: = [type int] [line: 10]
!   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 10]
!   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 10]
!   !   Sibling: 3  Call: output [type void] [line: 11]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 11]
!   !   Sibling: 4  Call: output [type void] [line: 11]
!   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 11]
!   !   Sibling: 5  Call: output [type void] [line: 11]
!   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 11]
!   !   Sibling: 6  Call: outnl [type void] [line: 11]
!   !   Sibling: 7  Assign: += [type int] [line: 12]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 12]
!   !   !   Child: 1  Assign: = [type int] [line: 12]
!   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 12]
!   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 12]
!   !   Sibling: 8  Call: output [type void] [line: 13]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 13]
!   !   Sibling: 9  Call: output [type void] [line: 13]
!   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 13]
!   !   Sibling: 10  Call: output [type void] [line: 13]
!   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 13]
!   !   Sibling: 11  Call: outnl [type void] [line: 13]
!   !   Sibling: 12  Assign: = [type int] [line: 14]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 14]
!   !   !   Child: 1  Assign: += [type int] [line: 14]
!   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 14]
!   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 14]
!   !   Sibling: 13  Call: output [type void] [line: 15]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 15]
!   !   Sibling: 14  Call: output [type void] [line: 15]
!   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 15]
!   !   Sibling: 15  Call: output [type void] [line: 15]
!   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 15]
!   !   Sibling: 16  Call: outnl [type void] [line: 15]
!   !   Sibling: 17  Assign: += [type int] [line: 16]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 16]
!   !   !   Child: 1  Assign: += [type int] [line: 16]
!   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 16]
!   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 16]
!   !   Sibling: 18  Call: output [type void] [line: 17]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 17]
!   !   Sibling: 19  Call: output [type void] [line: 17]
!   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 17]
!   !   Sibling: 20  Call: output [type void] [line: 17]
!   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 17]
!   !   Sibling: 21  Call: outnl [type void] [line: 17]
!   !   Sibling: 22  Assign: = [type int] [line: 19]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 19]
!   !   !   Child: 1  Assign: = [type int] [line: 19]
!   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 19]
!   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 19]
!   !   Sibling: 23  Call: output [type void] [line: 20]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 20]
!   !   Sibling: 24  Call: output [type void] [line: 20]
!   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 20]
!   !   Sibling: 25  Call: output [type void] [line: 20]
!   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 20]
!   !   Sibling: 26  Call: outnl [type void] [line: 20]
!   !   Sibling: 27  Assign: -= [type int] [line: 21]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 21]
!   !   !   Child: 1  Assign: = [type int] [line: 21]
!   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 21]
!   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 21]
!   !   Sibling: 28  Call: output [type void] [line: 22]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 22]
!   !   Sibling: 29  Call: output [type void] [line: 22]
!   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 22]
!   !   Sibling: 30  Call: output [type void] [line: 22]
!   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 22]
!   !   Sibling: 31  Call: outnl [type void] [line: 22]
!   !   Sibling: 32  Assign: = [type int] [line: 23]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 23]
!   !   !   Child: 1  Assign: -= [type int] [line: 23]
!   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 23]
!   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 23]
!   !   Sibling: 33  Call: output [type void] [line: 24]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 24]
!   !   Sibling: 34  Call: output [type void] [line: 24]
!   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 24]
!   !   Sibling: 35  Call: output [type void] [line: 24]
!   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 24]
!   !   Sibling: 36  Call: outnl [type void] [line: 24]
!   !   Sibling: 37  Assign: -= [type int] [line: 25]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 25]
!   !   !   Child: 1  Assign: -= [type int] [line: 25]
!   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 25]
!   !   !   !   Child: 1  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 25]
!   !   Sibling: 38  Call: output [type void] [line: 26]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 26]
!   !   Sibling: 39  Call: output [type void] [line: 26]
!   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -3] [type int] [line: 26]
!   !   Sibling: 40  Call: output [type void] [line: 26]
!   !   !   Child: 0  Id: z [ref: Local, size: 1, loc: -4] [type int] [line: 26]
!   !   Sibling: 41  Call: outnl [type void] [line: 26]
!   !   Sibling: 42  Return [type void] [line: 28]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 0
