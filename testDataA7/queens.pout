WARNING(27): Expecting to return type int but function 'try' has no return statement.
Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: row is array [ref: Global, size: 13, loc: -1] [type int] [line: 7]
Sibling: 7  Var: col is array [ref: Global, size: 13, loc: -14] [type int] [line: 8]
Sibling: 8  Var: diagone is array [ref: Global, size: 26, loc: -27] [type int] [line: 9]
Sibling: 9  Var: diagtwo is array [ref: Global, size: 26, loc: -53] [type int] [line: 10]
Sibling: 10  Var: n [ref: Global, size: 1, loc: -78] [type int] [line: 11]
Sibling: 11  Var: count [ref: Global, size: 1, loc: -79] [type int] [line: 12]
Sibling: 12  Func printboard [ref: Global, size: -4, loc: 0] [type void] [line: 14]
!   Child: 0  Param col is array [ref: Param, size: 1, loc: -2] [type int] [line: 14]
!   Child: 1  Compound [ref: None, size: -4, loc: 0] [type void] [line: 15]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -3] [type int] [line: 16]
!   !   Child: 1  Assign: = [type int] [line: 18]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -3] [type int] [line: 18]
!   !   !   Child: 1  Const: 0 [type int] [line: 18]
!   !   Sibling: 0  While  [type void] [line: 19]
!   !   !   Child: 0  Op: < [type bool] [line: 19]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -3] [type int] [line: 19]
!   !   !   !   Child: 1  Id: n [ref: Global, size: 1, loc: -78] [type int] [line: 19]
!   !   !   Child: 1  Compound [ref: None, size: -4, loc: 0] [type void] [line: 19]
!   !   !   !   Child: 1  Call: output [type void] [line: 20]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 20]
!   !   !   !   !   !   Child: 0  Id: col is array [ref: Param, size: 1, loc: -2] [type int] [line: 20]
!   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -3] [type int] [line: 20]
!   !   !   !   Sibling: 0  Assign: ++ [type int] [line: 21]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -3] [type int] [line: 21]
!   !   Sibling: 1  Call: outnl [type void] [line: 23]
!   !   Sibling: 2  Assign: ++ [type int] [line: 24]
!   !   !   Child: 0  Id: count [ref: Global, size: 1, loc: -79] [type int] [line: 24]
Sibling: 13  Func try [ref: Global, size: -4, loc: 0] [type int] [line: 27]
!   Child: 0  Param c [ref: Param, size: 1, loc: -2] [type int] [line: 27]
!   Child: 1  Compound [ref: None, size: -4, loc: 0] [type void] [line: 28]
!   !   Child: 0  Var: r [ref: Local, size: 1, loc: -3] [type int] [line: 29]
!   !   Child: 1  If  [type void] [line: 31]
!   !   !   Child: 0  Op: == [type bool] [line: 31]
!   !   !   !   Child: 0  Id: c [ref: Param, size: 1, loc: -2] [type int] [line: 31]
!   !   !   !   Child: 1  Id: n [ref: Global, size: 1, loc: -78] [type int] [line: 31]
!   !   !   Child: 1  Call: printboard [type void] [line: 32]
!   !   !   !   Child: 0  Id: col is array [ref: Global, size: 13, loc: -14] [type int] [line: 32]
!   !   !   Child: 2  Compound [ref: None, size: -4, loc: 0] [type void] [line: 33]
!   !   !   !   Child: 1  Assign: = [type int] [line: 34]
!   !   !   !   !   Child: 0  Id: r [ref: Local, size: 1, loc: -3] [type int] [line: 34]
!   !   !   !   !   Child: 1  Const: 0 [type int] [line: 34]
!   !   !   !   Sibling: 0  While  [type void] [line: 35]
!   !   !   !   !   Child: 0  Op: < [type bool] [line: 35]
!   !   !   !   !   !   Child: 0  Id: r [ref: Local, size: 1, loc: -3] [type int] [line: 35]
!   !   !   !   !   !   Child: 1  Id: n [ref: Global, size: 1, loc: -78] [type int] [line: 35]
!   !   !   !   !   Child: 1  Compound [ref: None, size: -4, loc: 0] [type void] [line: 35]
!   !   !   !   !   !   Child: 1  If  [type void] [line: 36]
!   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 36]
!   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 36]
!   !   !   !   !   !   !   !   !   Child: 0  Op: == [type bool] [line: 36]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: row is array [ref: Global, size: 13, loc: -1] [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Id: r [ref: Local, size: 1, loc: -3] [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 36]
!   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 36]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: diagone is array [ref: Global, size: 26, loc: -27] [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: r [ref: Local, size: 1, loc: -3] [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Id: c [ref: Param, size: 1, loc: -2] [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 36]
!   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 36]
!   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: diagtwo is array [ref: Global, size: 26, loc: -53] [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: + [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: r [ref: Local, size: 1, loc: -3] [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: n [ref: Global, size: 1, loc: -78] [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 36]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Id: c [ref: Param, size: 1, loc: -2] [type int] [line: 36]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 36]
!   !   !   !   !   !   !   Child: 1  Compound [ref: None, size: -4, loc: 0] [type void] [line: 36]
!   !   !   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 37]
!   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 37]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: row is array [ref: Global, size: 13, loc: -1] [type int] [line: 37]
!   !   !   !   !   !   !   !   !   !   Child: 1  Id: r [ref: Local, size: 1, loc: -3] [type int] [line: 37]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 37]
!   !   !   !   !   !   !   !   Sibling: 0  Assign: = [type int] [line: 38]
!   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 38]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: col is array [ref: Global, size: 13, loc: -14] [type int] [line: 38]
!   !   !   !   !   !   !   !   !   !   Child: 1  Id: c [ref: Param, size: 1, loc: -2] [type int] [line: 38]
!   !   !   !   !   !   !   !   !   Child: 1  Id: r [ref: Local, size: 1, loc: -3] [type int] [line: 38]
!   !   !   !   !   !   !   !   Sibling: 1  Assign: = [type int] [line: 39]
!   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 39]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: diagone is array [ref: Global, size: 26, loc: -27] [type int] [line: 39]
!   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 39]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: r [ref: Local, size: 1, loc: -3] [type int] [line: 39]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Id: c [ref: Param, size: 1, loc: -2] [type int] [line: 39]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 39]
!   !   !   !   !   !   !   !   Sibling: 2  Assign: = [type int] [line: 40]
!   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 40]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: diagtwo is array [ref: Global, size: 26, loc: -53] [type int] [line: 40]
!   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 40]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: + [type int] [line: 40]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: r [ref: Local, size: 1, loc: -3] [type int] [line: 40]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 40]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: n [ref: Global, size: 1, loc: -78] [type int] [line: 40]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 40]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Id: c [ref: Param, size: 1, loc: -2] [type int] [line: 40]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 40]
!   !   !   !   !   !   !   !   Sibling: 3  Call: try [type int] [line: 41]
!   !   !   !   !   !   !   !   !   Child: 0  Op: + [type int] [line: 41]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: c [ref: Param, size: 1, loc: -2] [type int] [line: 41]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 41]
!   !   !   !   !   !   !   !   Sibling: 4  Assign: = [type int] [line: 42]
!   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 42]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: row is array [ref: Global, size: 13, loc: -1] [type int] [line: 42]
!   !   !   !   !   !   !   !   !   !   Child: 1  Id: r [ref: Local, size: 1, loc: -3] [type int] [line: 42]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 42]
!   !   !   !   !   !   !   !   Sibling: 5  Assign: = [type int] [line: 43]
!   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: diagone is array [ref: Global, size: 26, loc: -27] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: r [ref: Local, size: 1, loc: -3] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Id: c [ref: Param, size: 1, loc: -2] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 43]
!   !   !   !   !   !   !   !   Sibling: 6  Assign: = [type int] [line: 44]
!   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: diagtwo is array [ref: Global, size: 26, loc: -53] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: + [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: r [ref: Local, size: 1, loc: -3] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: n [ref: Global, size: 1, loc: -78] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Id: c [ref: Param, size: 1, loc: -2] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 44]
!   !   !   !   !   !   Sibling: 0  Assign: ++ [type int] [line: 46]
!   !   !   !   !   !   !   Child: 0  Id: r [ref: Local, size: 1, loc: -3] [type int] [line: 46]
Sibling: 14  Func solve [ref: Global, size: -3, loc: 0] [type int] [line: 51]
!   Child: 0  Param num [ref: Param, size: 1, loc: -2] [type int] [line: 51]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 52]
!   !   Child: 1  Assign: = [type int] [line: 53]
!   !   !   Child: 0  Id: n [ref: Global, size: 1, loc: -78] [type int] [line: 53]
!   !   !   Child: 1  Id: num [ref: Param, size: 1, loc: -2] [type int] [line: 53]
!   !   Sibling: 0  Assign: = [type int] [line: 54]
!   !   !   Child: 0  Id: count [ref: Global, size: 1, loc: -79] [type int] [line: 54]
!   !   !   Child: 1  Const: 0 [type int] [line: 54]
!   !   Sibling: 1  Call: try [type int] [line: 55]
!   !   !   Child: 0  Const: 0 [type int] [line: 55]
!   !   Sibling: 2  Return [type void] [line: 57]
!   !   !   Child: 0  Id: count [ref: Global, size: 1, loc: -79] [type int] [line: 57]
Sibling: 15  Func main [ref: Global, size: -3, loc: 0] [type void] [line: 60]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 61]
!   !   Child: 0  Var: num [ref: Local, size: 1, loc: -2] [type int] [line: 62]
!   !   Child: 1  While  [type void] [line: 64]
!   !   !   Child: 0  Op: > [type bool] [line: 64]
!   !   !   !   Child: 0  Assign: = [type int] [line: 64]
!   !   !   !   !   Child: 0  Id: num [ref: Local, size: 1, loc: -2] [type int] [line: 64]
!   !   !   !   !   Child: 1  Call: input [type int] [line: 64]
!   !   !   !   Child: 1  Const: 0 [type int] [line: 64]
!   !   !   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 64]
!   !   !   !   Child: 1  Call: output [type void] [line: 65]
!   !   !   !   !   Child: 0  Call: solve [type int] [line: 65]
!   !   !   !   !   !   Child: 0  Id: num [ref: Local, size: 1, loc: -2] [type int] [line: 65]
!   !   !   !   Sibling: 0  Call: outnl [type void] [line: 66]
Offset for end of global space: -80
Number of warnings: 1
Number of errors: 0
