Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func main [ref: Global, size: -11, loc: 0] [type int] [line: 2]
!   Child: 1  Compound [ref: None, size: -11, loc: 0] [type void] [line: 3]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -2] [type int] [line: 4]
!   !   Sibling: 0  Var: m [ref: Local, size: 1, loc: -3] [type int] [line: 5]
!   !   Sibling: 1  Var: t [ref: Local, size: 1, loc: -4] [type int] [line: 6]
!   !   Sibling: 2  Var: x [ref: Local, size: 1, loc: -5] [type int] [line: 7]
!   !   Sibling: 3  Var: tm [ref: Local, size: 1, loc: -6] [type int] [line: 8]
!   !   Sibling: 4  Var: num [ref: Local, size: 1, loc: -7] [type int] [line: 9]
!   !   Sibling: 5  Var: min [ref: Local, size: 1, loc: -8] [type int] [line: 10]
!   !   Sibling: 6  Var: a [ref: Local, size: 1, loc: -9] [type int] [line: 11]
!   !   Sibling: 7  Var: b [ref: Local, size: 1, loc: -10] [type int] [line: 12]
!   !   Child: 1  Assign: = [type int] [line: 14]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 14]
!   !   !   Child: 1  Const: 1 [type int] [line: 14]
!   !   Sibling: 0  Assign: = [type int] [line: 15]
!   !   !   Child: 0  Id: min [ref: Local, size: 1, loc: -8] [type int] [line: 15]
!   !   !   Child: 1  Const: 1 [type int] [line: 15]
!   !   Sibling: 1  While  [type void] [line: 16]
!   !   !   Child: 0  Op: < [type bool] [line: 16]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 16]
!   !   !   !   Child: 1  Const: 2000 [type int] [line: 16]
!   !   !   Child: 1  Compound [ref: None, size: -11, loc: 0] [type void] [line: 16]
!   !   !   !   Child: 1  Assign: = [type int] [line: 17]
!   !   !   !   !   Child: 0  Id: m [ref: Local, size: 1, loc: -3] [type int] [line: 17]
!   !   !   !   !   Child: 1  Const: 2 [type int] [line: 17]
!   !   !   !   Sibling: 0  Assign: = [type int] [line: 18]
!   !   !   !   !   Child: 0  Id: tm [ref: Local, size: 1, loc: -6] [type int] [line: 18]
!   !   !   !   !   Child: 1  Op: / [type int] [line: 18]
!   !   !   !   !   !   Child: 0  Op: * [type int] [line: 18]
!   !   !   !   !   !   !   Child: 0  Id: m [ref: Local, size: 1, loc: -3] [type int] [line: 18]
!   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 18]
!   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Local, size: 1, loc: -3] [type int] [line: 18]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 18]
!   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 18]
!   !   !   !   Sibling: 1  Assign: = [type int] [line: 19]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -5] [type int] [line: 19]
!   !   !   !   !   Child: 1  Op: - [type int] [line: 19]
!   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 19]
!   !   !   !   !   !   Child: 1  Op: + [type int] [line: 19]
!   !   !   !   !   !   !   Child: 0  Id: m [ref: Local, size: 1, loc: -3] [type int] [line: 19]
!   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 19]
!   !   !   !   Sibling: 2  Assign: = [type int] [line: 20]
!   !   !   !   !   Child: 0  Id: t [ref: Local, size: 1, loc: -4] [type int] [line: 20]
!   !   !   !   !   Child: 1  Op: / [type int] [line: 20]
!   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -5] [type int] [line: 20]
!   !   !   !   !   !   Child: 1  Id: tm [ref: Local, size: 1, loc: -6] [type int] [line: 20]
!   !   !   !   Sibling: 3  Assign: = [type int] [line: 21]
!   !   !   !   !   Child: 0  Id: num [ref: Local, size: 1, loc: -7] [type int] [line: 21]
!   !   !   !   !   Child: 1  Const: 0 [type int] [line: 21]
!   !   !   !   Sibling: 4  While  [type void] [line: 22]
!   !   !   !   !   Child: 0  Op: > [type bool] [line: 22]
!   !   !   !   !   !   Child: 0  Id: t [ref: Local, size: 1, loc: -4] [type int] [line: 22]
!   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 22]
!   !   !   !   !   Child: 1  Compound [ref: None, size: -11, loc: 0] [type void] [line: 22]
!   !   !   !   !   !   Child: 1  If  [type void] [line: 23]
!   !   !   !   !   !   !   Child: 0  Op: == [type bool] [line: 23]
!   !   !   !   !   !   !   !   Child: 0  Op: * [type int] [line: 23]
!   !   !   !   !   !   !   !   !   Child: 0  Id: t [ref: Local, size: 1, loc: -4] [type int] [line: 23]
!   !   !   !   !   !   !   !   !   Child: 1  Id: tm [ref: Local, size: 1, loc: -6] [type int] [line: 23]
!   !   !   !   !   !   !   !   Child: 1  Id: x [ref: Local, size: 1, loc: -5] [type int] [line: 23]
!   !   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 23]
!   !   !   !   !   !   !   !   Child: 0  Id: num [ref: Local, size: 1, loc: -7] [type int] [line: 23]
!   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 23]
!   !   !   !   !   !   !   !   !   Child: 0  Id: num [ref: Local, size: 1, loc: -7] [type int] [line: 23]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 23]
!   !   !   !   !   !   Sibling: 0  Assign: = [type int] [line: 24]
!   !   !   !   !   !   !   Child: 0  Id: m [ref: Local, size: 1, loc: -3] [type int] [line: 24]
!   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 24]
!   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Local, size: 1, loc: -3] [type int] [line: 24]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 24]
!   !   !   !   !   !   Sibling: 1  Assign: = [type int] [line: 25]
!   !   !   !   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -9] [type int] [line: 25]
!   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 25]
!   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Local, size: 1, loc: -3] [type int] [line: 25]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 25]
!   !   !   !   !   !   Sibling: 2  Assign: = [type int] [line: 26]
!   !   !   !   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -10] [type int] [line: 26]
!   !   !   !   !   !   !   Child: 1  Op: * [type int] [line: 26]
!   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Local, size: 1, loc: -3] [type int] [line: 26]
!   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 26]
!   !   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Local, size: 1, loc: -3] [type int] [line: 26]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 26]
!   !   !   !   !   !   Sibling: 3  Assign: = [type int] [line: 27]
!   !   !   !   !   !   !   Child: 0  Id: tm [ref: Local, size: 1, loc: -6] [type int] [line: 27]
!   !   !   !   !   !   !   Child: 1  Op: / [type int] [line: 27]
!   !   !   !   !   !   !   !   Child: 0  Op: * [type int] [line: 27]
!   !   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Local, size: 1, loc: -3] [type int] [line: 27]
!   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 27]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Local, size: 1, loc: -3] [type int] [line: 27]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 27]
!   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 27]
!   !   !   !   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 27]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 27]
!   !   !   !   !   !   Sibling: 4  Assign: = [type int] [line: 28]
!   !   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -5] [type int] [line: 28]
!   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 28]
!   !   !   !   !   !   !   !   Child: 0  Op: - [type int] [line: 28]
!   !   !   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 28]
!   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 28]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Local, size: 1, loc: -3] [type int] [line: 28]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 28]
!   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 28]
!   !   !   !   !   !   Sibling: 5  Assign: = [type int] [line: 29]
!   !   !   !   !   !   !   Child: 0  Id: t [ref: Local, size: 1, loc: -4] [type int] [line: 29]
!   !   !   !   !   !   !   Child: 1  Op: * [type int] [line: 29]
!   !   !   !   !   !   !   !   Child: 0  Op: / [type int] [line: 29]
!   !   !   !   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -5] [type int] [line: 29]
!   !   !   !   !   !   !   !   !   Child: 1  Id: tm [ref: Local, size: 1, loc: -6] [type int] [line: 29]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 29]
!   !   !   !   Sibling: 5  If  [type void] [line: 31]
!   !   !   !   !   Child: 0  Op: >= [type bool] [line: 31]
!   !   !   !   !   !   Child: 0  Id: num [ref: Local, size: 1, loc: -7] [type int] [line: 31]
!   !   !   !   !   !   Child: 1  Id: min [ref: Local, size: 1, loc: -8] [type int] [line: 31]
!   !   !   !   !   Child: 1  Compound [ref: None, size: -11, loc: 0] [type void] [line: 31]
!   !   !   !   !   !   Child: 1  Call: output [type void] [line: 32]
!   !   !   !   !   !   !   Child: 0  Id: num [ref: Local, size: 1, loc: -7] [type int] [line: 32]
!   !   !   !   !   !   Sibling: 0  Call: output [type void] [line: 33]
!   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 33]
!   !   !   !   !   !   Sibling: 1  Call: output [type void] [line: 34]
!   !   !   !   !   !   !   Child: 0  Const: 11111111 [type int] [line: 34]
!   !   !   !   !   !   Sibling: 2  Assign: = [type int] [line: 35]
!   !   !   !   !   !   !   Child: 0  Id: min [ref: Local, size: 1, loc: -8] [type int] [line: 35]
!   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 35]
!   !   !   !   !   !   !   !   Child: 0  Id: num [ref: Local, size: 1, loc: -7] [type int] [line: 35]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 35]
!   !   !   !   Sibling: 6  Assign: = [type int] [line: 37]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 37]
!   !   !   !   !   Child: 1  Op: + [type int] [line: 37]
!   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 37]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 37]
!   !   Sibling: 2  Return [type void] [line: 39]
!   !   !   Child: 0  Const: 0 [type int] [line: 39]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 0
