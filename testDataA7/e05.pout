Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func main [ref: Global, size: -3, loc: 0] [type void] [line: 2]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 3]
!   !   Child: 0  Var: x [ref: Local, size: 1, loc: -2] [type bool] [line: 4]
!   !   Child: 1  If  [type void] [line: 6]
!   !   !   Child: 0  Const: true [type bool] [line: 6]
!   !   !   Child: 1  If  [type void] [line: 6]
!   !   !   !   Child: 0  Const: true [type bool] [line: 6]
!   !   !   !   Child: 1  Call: output [type void] [line: 6]
!   !   !   !   !   Child: 0  Const: 13 [type int] [line: 6]
!   !   Sibling: 0  If  [type void] [line: 7]
!   !   !   Child: 0  Const: true [type bool] [line: 7]
!   !   !   Child: 1  If  [type void] [line: 7]
!   !   !   !   Child: 0  Const: false [type bool] [line: 7]
!   !   !   !   Child: 1  Call: output [type void] [line: 7]
!   !   !   !   !   Child: 0  Const: 23 [type int] [line: 7]
!   !   Sibling: 1  Call: outnl [type void] [line: 8]
!   !   Sibling: 2  Assign: = [type bool] [line: 10]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type bool] [line: 10]
!   !   !   Child: 1  Const: false [type bool] [line: 10]
!   !   Sibling: 3  If  [type void] [line: 11]
!   !   !   Child: 0  Const: true [type bool] [line: 11]
!   !   !   Child: 1  If  [type void] [line: 11]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type bool] [line: 11]
!   !   !   !   Child: 1  Call: output [type void] [line: 11]
!   !   !   !   !   Child: 0  Const: 44 [type int] [line: 11]
!   !   Sibling: 4  If  [type void] [line: 12]
!   !   !   Child: 0  Const: true [type bool] [line: 12]
!   !   !   Child: 1  If  [type void] [line: 12]
!   !   !   !   Child: 0  Op: not [type bool] [line: 12]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type bool] [line: 12]
!   !   !   !   Child: 1  Call: output [type void] [line: 12]
!   !   !   !   !   Child: 0  Const: 55 [type int] [line: 12]
!   !   Sibling: 5  Call: outnl [type void] [line: 13]
!   !   Sibling: 6  If  [type void] [line: 15]
!   !   !   Child: 0  Const: true [type bool] [line: 15]
!   !   !   Child: 1  If  [type void] [line: 15]
!   !   !   !   Child: 0  Op: > [type bool] [line: 15]
!   !   !   !   !   Child: 0  Const: 3 [type int] [line: 15]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 15]
!   !   !   !   Child: 1  Call: output [type void] [line: 15]
!   !   !   !   !   Child: 0  Const: 987 [type int] [line: 15]
!   !   Sibling: 7  If  [type void] [line: 16]
!   !   !   Child: 0  Const: true [type bool] [line: 16]
!   !   !   Child: 1  If  [type void] [line: 16]
!   !   !   !   Child: 0  Op: < [type bool] [line: 16]
!   !   !   !   !   Child: 0  Const: 3 [type int] [line: 16]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 16]
!   !   !   !   Child: 1  Call: output [type void] [line: 16]
!   !   !   !   !   Child: 0  Const: 211 [type int] [line: 16]
!   !   Sibling: 8  Call: outnl [type void] [line: 17]
!   !   Sibling: 9  If  [type void] [line: 19]
!   !   !   Child: 0  Const: true [type bool] [line: 19]
!   !   !   Child: 1  If  [type void] [line: 19]
!   !   !   !   Child: 0  Const: true [type bool] [line: 19]
!   !   !   !   Child: 1  Call: output [type void] [line: 19]
!   !   !   !   !   Child: 0  Const: 13 [type int] [line: 19]
!   !   !   !   Child: 2  Call: output [type void] [line: 19]
!   !   !   !   !   Child: 0  Const: 51 [type int] [line: 19]
!   !   Sibling: 10  If  [type void] [line: 20]
!   !   !   Child: 0  Const: true [type bool] [line: 20]
!   !   !   Child: 1  If  [type void] [line: 20]
!   !   !   !   Child: 0  Const: false [type bool] [line: 20]
!   !   !   !   Child: 1  Call: output [type void] [line: 20]
!   !   !   !   !   Child: 0  Const: 23 [type int] [line: 20]
!   !   !   !   Child: 2  Call: output [type void] [line: 20]
!   !   !   !   !   Child: 0  Const: 451 [type int] [line: 20]
!   !   Sibling: 11  Call: outnl [type void] [line: 21]
!   !   Sibling: 12  Assign: = [type bool] [line: 23]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type bool] [line: 23]
!   !   !   Child: 1  Const: false [type bool] [line: 23]
!   !   Sibling: 13  If  [type void] [line: 24]
!   !   !   Child: 0  Const: true [type bool] [line: 24]
!   !   !   Child: 1  If  [type void] [line: 24]
!   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type bool] [line: 24]
!   !   !   !   Child: 1  Call: output [type void] [line: 24]
!   !   !   !   !   Child: 0  Const: 44 [type int] [line: 24]
!   !   !   !   Child: 2  Call: output [type void] [line: 24]
!   !   !   !   !   Child: 0  Const: 514 [type int] [line: 24]
!   !   Sibling: 14  If  [type void] [line: 25]
!   !   !   Child: 0  Const: true [type bool] [line: 25]
!   !   !   Child: 1  If  [type void] [line: 25]
!   !   !   !   Child: 0  Op: not [type bool] [line: 25]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type bool] [line: 25]
!   !   !   !   Child: 1  Call: output [type void] [line: 25]
!   !   !   !   !   Child: 0  Const: 55 [type int] [line: 25]
!   !   !   !   Child: 2  Call: output [type void] [line: 25]
!   !   !   !   !   Child: 0  Const: 1514 [type int] [line: 25]
!   !   Sibling: 15  Call: outnl [type void] [line: 26]
!   !   Sibling: 16  If  [type void] [line: 28]
!   !   !   Child: 0  Const: true [type bool] [line: 28]
!   !   !   Child: 1  If  [type void] [line: 28]
!   !   !   !   Child: 0  Op: > [type bool] [line: 28]
!   !   !   !   !   Child: 0  Const: 3 [type int] [line: 28]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 28]
!   !   !   !   Child: 1  Call: output [type void] [line: 28]
!   !   !   !   !   Child: 0  Const: 987 [type int] [line: 28]
!   !   !   !   Child: 2  Call: output [type void] [line: 28]
!   !   !   !   !   Child: 0  Const: 114 [type int] [line: 28]
!   !   Sibling: 17  If  [type void] [line: 29]
!   !   !   Child: 0  Const: true [type bool] [line: 29]
!   !   !   Child: 1  If  [type void] [line: 29]
!   !   !   !   Child: 0  Op: < [type bool] [line: 29]
!   !   !   !   !   Child: 0  Const: 3 [type int] [line: 29]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 29]
!   !   !   !   Child: 1  Call: output [type void] [line: 29]
!   !   !   !   !   Child: 0  Const: 211 [type int] [line: 29]
!   !   !   !   Child: 2  Call: output [type void] [line: 29]
!   !   !   !   !   Child: 0  Const: 1614 [type int] [line: 29]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 0
