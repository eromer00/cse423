Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: seed [ref: Global, size: 1, loc: 0] [type int] [line: 23]
Sibling: 7  Var: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 26]
Sibling: 8  Var: guess is array [ref: Global, size: 101, loc: -103] [type bool] [line: 29]
Sibling: 9  Func Random [ref: Global, size: -3, loc: 0] [type int] [line: 34]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 35]
!   !   Child: 0  Var: rand [ref: Local, size: 1, loc: -2] [type int] [line: 36]
!   !   Child: 1  Assign: = [type int] [line: 37]
!   !   !   Child: 0  Id: seed [ref: Global, size: 1, loc: 0] [type int] [line: 37]
!   !   !   Child: 1  Op: + [type int] [line: 37]
!   !   !   !   Child: 0  Op: * [type int] [line: 37]
!   !   !   !   !   Child: 0  Id: seed [ref: Global, size: 1, loc: 0] [type int] [line: 37]
!   !   !   !   !   Child: 1  Const: 333331 [type int] [line: 37]
!   !   !   !   Child: 1  Const: 3331 [type int] [line: 37]
!   !   Sibling: 0  If  [type void] [line: 39]
!   !   !   Child: 0  Op: < [type bool] [line: 39]
!   !   !   !   Child: 0  Id: seed [ref: Global, size: 1, loc: 0] [type int] [line: 39]
!   !   !   !   Child: 1  Const: 0 [type int] [line: 39]
!   !   !   Child: 1  Return [type void] [line: 40]
!   !   !   !   Child: 0  Op: % [type int] [line: 40]
!   !   !   !   !   Child: 0  Op: - [type int] [line: 40]
!   !   !   !   !   !   Child: 0  Id: seed [ref: Global, size: 1, loc: 0] [type int] [line: 40]
!   !   !   !   !   Child: 1  Const: 100 [type int] [line: 40]
!   !   !   Child: 2  Return [type void] [line: 42]
!   !   !   !   Child: 0  Op: % [type int] [line: 42]
!   !   !   !   !   Child: 0  Id: seed [ref: Global, size: 1, loc: 0] [type int] [line: 42]
!   !   !   !   !   Child: 1  Const: 100 [type int] [line: 42]
Sibling: 10  Func CreateBoard [ref: Global, size: -5, loc: 0] [type void] [line: 46]
!   Child: 1  Compound [ref: None, size: -4, loc: 0] [type void] [line: 47]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -2] [type int] [line: 48]
!   !   Sibling: 0  Var: j [ref: Local, size: 1, loc: -3] [type int] [line: 48]
!   !   Child: 1  Assign: = [type int] [line: 51]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 51]
!   !   !   Child: 1  Const: 0 [type int] [line: 51]
!   !   Sibling: 0  While  [type void] [line: 52]
!   !   !   Child: 0  Op: < [type bool] [line: 52]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 52]
!   !   !   !   Child: 1  Const: 100 [type int] [line: 52]
!   !   !   Child: 1  Compound [ref: None, size: -4, loc: 0] [type void] [line: 53]
!   !   !   !   Child: 1  Assign: = [type bool] [line: 54]
!   !   !   !   !   Child: 0  Op: [ [type bool] [line: 54]
!   !   !   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 101, loc: -103] [type bool] [line: 54]
!   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 54]
!   !   !   !   !   Child: 1  Const: false [type bool] [line: 54]
!   !   !   !   Sibling: 0  Assign: += [type int] [line: 55]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 55]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 55]
!   !   Sibling: 1  Assign: = [type int] [line: 59]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 59]
!   !   !   Child: 1  Const: 0 [type int] [line: 59]
!   !   Sibling: 2  While  [type void] [line: 60]
!   !   !   Child: 0  Op: < [type bool] [line: 60]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 60]
!   !   !   !   Child: 1  Const: 100 [type int] [line: 60]
!   !   !   Child: 1  Compound [ref: None, size: -4, loc: 0] [type void] [line: 61]
!   !   !   !   Child: 1  Assign: = [type int] [line: 62]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 62]
!   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 62]
!   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 62]
!   !   !   !   !   Child: 1  Const: 0 [type int] [line: 62]
!   !   !   !   Sibling: 0  Assign: += [type int] [line: 63]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 63]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 63]
!   !   Sibling: 3  Assign: = [type int] [line: 67]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 67]
!   !   !   Child: 1  Const: 0 [type int] [line: 67]
!   !   Sibling: 4  While  [type void] [line: 68]
!   !   !   Child: 0  Op: <= [type bool] [line: 68]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 68]
!   !   !   !   Child: 1  Const: 15 [type int] [line: 68]
!   !   !   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 69]
!   !   !   !   Child: 0  Var: rand [ref: Local, size: 1, loc: -4] [type int] [line: 70]
!   !   !   !   Child: 1  While  [type void] [line: 72]
!   !   !   !   !   Child: 0  Const: true [type bool] [line: 72]
!   !   !   !   !   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 73]
!   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 74]
!   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 74]
!   !   !   !   !   !   !   Child: 1  Call: Random [type int] [line: 74]
!   !   !   !   !   !   Sibling: 0  If  [type void] [line: 76]
!   !   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 76]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 76]
!   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 76]
!   !   !   !   !   !   !   !   !   Child: 1  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 76]
!   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 76]
!   !   !   !   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 76]
!   !   !   !   !   !   !   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 77]
!   !   !   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 79]
!   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 79]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 79]
!   !   !   !   !   !   !   !   !   !   Child: 1  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 79]
!   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 79]
!   !   !   !   !   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 79]
!   !   !   !   !   !   !   !   Sibling: 0  If  [type void] [line: 84]
!   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 84]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 84]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: % [type int] [line: 84]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 84]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 84]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 84]
!   !   !   !   !   !   !   !   !   !   Child: 1  Op: > [type bool] [line: 84]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 84]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 9 [type int] [line: 84]
!   !   !   !   !   !   !   !   !   Child: 1  If  [type void] [line: 85]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 85]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 85]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 85]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 85]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 85]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 11 [type int] [line: 85]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 85]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 85]
!   !   !   !   !   !   !   !   !   !   Child: 1  Assign: += [type int] [line: 86]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 86]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 86]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 86]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 86]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 11 [type int] [line: 86]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 86]
!   !   !   !   !   !   !   !   Sibling: 1  If  [type void] [line: 88]
!   !   !   !   !   !   !   !   !   Child: 0  Op: > [type bool] [line: 88]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 88]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 9 [type int] [line: 88]
!   !   !   !   !   !   !   !   !   Child: 1  If  [type void] [line: 89]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   Child: 1  Assign: += [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 90]
!   !   !   !   !   !   !   !   Sibling: 2  If  [type void] [line: 92]
!   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 92]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 92]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: % [type int] [line: 92]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 92]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 9 [type int] [line: 92]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 92]
!   !   !   !   !   !   !   !   !   !   Child: 1  Op: > [type bool] [line: 92]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 92]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 9 [type int] [line: 92]
!   !   !   !   !   !   !   !   !   Child: 1  If  [type void] [line: 93]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 93]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 93]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 93]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 93]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 93]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 9 [type int] [line: 93]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 93]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 93]
!   !   !   !   !   !   !   !   !   !   Child: 1  Assign: += [type int] [line: 94]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 94]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 94]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 94]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 94]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 9 [type int] [line: 94]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 94]
!   !   !   !   !   !   !   !   Sibling: 3  If  [type void] [line: 96]
!   !   !   !   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 96]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: % [type int] [line: 96]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 96]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 96]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 96]
!   !   !   !   !   !   !   !   !   Child: 1  If  [type void] [line: 97]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 97]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 97]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 97]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 97]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 97]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 97]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 97]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 97]
!   !   !   !   !   !   !   !   !   !   Child: 1  Assign: += [type int] [line: 98]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 98]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 98]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 98]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 98]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 98]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 98]
!   !   !   !   !   !   !   !   Sibling: 4  If  [type void] [line: 100]
!   !   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 100]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 100]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: % [type int] [line: 100]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 100]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 9 [type int] [line: 100]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 100]
!   !   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 100]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 100]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 100]
!   !   !   !   !   !   !   !   !   Child: 1  If  [type void] [line: 101]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 101]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 101]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 101]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 101]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 101]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 101]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 101]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 101]
!   !   !   !   !   !   !   !   !   !   Child: 1  Assign: += [type int] [line: 102]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 102]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 102]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 102]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 102]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 102]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 102]
!   !   !   !   !   !   !   !   Sibling: 5  If  [type void] [line: 104]
!   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 104]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 104]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: % [type int] [line: 104]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 104]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 104]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 104]
!   !   !   !   !   !   !   !   !   !   Child: 1  Op: < [type bool] [line: 104]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 104]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 90 [type int] [line: 104]
!   !   !   !   !   !   !   !   !   Child: 1  If  [type void] [line: 105]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 105]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 105]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 105]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 105]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 105]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 9 [type int] [line: 105]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 105]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 105]
!   !   !   !   !   !   !   !   !   !   Child: 1  Assign: += [type int] [line: 106]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 106]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 106]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 106]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 106]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 9 [type int] [line: 106]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 106]
!   !   !   !   !   !   !   !   Sibling: 6  If  [type void] [line: 108]
!   !   !   !   !   !   !   !   !   Child: 0  Op: < [type bool] [line: 108]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 108]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 90 [type int] [line: 108]
!   !   !   !   !   !   !   !   !   Child: 1  If  [type void] [line: 109]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 109]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 109]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 109]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 109]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 109]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 109]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 109]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 109]
!   !   !   !   !   !   !   !   !   !   Child: 1  Assign: += [type int] [line: 110]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 110]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 110]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 110]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 110]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 110]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 110]
!   !   !   !   !   !   !   !   Sibling: 7  If  [type void] [line: 112]
!   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 112]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 112]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: % [type int] [line: 112]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 112]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 9 [type int] [line: 112]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 112]
!   !   !   !   !   !   !   !   !   !   Child: 1  Op: < [type bool] [line: 112]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 112]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 90 [type int] [line: 112]
!   !   !   !   !   !   !   !   !   Child: 1  If  [type void] [line: 113]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 113]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 113]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 113]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 113]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 113]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 11 [type int] [line: 113]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 113]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 113]
!   !   !   !   !   !   !   !   !   !   Child: 1  Assign: += [type int] [line: 114]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 114]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 114]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 114]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: rand [ref: Local, size: 1, loc: -4] [type int] [line: 114]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 11 [type int] [line: 114]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 114]
!   !   !   !   !   !   !   !   Sibling: 8  Break [type void] [line: 116]
!   !   !   !   Sibling: 0  Assign: += [type int] [line: 120]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 120]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 120]
Sibling: 11  Func PrintBoard [ref: Global, size: -3, loc: 0] [type void] [line: 125]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 126]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -2] [type int] [line: 127]
!   !   Child: 1  Assign: = [type int] [line: 129]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 129]
!   !   !   Child: 1  Const: 1 [type int] [line: 129]
!   !   Sibling: 0  Call: outnl [type void] [line: 130]
!   !   Sibling: 1  While  [type void] [line: 132]
!   !   !   Child: 0  Op: < [type bool] [line: 132]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 132]
!   !   !   !   Child: 1  Const: 101 [type int] [line: 132]
!   !   !   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 133]
!   !   !   !   Child: 1  If  [type void] [line: 134]
!   !   !   !   !   Child: 0  Op: [ [type bool] [line: 134]
!   !   !   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 101, loc: -103] [type bool] [line: 134]
!   !   !   !   !   !   Child: 1  Op: - [type int] [line: 134]
!   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 134]
!   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 134]
!   !   !   !   !   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 135]
!   !   !   !   !   !   Child: 1  If  [type void] [line: 137]
!   !   !   !   !   !   !   Child: 0  Op: == [type bool] [line: 137]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 137]
!   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 137]
!   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 137]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 137]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 137]
!   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 137]
!   !   !   !   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 137]
!   !   !   !   !   !   !   Child: 1  Call: outputb [type void] [line: 138]
!   !   !   !   !   !   !   !   Child: 0  Const: true [type bool] [line: 138]
!   !   !   !   !   !   !   Child: 2  Call: output [type void] [line: 140]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 140]
!   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 140]
!   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 140]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 140]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 140]
!   !   !   !   !   Child: 2  Call: outputb [type void] [line: 143]
!   !   !   !   !   !   Child: 0  Const: false [type bool] [line: 143]
!   !   !   !   Sibling: 0  If  [type void] [line: 145]
!   !   !   !   !   Child: 0  Op: == [type bool] [line: 145]
!   !   !   !   !   !   Child: 0  Op: % [type int] [line: 145]
!   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 145]
!   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 145]
!   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 145]
!   !   !   !   !   Child: 1  Call: outnl [type void] [line: 146]
!   !   !   !   Sibling: 1  Assign: += [type int] [line: 148]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 148]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 148]
!   !   Sibling: 2  Call: outnl [type void] [line: 150]
Sibling: 12  Func Move [ref: Global, size: -3, loc: 0] [type void] [line: 153]
!   Child: 0  Param m [ref: Param, size: 1, loc: -2] [type int] [line: 153]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 154]
!   !   Child: 1  Assign: = [type bool] [line: 155]
!   !   !   Child: 0  Op: [ [type bool] [line: 155]
!   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 101, loc: -103] [type bool] [line: 155]
!   !   !   !   Child: 1  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 155]
!   !   !   Child: 1  Const: true [type bool] [line: 155]
!   !   Sibling: 0  If  [type void] [line: 159]
!   !   !   Child: 0  Op: == [type bool] [line: 159]
!   !   !   !   Child: 0  Op: [ [type int] [line: 159]
!   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 159]
!   !   !   !   !   Child: 1  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 159]
!   !   !   !   Child: 1  Const: 0 [type int] [line: 159]
!   !   !   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 160]
!   !   !   !   Child: 1  If  [type void] [line: 161]
!   !   !   !   !   Child: 0  Op: > [type bool] [line: 161]
!   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 161]
!   !   !   !   !   !   Child: 1  Const: 9 [type int] [line: 161]
!   !   !   !   !   Child: 1  If  [type void] [line: 162]
!   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 162]
!   !   !   !   !   !   !   Child: 0  Op: == [type bool] [line: 162]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 162]
!   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 162]
!   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 162]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 162]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 162]
!   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 162]
!   !   !   !   !   !   !   Child: 1  Op: not [type bool] [line: 162]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type bool] [line: 162]
!   !   !   !   !   !   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 101, loc: -103] [type bool] [line: 162]
!   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 162]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 162]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 162]
!   !   !   !   !   !   Child: 1  Call: Move [type void] [line: 163]
!   !   !   !   !   !   !   Child: 0  Op: - [type int] [line: 163]
!   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 163]
!   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 163]
!   !   !   !   Sibling: 0  If  [type void] [line: 165]
!   !   !   !   !   Child: 0  Op: != [type bool] [line: 165]
!   !   !   !   !   !   Child: 0  Op: % [type int] [line: 165]
!   !   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 165]
!   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 165]
!   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 165]
!   !   !   !   !   Child: 1  If  [type void] [line: 166]
!   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 166]
!   !   !   !   !   !   !   Child: 0  Op: == [type bool] [line: 166]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 166]
!   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 166]
!   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 166]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 166]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 166]
!   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 166]
!   !   !   !   !   !   !   Child: 1  Op: not [type bool] [line: 166]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type bool] [line: 166]
!   !   !   !   !   !   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 101, loc: -103] [type bool] [line: 166]
!   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 166]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 166]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 166]
!   !   !   !   !   !   Child: 1  Call: Move [type void] [line: 167]
!   !   !   !   !   !   !   Child: 0  Op: - [type int] [line: 167]
!   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 167]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 167]
!   !   !   !   Sibling: 1  If  [type void] [line: 169]
!   !   !   !   !   Child: 0  Op: or [type bool] [line: 169]
!   !   !   !   !   !   Child: 0  Op: != [type bool] [line: 169]
!   !   !   !   !   !   !   Child: 0  Op: % [type int] [line: 169]
!   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 169]
!   !   !   !   !   !   !   !   Child: 1  Const: 9 [type int] [line: 169]
!   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 169]
!   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 169]
!   !   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 169]
!   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 169]
!   !   !   !   !   Child: 1  If  [type void] [line: 170]
!   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 170]
!   !   !   !   !   !   !   Child: 0  Op: == [type bool] [line: 170]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 170]
!   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 170]
!   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 170]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 170]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 170]
!   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 170]
!   !   !   !   !   !   !   Child: 1  Op: not [type bool] [line: 170]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type bool] [line: 170]
!   !   !   !   !   !   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 101, loc: -103] [type bool] [line: 170]
!   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 170]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 170]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 170]
!   !   !   !   !   !   Child: 1  Call: Move [type void] [line: 171]
!   !   !   !   !   !   !   Child: 0  Op: + [type int] [line: 171]
!   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 171]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 171]
!   !   !   !   Sibling: 2  If  [type void] [line: 173]
!   !   !   !   !   Child: 0  Op: < [type bool] [line: 173]
!   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 173]
!   !   !   !   !   !   Child: 1  Const: 90 [type int] [line: 173]
!   !   !   !   !   Child: 1  If  [type void] [line: 174]
!   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 174]
!   !   !   !   !   !   !   Child: 0  Op: == [type bool] [line: 174]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 174]
!   !   !   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 174]
!   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 174]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 174]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 174]
!   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 174]
!   !   !   !   !   !   !   Child: 1  Op: not [type bool] [line: 174]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type bool] [line: 174]
!   !   !   !   !   !   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 101, loc: -103] [type bool] [line: 174]
!   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 174]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 174]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 174]
!   !   !   !   !   !   Child: 1  Call: Move [type void] [line: 175]
!   !   !   !   !   !   !   Child: 0  Op: + [type int] [line: 175]
!   !   !   !   !   !   !   !   Child: 0  Id: m [ref: Param, size: 1, loc: -2] [type int] [line: 175]
!   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 175]
Sibling: 13  Func main [ref: Global, size: -5, loc: 0] [type void] [line: 179]
!   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 180]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -2] [type int] [line: 182]
!   !   Sibling: 0  Var: x [ref: Local, size: 1, loc: -3] [type int] [line: 185]
!   !   Sibling: 1  Var: y [ref: Local, size: 1, loc: -4] [type int] [line: 185]
!   !   Child: 1  Assign: = [type int] [line: 188]
!   !   !   Child: 0  Id: seed [ref: Global, size: 1, loc: 0] [type int] [line: 188]
!   !   !   Child: 1  Call: input [type int] [line: 188]
!   !   Sibling: 0  Call: CreateBoard [type void] [line: 191]
!   !   Sibling: 1  While  [type void] [line: 194]
!   !   !   Child: 0  Const: true [type bool] [line: 194]
!   !   !   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 195]
!   !   !   !   Child: 1  Call: PrintBoard [type void] [line: 196]
!   !   !   !   Sibling: 0  Assign: = [type int] [line: 199]
!   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -3] [type int] [line: 199]
!   !   !   !   !   Child: 1  Op: - [type int] [line: 199]
!   !   !   !   !   !   Child: 0  Call: input [type int] [line: 199]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 199]
!   !   !   !   Sibling: 1  Assign: = [type int] [line: 200]
!   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -4] [type int] [line: 200]
!   !   !   !   !   Child: 1  Op: - [type int] [line: 200]
!   !   !   !   !   !   Child: 0  Call: input [type int] [line: 200]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 200]
!   !   !   !   Sibling: 2  If  [type void] [line: 203]
!   !   !   !   !   Child: 0  Op: or [type bool] [line: 203]
!   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 203]
!   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 203]
!   !   !   !   !   !   !   !   Child: 0  Op: > [type bool] [line: 203]
!   !   !   !   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -3] [type int] [line: 203]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 9 [type int] [line: 203]
!   !   !   !   !   !   !   !   Child: 1  Op: > [type bool] [line: 203]
!   !   !   !   !   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -4] [type int] [line: 203]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 9 [type int] [line: 203]
!   !   !   !   !   !   !   Child: 1  Op: < [type bool] [line: 203]
!   !   !   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -3] [type int] [line: 203]
!   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 203]
!   !   !   !   !   !   Child: 1  Op: < [type bool] [line: 203]
!   !   !   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -4] [type int] [line: 203]
!   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 203]
!   !   !   !   !   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 204]
!   !   !   !   !   !   Child: 1  Call: outputc [type void] [line: 205]
!   !   !   !   !   !   !   Child: 0  Const: 'B' [type char] [line: 205]
!   !   !   !   !   !   Sibling: 0  Call: outputc [type void] [line: 206]
!   !   !   !   !   !   !   Child: 0  Const: 'Y' [type char] [line: 206]
!   !   !   !   !   !   Sibling: 1  Call: outputc [type void] [line: 207]
!   !   !   !   !   !   !   Child: 0  Const: 'E' [type char] [line: 207]
!   !   !   !   !   !   Sibling: 2  Call: outnl [type void] [line: 208]
!   !   !   !   !   !   Sibling: 3  Break [type void] [line: 209]
!   !   !   !   Sibling: 3  If  [type void] [line: 213]
!   !   !   !   !   Child: 0  Op: == [type bool] [line: 213]
!   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 213]
!   !   !   !   !   !   !   Child: 0  Id: board is array [ref: Global, size: 101, loc: -2] [type int] [line: 213]
!   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 213]
!   !   !   !   !   !   !   !   Child: 0  Op: * [type int] [line: 213]
!   !   !   !   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -3] [type int] [line: 213]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 213]
!   !   !   !   !   !   !   !   Child: 1  Id: y [ref: Local, size: 1, loc: -4] [type int] [line: 213]
!   !   !   !   !   !   Child: 1  Op: - [type int] [line: 213]
!   !   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 213]
!   !   !   !   !   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 214]
!   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 215]
!   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 215]
!   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 215]
!   !   !   !   !   !   Sibling: 0  While  [type void] [line: 216]
!   !   !   !   !   !   !   Child: 0  Op: < [type bool] [line: 216]
!   !   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 216]
!   !   !   !   !   !   !   !   Child: 1  Const: 100 [type int] [line: 216]
!   !   !   !   !   !   !   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 217]
!   !   !   !   !   !   !   !   Child: 1  Assign: = [type bool] [line: 218]
!   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type bool] [line: 218]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 101, loc: -103] [type bool] [line: 218]
!   !   !   !   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 218]
!   !   !   !   !   !   !   !   !   Child: 1  Const: true [type bool] [line: 218]
!   !   !   !   !   !   !   !   Sibling: 0  Assign: += [type int] [line: 219]
!   !   !   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 219]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 219]
!   !   !   !   !   !   Sibling: 1  Call: PrintBoard [type void] [line: 222]
!   !   !   !   !   !   Sibling: 2  Call: outputc [type void] [line: 223]
!   !   !   !   !   !   !   Child: 0  Const: 'B' [type char] [line: 223]
!   !   !   !   !   !   Sibling: 3  Call: outputc [type void] [line: 224]
!   !   !   !   !   !   !   Child: 0  Const: 'O' [type char] [line: 224]
!   !   !   !   !   !   Sibling: 4  Call: outputc [type void] [line: 225]
!   !   !   !   !   !   !   Child: 0  Const: 'O' [type char] [line: 225]
!   !   !   !   !   !   Sibling: 5  Call: outputc [type void] [line: 226]
!   !   !   !   !   !   !   Child: 0  Const: 'M' [type char] [line: 226]
!   !   !   !   !   !   Sibling: 6  Call: outputc [type void] [line: 227]
!   !   !   !   !   !   !   Child: 0  Const: '!' [type char] [line: 227]
!   !   !   !   !   !   Sibling: 7  Call: outnl [type void] [line: 228]
!   !   !   !   !   !   Sibling: 8  Break [type void] [line: 229]
!   !   !   !   Sibling: 4  Assign: = [type int] [line: 233]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 233]
!   !   !   !   !   Child: 1  Const: 0 [type int] [line: 233]
!   !   !   !   Sibling: 5  While  [type void] [line: 234]
!   !   !   !   !   Child: 0  Op: and [type bool] [line: 234]
!   !   !   !   !   !   Child: 0  Op: == [type bool] [line: 234]
!   !   !   !   !   !   !   Child: 0  Op: [ [type bool] [line: 234]
!   !   !   !   !   !   !   !   Child: 0  Id: guess is array [ref: Global, size: 101, loc: -103] [type bool] [line: 234]
!   !   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 234]
!   !   !   !   !   !   !   Child: 1  Const: true [type bool] [line: 234]
!   !   !   !   !   !   Child: 1  Op: < [type bool] [line: 234]
!   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 234]
!   !   !   !   !   !   !   Child: 1  Const: 100 [type int] [line: 234]
!   !   !   !   !   Child: 1  Assign: += [type int] [line: 235]
!   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 235]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 235]
!   !   !   !   Sibling: 6  If  [type void] [line: 238]
!   !   !   !   !   Child: 0  Op: == [type bool] [line: 238]
!   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 238]
!   !   !   !   !   !   Child: 1  Const: 100 [type int] [line: 238]
!   !   !   !   !   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 239]
!   !   !   !   !   !   Child: 1  Call: PrintBoard [type void] [line: 240]
!   !   !   !   !   !   Sibling: 0  Call: outputc [type void] [line: 241]
!   !   !   !   !   !   !   Child: 0  Const: 'Y' [type char] [line: 241]
!   !   !   !   !   !   Sibling: 1  Call: outputc [type void] [line: 242]
!   !   !   !   !   !   !   Child: 0  Const: 'A' [type char] [line: 242]
!   !   !   !   !   !   Sibling: 2  Call: outputc [type void] [line: 243]
!   !   !   !   !   !   !   Child: 0  Const: 'Y' [type char] [line: 243]
!   !   !   !   !   !   Sibling: 3  Call: outputc [type void] [line: 244]
!   !   !   !   !   !   !   Child: 0  Const: '!' [type char] [line: 244]
!   !   !   !   !   !   Sibling: 4  Call: outnl [type void] [line: 245]
!   !   !   !   !   !   Sibling: 5  Break [type void] [line: 246]
!   !   !   !   Sibling: 7  Call: Move [type void] [line: 250]
!   !   !   !   !   Child: 0  Op: + [type int] [line: 250]
!   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -3] [type int] [line: 250]
!   !   !   !   !   !   Child: 1  Op: * [type int] [line: 250]
!   !   !   !   !   !   !   Child: 0  Id: y [ref: Local, size: 1, loc: -4] [type int] [line: 250]
!   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 250]
Offset for end of global space: -203
Number of warnings: 0
Number of errors: 0
