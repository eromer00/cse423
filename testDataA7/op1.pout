Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func main [ref: Global, size: -2, loc: 0] [type void] [line: 3]
!   Child: 1  Compound [ref: None, size: -2, loc: 0] [type void] [line: 4]
!   !   Child: 1  Call: outputb [type void] [line: 5]
!   !   !   Child: 0  Op: <= [type bool] [line: 5]
!   !   !   !   Child: 0  Const: 111 [type int] [line: 5]
!   !   !   !   Child: 1  Const: 222 [type int] [line: 5]
!   !   Sibling: 0  Call: outputb [type void] [line: 6]
!   !   !   Child: 0  Op: <= [type bool] [line: 6]
!   !   !   !   Child: 0  Const: 222 [type int] [line: 6]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 6]
!   !   Sibling: 1  Call: outputb [type void] [line: 7]
!   !   !   Child: 0  Op: <= [type bool] [line: 7]
!   !   !   !   Child: 0  Const: 111 [type int] [line: 7]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 7]
!   !   Sibling: 2  Call: outnl [type void] [line: 8]
!   !   Sibling: 3  Call: outputb [type void] [line: 10]
!   !   !   Child: 0  Op: < [type bool] [line: 10]
!   !   !   !   Child: 0  Const: 111 [type int] [line: 10]
!   !   !   !   Child: 1  Const: 222 [type int] [line: 10]
!   !   Sibling: 4  Call: outputb [type void] [line: 11]
!   !   !   Child: 0  Op: < [type bool] [line: 11]
!   !   !   !   Child: 0  Const: 222 [type int] [line: 11]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 11]
!   !   Sibling: 5  Call: outputb [type void] [line: 12]
!   !   !   Child: 0  Op: < [type bool] [line: 12]
!   !   !   !   Child: 0  Const: 111 [type int] [line: 12]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 12]
!   !   Sibling: 6  Call: outnl [type void] [line: 13]
!   !   Sibling: 7  Call: outputb [type void] [line: 15]
!   !   !   Child: 0  Op: > [type bool] [line: 15]
!   !   !   !   Child: 0  Const: 111 [type int] [line: 15]
!   !   !   !   Child: 1  Const: 222 [type int] [line: 15]
!   !   Sibling: 8  Call: outputb [type void] [line: 16]
!   !   !   Child: 0  Op: > [type bool] [line: 16]
!   !   !   !   Child: 0  Const: 222 [type int] [line: 16]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 16]
!   !   Sibling: 9  Call: outputb [type void] [line: 17]
!   !   !   Child: 0  Op: > [type bool] [line: 17]
!   !   !   !   Child: 0  Const: 111 [type int] [line: 17]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 17]
!   !   Sibling: 10  Call: outnl [type void] [line: 18]
!   !   Sibling: 11  Call: outputb [type void] [line: 20]
!   !   !   Child: 0  Op: >= [type bool] [line: 20]
!   !   !   !   Child: 0  Const: 111 [type int] [line: 20]
!   !   !   !   Child: 1  Const: 222 [type int] [line: 20]
!   !   Sibling: 12  Call: outputb [type void] [line: 21]
!   !   !   Child: 0  Op: >= [type bool] [line: 21]
!   !   !   !   Child: 0  Const: 222 [type int] [line: 21]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 21]
!   !   Sibling: 13  Call: outputb [type void] [line: 22]
!   !   !   Child: 0  Op: >= [type bool] [line: 22]
!   !   !   !   Child: 0  Const: 111 [type int] [line: 22]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 22]
!   !   Sibling: 14  Call: outnl [type void] [line: 23]
!   !   Sibling: 15  Call: outputb [type void] [line: 25]
!   !   !   Child: 0  Op: == [type bool] [line: 25]
!   !   !   !   Child: 0  Const: 111 [type int] [line: 25]
!   !   !   !   Child: 1  Const: 222 [type int] [line: 25]
!   !   Sibling: 16  Call: outputb [type void] [line: 26]
!   !   !   Child: 0  Op: == [type bool] [line: 26]
!   !   !   !   Child: 0  Const: 222 [type int] [line: 26]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 26]
!   !   Sibling: 17  Call: outputb [type void] [line: 27]
!   !   !   Child: 0  Op: == [type bool] [line: 27]
!   !   !   !   Child: 0  Const: 111 [type int] [line: 27]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 27]
!   !   Sibling: 18  Call: outnl [type void] [line: 28]
!   !   Sibling: 19  Call: outputb [type void] [line: 30]
!   !   !   Child: 0  Op: != [type bool] [line: 30]
!   !   !   !   Child: 0  Const: 111 [type int] [line: 30]
!   !   !   !   Child: 1  Const: 222 [type int] [line: 30]
!   !   Sibling: 20  Call: outputb [type void] [line: 31]
!   !   !   Child: 0  Op: != [type bool] [line: 31]
!   !   !   !   Child: 0  Const: 222 [type int] [line: 31]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 31]
!   !   Sibling: 21  Call: outputb [type void] [line: 32]
!   !   !   Child: 0  Op: != [type bool] [line: 32]
!   !   !   !   Child: 0  Const: 111 [type int] [line: 32]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 32]
!   !   Sibling: 22  Call: outnl [type void] [line: 33]
!   !   Sibling: 23  Call: outputb [type void] [line: 35]
!   !   !   Child: 0  Op: != [type bool] [line: 35]
!   !   !   !   Child: 0  Const: 111 [type int] [line: 35]
!   !   !   !   Child: 1  Const: 222 [type int] [line: 35]
!   !   Sibling: 24  Call: outputb [type void] [line: 36]
!   !   !   Child: 0  Op: != [type bool] [line: 36]
!   !   !   !   Child: 0  Const: 222 [type int] [line: 36]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 36]
!   !   Sibling: 25  Call: outputb [type void] [line: 37]
!   !   !   Child: 0  Op: != [type bool] [line: 37]
!   !   !   !   Child: 0  Const: 111 [type int] [line: 37]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 37]
!   !   Sibling: 26  Call: outnl [type void] [line: 38]
!   !   Sibling: 27  Call: outputb [type void] [line: 40]
!   !   !   Child: 0  Op: and [type bool] [line: 40]
!   !   !   !   Child: 0  Const: false [type bool] [line: 40]
!   !   !   !   Child: 1  Const: false [type bool] [line: 40]
!   !   Sibling: 28  Call: outputb [type void] [line: 41]
!   !   !   Child: 0  Op: and [type bool] [line: 41]
!   !   !   !   Child: 0  Const: false [type bool] [line: 41]
!   !   !   !   Child: 1  Const: true [type bool] [line: 41]
!   !   Sibling: 29  Call: outputb [type void] [line: 42]
!   !   !   Child: 0  Op: and [type bool] [line: 42]
!   !   !   !   Child: 0  Const: true [type bool] [line: 42]
!   !   !   !   Child: 1  Const: false [type bool] [line: 42]
!   !   Sibling: 30  Call: outputb [type void] [line: 43]
!   !   !   Child: 0  Op: and [type bool] [line: 43]
!   !   !   !   Child: 0  Const: true [type bool] [line: 43]
!   !   !   !   Child: 1  Const: true [type bool] [line: 43]
!   !   Sibling: 31  Call: outnl [type void] [line: 44]
!   !   Sibling: 32  Call: outputb [type void] [line: 46]
!   !   !   Child: 0  Op: or [type bool] [line: 46]
!   !   !   !   Child: 0  Const: false [type bool] [line: 46]
!   !   !   !   Child: 1  Const: false [type bool] [line: 46]
!   !   Sibling: 33  Call: outputb [type void] [line: 47]
!   !   !   Child: 0  Op: or [type bool] [line: 47]
!   !   !   !   Child: 0  Const: false [type bool] [line: 47]
!   !   !   !   Child: 1  Const: true [type bool] [line: 47]
!   !   Sibling: 34  Call: outputb [type void] [line: 48]
!   !   !   Child: 0  Op: or [type bool] [line: 48]
!   !   !   !   Child: 0  Const: true [type bool] [line: 48]
!   !   !   !   Child: 1  Const: false [type bool] [line: 48]
!   !   Sibling: 35  Call: outputb [type void] [line: 49]
!   !   !   Child: 0  Op: or [type bool] [line: 49]
!   !   !   !   Child: 0  Const: true [type bool] [line: 49]
!   !   !   !   Child: 1  Const: true [type bool] [line: 49]
!   !   Sibling: 36  Call: outnl [type void] [line: 50]
!   !   Sibling: 37  Call: outputb [type void] [line: 52]
!   !   !   Child: 0  Op: not [type bool] [line: 52]
!   !   !   !   Child: 0  Const: false [type bool] [line: 52]
!   !   Sibling: 38  Call: outputb [type void] [line: 53]
!   !   !   Child: 0  Op: not [type bool] [line: 53]
!   !   !   !   Child: 0  Const: true [type bool] [line: 53]
!   !   Sibling: 39  Call: outnl [type void] [line: 54]
!   !   Sibling: 40  Call: output [type void] [line: 56]
!   !   !   Child: 0  Op: + [type int] [line: 56]
!   !   !   !   Child: 0  Const: 333 [type int] [line: 56]
!   !   !   !   Child: 1  Const: 444 [type int] [line: 56]
!   !   Sibling: 41  Call: output [type void] [line: 57]
!   !   !   Child: 0  Op: - [type int] [line: 57]
!   !   !   !   Child: 0  Const: 333 [type int] [line: 57]
!   !   !   !   Child: 1  Const: 444 [type int] [line: 57]
!   !   Sibling: 42  Call: output [type void] [line: 58]
!   !   !   Child: 0  Op: * [type int] [line: 58]
!   !   !   !   Child: 0  Const: 333 [type int] [line: 58]
!   !   !   !   Child: 1  Const: 444 [type int] [line: 58]
!   !   Sibling: 43  Call: output [type void] [line: 59]
!   !   !   Child: 0  Op: / [type int] [line: 59]
!   !   !   !   Child: 0  Const: 333 [type int] [line: 59]
!   !   !   !   Child: 1  Const: 444 [type int] [line: 59]
!   !   Sibling: 44  Call: output [type void] [line: 60]
!   !   !   Child: 0  Op: % [type int] [line: 60]
!   !   !   !   Child: 0  Const: 3333 [type int] [line: 60]
!   !   !   !   Child: 1  Const: 444 [type int] [line: 60]
!   !   Sibling: 45  Call: output [type void] [line: 61]
!   !   !   Child: 0  Op: - [type int] [line: 61]
!   !   !   !   Child: 0  Const: 444 [type int] [line: 61]
!   !   Sibling: 46  Return [type void] [line: 63]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 0
