WARNING(19): Expecting to return type int but function 'main' has no return statement.
Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: n [ref: Global, size: 1, loc: 0] [type int] [line: 2]
Sibling: 7  Func put [ref: Global, size: -5, loc: 0] [type void] [line: 4]
!   Child: 0  Param p is array [ref: Param, size: 1, loc: -2] [type int] [line: 4]
!   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 5]
!   !   Child: 0  Var: j [ref: Local, size: 1, loc: -3] [type int] [line: 6]
!   !   Sibling: 0  Var: sum [ref: Local, size: 1, loc: -4] [type int] [line: 7]
!   !   Child: 1  Assign: = [type int] [line: 9]
!   !   !   Child: 0  Id: sum [ref: Local, size: 1, loc: -4] [type int] [line: 9]
!   !   !   Child: 1  Op: [ [type int] [line: 9]
!   !   !   !   Child: 0  Id: p is array [ref: Param, size: 1, loc: -2] [type int] [line: 9]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 9]
!   !   Sibling: 0  Assign: = [type int] [line: 10]
!   !   !   Child: 0  Id: j [ref: Local, size: 1, loc: -3] [type int] [line: 10]
!   !   !   Child: 1  Const: 2 [type int] [line: 10]
!   !   Sibling: 1  While  [type void] [line: 11]
!   !   !   Child: 0  Op: <= [type bool] [line: 11]
!   !   !   !   Child: 0  Id: j [ref: Local, size: 1, loc: -3] [type int] [line: 11]
!   !   !   !   Child: 1  Id: n [ref: Global, size: 1, loc: 0] [type int] [line: 11]
!   !   !   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 11]
!   !   !   !   Child: 1  Assign: = [type int] [line: 12]
!   !   !   !   !   Child: 0  Id: sum [ref: Local, size: 1, loc: -4] [type int] [line: 12]
!   !   !   !   !   Child: 1  Op: + [type int] [line: 12]
!   !   !   !   !   !   Child: 0  Op: * [type int] [line: 12]
!   !   !   !   !   !   !   Child: 0  Id: sum [ref: Local, size: 1, loc: -4] [type int] [line: 12]
!   !   !   !   !   !   !   Child: 1  Const: 10 [type int] [line: 12]
!   !   !   !   !   !   Child: 1  Op: [ [type int] [line: 12]
!   !   !   !   !   !   !   Child: 0  Id: p is array [ref: Param, size: 1, loc: -2] [type int] [line: 12]
!   !   !   !   !   !   !   Child: 1  Id: j [ref: Local, size: 1, loc: -3] [type int] [line: 12]
!   !   !   !   Sibling: 0  Assign: = [type int] [line: 13]
!   !   !   !   !   Child: 0  Id: j [ref: Local, size: 1, loc: -3] [type int] [line: 13]
!   !   !   !   !   Child: 1  Op: + [type int] [line: 13]
!   !   !   !   !   !   Child: 0  Id: j [ref: Local, size: 1, loc: -3] [type int] [line: 13]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 13]
!   !   Sibling: 2  Call: output [type void] [line: 15]
!   !   !   Child: 0  Id: sum [ref: Local, size: 1, loc: -4] [type int] [line: 15]
!   !   Sibling: 3  Call: outnl [type void] [line: 16]
Sibling: 8  Func main [ref: Global, size: -28, loc: 0] [type int] [line: 19]
!   Child: 1  Compound [ref: None, size: -25, loc: 0] [type void] [line: 20]
!   !   Child: 0  Var: p is array [ref: Local, size: 21, loc: -3] [type int] [line: 21]
!   !   Sibling: 0  Var: i [ref: Local, size: 1, loc: -23] [type int] [line: 22]
!   !   Sibling: 1  Var: j [ref: Local, size: 1, loc: -24] [type int] [line: 23]
!   !   Child: 1  Assign: = [type int] [line: 25]
!   !   !   Child: 0  Id: n [ref: Global, size: 1, loc: 0] [type int] [line: 25]
!   !   !   Child: 1  Call: input [type int] [line: 25]
!   !   Sibling: 0  Assign: = [type int] [line: 27]
!   !   !   Child: 0  Id: j [ref: Local, size: 1, loc: -24] [type int] [line: 27]
!   !   !   Child: 1  Const: 0 [type int] [line: 27]
!   !   Sibling: 1  While  [type void] [line: 28]
!   !   !   Child: 0  Op: <= [type bool] [line: 28]
!   !   !   !   Child: 0  Id: j [ref: Local, size: 1, loc: -24] [type int] [line: 28]
!   !   !   !   Child: 1  Id: n [ref: Global, size: 1, loc: 0] [type int] [line: 28]
!   !   !   Child: 1  Compound [ref: None, size: -25, loc: 0] [type void] [line: 28]
!   !   !   !   Child: 1  Assign: = [type int] [line: 29]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 29]
!   !   !   !   !   !   Child: 0  Id: p is array [ref: Local, size: 21, loc: -3] [type int] [line: 29]
!   !   !   !   !   !   Child: 1  Id: j [ref: Local, size: 1, loc: -24] [type int] [line: 29]
!   !   !   !   !   Child: 1  Id: j [ref: Local, size: 1, loc: -24] [type int] [line: 29]
!   !   !   !   Sibling: 0  Assign: = [type int] [line: 30]
!   !   !   !   !   Child: 0  Id: j [ref: Local, size: 1, loc: -24] [type int] [line: 30]
!   !   !   !   !   Child: 1  Op: + [type int] [line: 30]
!   !   !   !   !   !   Child: 0  Id: j [ref: Local, size: 1, loc: -24] [type int] [line: 30]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 30]
!   !   Sibling: 2  Assign: = [type int] [line: 33]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -23] [type int] [line: 33]
!   !   !   Child: 1  Const: 1 [type int] [line: 33]
!   !   Sibling: 3  While  [type void] [line: 34]
!   !   !   Child: 0  Op: > [type bool] [line: 34]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -23] [type int] [line: 34]
!   !   !   !   Child: 1  Const: 0 [type int] [line: 34]
!   !   !   Child: 1  Compound [ref: None, size: -28, loc: 0] [type void] [line: 34]
!   !   !   !   Child: 0  Var: r [ref: Local, size: 1, loc: -25] [type int] [line: 35]
!   !   !   !   Sibling: 0  Var: s [ref: Local, size: 1, loc: -26] [type int] [line: 36]
!   !   !   !   Sibling: 1  Var: tmp [ref: Local, size: 1, loc: -27] [type int] [line: 37]
!   !   !   !   Child: 1  Call: put [type void] [line: 39]
!   !   !   !   !   Child: 0  Id: p is array [ref: Local, size: 21, loc: -3] [type int] [line: 39]
!   !   !   !   Sibling: 0  Assign: = [type int] [line: 42]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -23] [type int] [line: 42]
!   !   !   !   !   Child: 1  Op: - [type int] [line: 42]
!   !   !   !   !   !   Child: 0  Id: n [ref: Global, size: 1, loc: 0] [type int] [line: 42]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 42]
!   !   !   !   Sibling: 1  While  [type void] [line: 43]
!   !   !   !   !   Child: 0  Op: > [type bool] [line: 43]
!   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 43]
!   !   !   !   !   !   !   Child: 0  Id: p is array [ref: Local, size: 21, loc: -3] [type int] [line: 43]
!   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -23] [type int] [line: 43]
!   !   !   !   !   !   Child: 1  Op: [ [type int] [line: 43]
!   !   !   !   !   !   !   Child: 0  Id: p is array [ref: Local, size: 21, loc: -3] [type int] [line: 43]
!   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 43]
!   !   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -23] [type int] [line: 43]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 43]
!   !   !   !   !   Child: 1  Assign: = [type int] [line: 43]
!   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -23] [type int] [line: 43]
!   !   !   !   !   !   Child: 1  Op: - [type int] [line: 43]
!   !   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -23] [type int] [line: 43]
!   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 43]
!   !   !   !   Sibling: 2  Assign: = [type int] [line: 45]
!   !   !   !   !   Child: 0  Id: j [ref: Local, size: 1, loc: -24] [type int] [line: 45]
!   !   !   !   !   Child: 1  Id: n [ref: Global, size: 1, loc: 0] [type int] [line: 45]
!   !   !   !   Sibling: 3  While  [type void] [line: 46]
!   !   !   !   !   Child: 0  Op: > [type bool] [line: 46]
!   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 46]
!   !   !   !   !   !   !   Child: 0  Id: p is array [ref: Local, size: 21, loc: -3] [type int] [line: 46]
!   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -23] [type int] [line: 46]
!   !   !   !   !   !   Child: 1  Op: [ [type int] [line: 46]
!   !   !   !   !   !   !   Child: 0  Id: p is array [ref: Local, size: 21, loc: -3] [type int] [line: 46]
!   !   !   !   !   !   !   Child: 1  Id: j [ref: Local, size: 1, loc: -24] [type int] [line: 46]
!   !   !   !   !   Child: 1  Assign: = [type int] [line: 46]
!   !   !   !   !   !   Child: 0  Id: j [ref: Local, size: 1, loc: -24] [type int] [line: 46]
!   !   !   !   !   !   Child: 1  Op: - [type int] [line: 46]
!   !   !   !   !   !   !   Child: 0  Id: j [ref: Local, size: 1, loc: -24] [type int] [line: 46]
!   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 46]
!   !   !   !   Sibling: 4  Assign: = [type int] [line: 48]
!   !   !   !   !   Child: 0  Id: tmp [ref: Local, size: 1, loc: -27] [type int] [line: 48]
!   !   !   !   !   Child: 1  Op: [ [type int] [line: 48]
!   !   !   !   !   !   Child: 0  Id: p is array [ref: Local, size: 21, loc: -3] [type int] [line: 48]
!   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -23] [type int] [line: 48]
!   !   !   !   Sibling: 5  Assign: = [type int] [line: 48]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 48]
!   !   !   !   !   !   Child: 0  Id: p is array [ref: Local, size: 21, loc: -3] [type int] [line: 48]
!   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -23] [type int] [line: 48]
!   !   !   !   !   Child: 1  Op: [ [type int] [line: 48]
!   !   !   !   !   !   Child: 0  Id: p is array [ref: Local, size: 21, loc: -3] [type int] [line: 48]
!   !   !   !   !   !   Child: 1  Id: j [ref: Local, size: 1, loc: -24] [type int] [line: 48]
!   !   !   !   Sibling: 6  Assign: = [type int] [line: 48]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 48]
!   !   !   !   !   !   Child: 0  Id: p is array [ref: Local, size: 21, loc: -3] [type int] [line: 48]
!   !   !   !   !   !   Child: 1  Id: j [ref: Local, size: 1, loc: -24] [type int] [line: 48]
!   !   !   !   !   Child: 1  Id: tmp [ref: Local, size: 1, loc: -27] [type int] [line: 48]
!   !   !   !   Sibling: 7  Assign: = [type int] [line: 50]
!   !   !   !   !   Child: 0  Id: r [ref: Local, size: 1, loc: -25] [type int] [line: 50]
!   !   !   !   !   Child: 1  Id: n [ref: Global, size: 1, loc: 0] [type int] [line: 50]
!   !   !   !   Sibling: 8  Assign: = [type int] [line: 51]
!   !   !   !   !   Child: 0  Id: s [ref: Local, size: 1, loc: -26] [type int] [line: 51]
!   !   !   !   !   Child: 1  Op: + [type int] [line: 51]
!   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -23] [type int] [line: 51]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 51]
!   !   !   !   Sibling: 9  While  [type void] [line: 52]
!   !   !   !   !   Child: 0  Op: > [type bool] [line: 52]
!   !   !   !   !   !   Child: 0  Id: r [ref: Local, size: 1, loc: -25] [type int] [line: 52]
!   !   !   !   !   !   Child: 1  Id: s [ref: Local, size: 1, loc: -26] [type int] [line: 52]
!   !   !   !   !   Child: 1  Compound [ref: None, size: -28, loc: 0] [type void] [line: 52]
!   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 53]
!   !   !   !   !   !   !   Child: 0  Id: tmp [ref: Local, size: 1, loc: -27] [type int] [line: 53]
!   !   !   !   !   !   !   Child: 1  Op: [ [type int] [line: 53]
!   !   !   !   !   !   !   !   Child: 0  Id: p is array [ref: Local, size: 21, loc: -3] [type int] [line: 53]
!   !   !   !   !   !   !   !   Child: 1  Id: r [ref: Local, size: 1, loc: -25] [type int] [line: 53]
!   !   !   !   !   !   Sibling: 0  Assign: = [type int] [line: 53]
!   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 53]
!   !   !   !   !   !   !   !   Child: 0  Id: p is array [ref: Local, size: 21, loc: -3] [type int] [line: 53]
!   !   !   !   !   !   !   !   Child: 1  Id: r [ref: Local, size: 1, loc: -25] [type int] [line: 53]
!   !   !   !   !   !   !   Child: 1  Op: [ [type int] [line: 53]
!   !   !   !   !   !   !   !   Child: 0  Id: p is array [ref: Local, size: 21, loc: -3] [type int] [line: 53]
!   !   !   !   !   !   !   !   Child: 1  Id: s [ref: Local, size: 1, loc: -26] [type int] [line: 53]
!   !   !   !   !   !   Sibling: 1  Assign: = [type int] [line: 53]
!   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 53]
!   !   !   !   !   !   !   !   Child: 0  Id: p is array [ref: Local, size: 21, loc: -3] [type int] [line: 53]
!   !   !   !   !   !   !   !   Child: 1  Id: s [ref: Local, size: 1, loc: -26] [type int] [line: 53]
!   !   !   !   !   !   !   Child: 1  Id: tmp [ref: Local, size: 1, loc: -27] [type int] [line: 53]
!   !   !   !   !   !   Sibling: 2  Assign: = [type int] [line: 54]
!   !   !   !   !   !   !   Child: 0  Id: r [ref: Local, size: 1, loc: -25] [type int] [line: 54]
!   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 54]
!   !   !   !   !   !   !   !   Child: 0  Id: r [ref: Local, size: 1, loc: -25] [type int] [line: 54]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 54]
!   !   !   !   !   !   Sibling: 3  Assign: = [type int] [line: 55]
!   !   !   !   !   !   !   Child: 0  Id: s [ref: Local, size: 1, loc: -26] [type int] [line: 55]
!   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 55]
!   !   !   !   !   !   !   !   Child: 0  Id: s [ref: Local, size: 1, loc: -26] [type int] [line: 55]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 55]
Offset for end of global space: -1
Number of warnings: 1
Number of errors: 0
