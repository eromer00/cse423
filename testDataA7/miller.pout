WARNING(6): Expecting to return type int but function 'showIntArray' has no return statement.
Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: gl is array [ref: Global, size: 11, loc: -1] [type int] [line: 3]
Sibling: 7  Var: glx [ref: Global, size: 1, loc: -11] [type int] [line: 4]
Sibling: 8  Func showIntArray [ref: Global, size: -5, loc: 0] [type int] [line: 6]
!   Child: 0  Param x is array [ref: Param, size: 1, loc: -2] [type int] [line: 6]
!   Sibling: 0  Param size [ref: Param, size: 1, loc: -3] [type int] [line: 6]
!   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 7]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -4] [type int] [line: 8]
!   !   Child: 1  Assign: = [type int] [line: 9]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -4] [type int] [line: 9]
!   !   !   Child: 1  Const: 0 [type int] [line: 9]
!   !   Sibling: 0  While  [type void] [line: 10]
!   !   !   Child: 0  Op: < [type bool] [line: 10]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -4] [type int] [line: 10]
!   !   !   !   Child: 1  Id: size [ref: Param, size: 1, loc: -3] [type int] [line: 10]
!   !   !   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 10]
!   !   !   !   Child: 1  Call: output [type void] [line: 11]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 11]
!   !   !   !   !   !   Child: 0  Id: x is array [ref: Param, size: 1, loc: -2] [type int] [line: 11]
!   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -4] [type int] [line: 11]
!   !   !   !   Sibling: 0  Assign: = [type int] [line: 12]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -4] [type int] [line: 12]
!   !   !   !   !   Child: 1  Op: + [type int] [line: 12]
!   !   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -4] [type int] [line: 12]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 12]
!   !   Sibling: 1  Call: outnl [type void] [line: 14]
Sibling: 9  Func dog [ref: Global, size: -4, loc: 0] [type void] [line: 17]
!   Child: 0  Param a [ref: Param, size: 1, loc: -2] [type int] [line: 17]
!   Sibling: 0  Param b is array [ref: Param, size: 1, loc: -3] [type int] [line: 17]
!   Child: 1  Compound [ref: None, size: -4, loc: 0] [type void] [line: 18]
!   !   Child: 1  Assign: = [type int] [line: 19]
!   !   !   Child: 0  Id: a [ref: Param, size: 1, loc: -2] [type int] [line: 19]
!   !   !   Child: 1  Id: a [ref: Param, size: 1, loc: -2] [type int] [line: 19]
!   !   Sibling: 0  Assign: = [type int] [line: 20]
!   !   !   Child: 0  Op: [ [type int] [line: 20]
!   !   !   !   Child: 0  Id: b is array [ref: Param, size: 1, loc: -3] [type int] [line: 20]
!   !   !   !   Child: 1  Const: 7 [type int] [line: 20]
!   !   !   Child: 1  Op: [ [type int] [line: 20]
!   !   !   !   Child: 0  Id: b is array [ref: Param, size: 1, loc: -3] [type int] [line: 20]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 20]
!   !   Sibling: 1  Call: output [type void] [line: 21]
!   !   !   Child: 0  Id: a [ref: Param, size: 1, loc: -2] [type int] [line: 21]
!   !   Sibling: 2  Call: outnl [type void] [line: 22]
!   !   Sibling: 3  Call: output [type void] [line: 23]
!   !   !   Child: 0  Op: [ [type int] [line: 23]
!   !   !   !   Child: 0  Id: b is array [ref: Param, size: 1, loc: -3] [type int] [line: 23]
!   !   !   !   Child: 1  Const: 7 [type int] [line: 23]
!   !   Sibling: 4  Call: outnl [type void] [line: 24]
Sibling: 10  Func getnxtindex [ref: Global, size: -3, loc: 0] [type int] [line: 27]
!   Child: 0  Param x [ref: Param, size: 1, loc: -2] [type int] [line: 27]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 28]
!   !   Child: 1  Return [type void] [line: 29]
!   !   !   Child: 0  Op: + [type int] [line: 29]
!   !   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 29]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 29]
Sibling: 11  Func main [ref: Global, size: -60, loc: 0] [type void] [line: 32]
!   Child: 1  Compound [ref: None, size: -58, loc: 0] [type void] [line: 33]
!   !   Child: 0  Var: x [ref: Local, size: 1, loc: -2] [type int] [line: 34]
!   !   Sibling: 0  Var: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 35]
!   !   Sibling: 1  Var: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 36]
!   !   Sibling: 2  Var: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 37]
!   !   Sibling: 3  Var: z is array [ref: Local, size: 11, loc: -37] [type int] [line: 38]
!   !   Sibling: 4  Var: w is array [ref: Local, size: 11, loc: -48] [type int] [line: 39]
!   !   Child: 1  Assign: = [type int] [line: 41]
!   !   !   Child: 0  Op: [ [type int] [line: 41]
!   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 41]
!   !   !   !   Child: 1  Const: 0 [type int] [line: 41]
!   !   !   Child: 1  Const: 3 [type int] [line: 41]
!   !   Sibling: 0  Assign: = [type int] [line: 42]
!   !   !   Child: 0  Op: [ [type int] [line: 42]
!   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 42]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 42]
!   !   !   Child: 1  Const: 5 [type int] [line: 42]
!   !   Sibling: 1  Assign: = [type int] [line: 43]
!   !   !   Child: 0  Op: [ [type int] [line: 43]
!   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 43]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 43]
!   !   !   Child: 1  Const: 9 [type int] [line: 43]
!   !   Sibling: 2  Assign: = [type int] [line: 44]
!   !   !   Child: 0  Op: [ [type int] [line: 44]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 44]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 44]
!   !   !   Child: 1  Const: 100 [type int] [line: 44]
!   !   Sibling: 3  Assign: = [type int] [line: 45]
!   !   !   Child: 0  Op: [ [type int] [line: 45]
!   !   !   !   Child: 0  Id: w is array [ref: Local, size: 11, loc: -48] [type int] [line: 45]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 45]
!   !   !   Child: 1  Const: 50 [type int] [line: 45]
!   !   Sibling: 4  Call: dog [type void] [line: 46]
!   !   !   Child: 0  Op: [ [type int] [line: 46]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 46]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 46]
!   !   !   Sibling: 0  Id: w is array [ref: Local, size: 11, loc: -48] [type int] [line: 46]
!   !   Sibling: 5  Assign: = [type int] [line: 48]
!   !   !   Child: 0  Op: [ [type int] [line: 48]
!   !   !   !   Child: 0  Id: w is array [ref: Local, size: 11, loc: -48] [type int] [line: 48]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 48]
!   !   !   Child: 1  Const: 12 [type int] [line: 48]
!   !   Sibling: 6  Call: dog [type void] [line: 49]
!   !   !   Child: 0  Op: [ [type int] [line: 49]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 49]
!   !   !   !   Child: 1  Op: [ [type int] [line: 49]
!   !   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 49]
!   !   !   !   !   Child: 1  Const: 3 [type int] [line: 49]
!   !   !   Sibling: 0  Id: w is array [ref: Local, size: 11, loc: -48] [type int] [line: 49]
!   !   Sibling: 7  Assign: = [type int] [line: 51]
!   !   !   Child: 0  Op: [ [type int] [line: 51]
!   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 51]
!   !   !   !   Child: 1  Const: 8 [type int] [line: 51]
!   !   !   Child: 1  Const: 4 [type int] [line: 51]
!   !   Sibling: 8  Assign: = [type int] [line: 52]
!   !   !   Child: 0  Op: [ [type int] [line: 52]
!   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 52]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 52]
!   !   !   Child: 1  Const: 25 [type int] [line: 52]
!   !   Sibling: 9  Assign: = [type int] [line: 53]
!   !   !   Child: 0  Op: [ [type int] [line: 53]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 53]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 53]
!   !   !   Child: 1  Const: 66 [type int] [line: 53]
!   !   Sibling: 10  Call: dog [type void] [line: 54]
!   !   !   Child: 0  Op: [ [type int] [line: 54]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 54]
!   !   !   !   Child: 1  Op: [ [type int] [line: 54]
!   !   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 54]
!   !   !   !   !   Child: 1  Op: [ [type int] [line: 54]
!   !   !   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 54]
!   !   !   !   !   !   Child: 1  Const: 8 [type int] [line: 54]
!   !   !   Sibling: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 54]
!   !   Sibling: 11  Assign: = [type int] [line: 56]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 56]
!   !   !   Child: 1  Const: 777 [type int] [line: 56]
!   !   Sibling: 12  Assign: = [type int] [line: 57]
!   !   !   Child: 0  Op: [ [type int] [line: 57]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 57]
!   !   !   !   Child: 1  Const: 7 [type int] [line: 57]
!   !   !   Child: 1  Const: 123 [type int] [line: 57]
!   !   Sibling: 13  Assign: = [type int] [line: 58]
!   !   !   Child: 0  Op: [ [type int] [line: 58]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 58]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 58]
!   !   !   Child: 1  Op: [ [type int] [line: 58]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 58]
!   !   !   !   Child: 1  Const: 7 [type int] [line: 58]
!   !   Sibling: 14  Call: dog [type void] [line: 59]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 59]
!   !   !   Sibling: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 59]
!   !   Sibling: 15  Assign: = [type int] [line: 61]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 61]
!   !   !   Child: 1  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 61]
!   !   Sibling: 16  Assign: = [type int] [line: 63]
!   !   !   Child: 0  Op: [ [type int] [line: 63]
!   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 63]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 63]
!   !   !   Child: 1  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 63]
!   !   Sibling: 17  Assign: = [type int] [line: 64]
!   !   !   Child: 0  Id: glx [ref: Global, size: 1, loc: -11] [type int] [line: 64]
!   !   !   Child: 1  Const: 888 [type int] [line: 64]
!   !   Sibling: 18  Assign: = [type int] [line: 65]
!   !   !   Child: 0  Op: [ [type int] [line: 65]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 65]
!   !   !   !   Child: 1  Const: 7 [type int] [line: 65]
!   !   !   Child: 1  Id: glx [ref: Global, size: 1, loc: -11] [type int] [line: 65]
!   !   Sibling: 19  Assign: = [type int] [line: 66]
!   !   !   Child: 0  Op: [ [type int] [line: 66]
!   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 66]
!   !   !   !   Child: 1  Const: 6 [type int] [line: 66]
!   !   !   Child: 1  Const: 2 [type int] [line: 66]
!   !   Sibling: 20  Assign: = [type int] [line: 67]
!   !   !   Child: 0  Op: [ [type int] [line: 67]
!   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 67]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 67]
!   !   !   Child: 1  Const: 4 [type int] [line: 67]
!   !   Sibling: 21  Assign: = [type int] [line: 68]
!   !   !   Child: 0  Op: [ [type int] [line: 68]
!   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 68]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 68]
!   !   !   Child: 1  Const: 7 [type int] [line: 68]
!   !   Sibling: 22  Assign: = [type int] [line: 69]
!   !   !   Child: 0  Op: [ [type int] [line: 69]
!   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 69]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 69]
!   !   !   Child: 1  Op: [ [type int] [line: 69]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 69]
!   !   !   !   Child: 1  Op: [ [type int] [line: 69]
!   !   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 69]
!   !   !   !   !   Child: 1  Op: [ [type int] [line: 69]
!   !   !   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 69]
!   !   !   !   !   !   Child: 1  Op: [ [type int] [line: 69]
!   !   !   !   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 69]
!   !   !   !   !   !   !   Child: 1  Const: 6 [type int] [line: 69]
!   !   Sibling: 23  Call: dog [type void] [line: 70]
!   !   !   Child: 0  Op: [ [type int] [line: 70]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 70]
!   !   !   !   Child: 1  Op: [ [type int] [line: 70]
!   !   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 70]
!   !   !   !   !   Child: 1  Op: [ [type int] [line: 70]
!   !   !   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 70]
!   !   !   !   !   !   Child: 1  Const: 8 [type int] [line: 70]
!   !   !   Sibling: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 70]
!   !   Sibling: 24  Assign: = [type int] [line: 72]
!   !   !   Child: 0  Op: [ [type int] [line: 72]
!   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 72]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 72]
!   !   !   Child: 1  Op: [ [type int] [line: 72]
!   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 72]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 72]
!   !   Sibling: 25  Assign: = [type int] [line: 73]
!   !   !   Child: 0  Op: [ [type int] [line: 73]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 73]
!   !   !   !   Child: 1  Const: 7 [type int] [line: 73]
!   !   !   Child: 1  Op: [ [type int] [line: 73]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 73]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 73]
!   !   Sibling: 26  Assign: = [type int] [line: 74]
!   !   !   Child: 0  Op: [ [type int] [line: 74]
!   !   !   !   Child: 0  Id: gl is array [ref: Global, size: 11, loc: -1] [type int] [line: 74]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 74]
!   !   !   Child: 1  Const: 3 [type int] [line: 74]
!   !   Sibling: 27  Assign: = [type int] [line: 75]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 75]
!   !   !   Child: 1  Op: [ [type int] [line: 75]
!   !   !   !   Child: 0  Id: gl is array [ref: Global, size: 11, loc: -1] [type int] [line: 75]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 75]
!   !   Sibling: 28  Assign: = [type int] [line: 76]
!   !   !   Child: 0  Op: [ [type int] [line: 76]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 76]
!   !   !   !   Child: 1  Const: 7 [type int] [line: 76]
!   !   !   Child: 1  Op: [ [type int] [line: 76]
!   !   !   !   Child: 0  Id: gl is array [ref: Global, size: 11, loc: -1] [type int] [line: 76]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 76]
!   !   Sibling: 29  Assign: = [type int] [line: 77]
!   !   !   Child: 0  Op: [ [type int] [line: 77]
!   !   !   !   Child: 0  Id: gl is array [ref: Global, size: 11, loc: -1] [type int] [line: 77]
!   !   !   !   Child: 1  Const: 7 [type int] [line: 77]
!   !   !   Child: 1  Op: [ [type int] [line: 77]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 77]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 77]
!   !   Sibling: 30  Assign: = [type int] [line: 78]
!   !   !   Child: 0  Op: [ [type int] [line: 78]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 78]
!   !   !   !   Child: 1  Const: 0 [type int] [line: 78]
!   !   !   Child: 1  Const: 5 [type int] [line: 78]
!   !   Sibling: 31  Assign: = [type int] [line: 79]
!   !   !   Child: 0  Op: [ [type int] [line: 79]
!   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 79]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 79]
!   !   !   Child: 1  Const: 3 [type int] [line: 79]
!   !   Sibling: 32  Assign: = [type int] [line: 80]
!   !   !   Child: 0  Op: [ [type int] [line: 80]
!   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 80]
!   !   !   !   Child: 1  Const: 8 [type int] [line: 80]
!   !   !   Child: 1  Op: [ [type int] [line: 80]
!   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 80]
!   !   !   !   Child: 1  Op: [ [type int] [line: 80]
!   !   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 80]
!   !   !   !   !   Child: 1  Const: 0 [type int] [line: 80]
!   !   Sibling: 33  Call: output [type void] [line: 81]
!   !   !   Child: 0  Op: [ [type int] [line: 81]
!   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 81]
!   !   !   !   Child: 1  Const: 8 [type int] [line: 81]
!   !   Sibling: 34  Call: outnl [type void] [line: 81]
!   !   Sibling: 35  Assign: = [type int] [line: 82]
!   !   !   Child: 0  Op: [ [type int] [line: 82]
!   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 82]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 82]
!   !   !   Child: 1  Const: 4 [type int] [line: 82]
!   !   Sibling: 36  Assign: = [type int] [line: 83]
!   !   !   Child: 0  Op: [ [type int] [line: 83]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 83]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 83]
!   !   !   Child: 1  Const: 987 [type int] [line: 83]
!   !   Sibling: 37  Assign: -= [type int] [line: 84]
!   !   !   Child: 0  Op: [ [type int] [line: 84]
!   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 84]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 84]
!   !   !   Child: 1  Const: 3 [type int] [line: 84]
!   !   Sibling: 38  Call: dog [type void] [line: 86]
!   !   !   Child: 0  Op: [ [type int] [line: 86]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 86]
!   !   !   !   Child: 1  Op: [ [type int] [line: 86]
!   !   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 86]
!   !   !   !   !   Child: 1  Op: [ [type int] [line: 86]
!   !   !   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 86]
!   !   !   !   !   !   Child: 1  Const: 8 [type int] [line: 86]
!   !   !   Sibling: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 86]
!   !   Sibling: 39  Assign: += [type int] [line: 88]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 88]
!   !   !   Child: 1  Op: [ [type int] [line: 88]
!   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 88]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 88]
!   !   Sibling: 40  Assign: -= [type int] [line: 89]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -2] [type int] [line: 89]
!   !   !   Child: 1  Op: [ [type int] [line: 89]
!   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 89]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 89]
!   !   Sibling: 41  Assign: = [type int] [line: 90]
!   !   !   Child: 0  Op: [ [type int] [line: 90]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 90]
!   !   !   !   Child: 1  Const: 8 [type int] [line: 90]
!   !   !   Child: 1  Const: 8 [type int] [line: 90]
!   !   Sibling: 42  Assign: = [type int] [line: 91]
!   !   !   Child: 0  Op: [ [type int] [line: 91]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 91]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 91]
!   !   !   Child: 1  Op: + [type int] [line: 91]
!   !   !   !   Child: 0  Op: [ [type int] [line: 91]
!   !   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 91]
!   !   !   !   !   Child: 1  Call: getnxtindex [type int] [line: 91]
!   !   !   !   !   !   Child: 0  Const: 7 [type int] [line: 91]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 91]
!   !   Sibling: 43  Call: dog [type void] [line: 93]
!   !   !   Child: 0  Op: [ [type int] [line: 93]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 93]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 93]
!   !   !   Sibling: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 93]
!   !   Sibling: 44  Assign: = [type int] [line: 95]
!   !   !   Child: 0  Op: [ [type int] [line: 95]
!   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 95]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 95]
!   !   !   Child: 1  Const: 0 [type int] [line: 95]
!   !   Sibling: 45  Assign: = [type int] [line: 96]
!   !   !   Child: 0  Op: [ [type int] [line: 96]
!   !   !   !   Child: 0  Id: w is array [ref: Local, size: 11, loc: -48] [type int] [line: 96]
!   !   !   !   Child: 1  Const: 0 [type int] [line: 96]
!   !   !   Child: 1  Const: 3 [type int] [line: 96]
!   !   Sibling: 46  Assign: = [type int] [line: 97]
!   !   !   Child: 0  Op: [ [type int] [line: 97]
!   !   !   !   Child: 0  Id: z is array [ref: Local, size: 11, loc: -37] [type int] [line: 97]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 97]
!   !   !   Child: 1  Const: 9 [type int] [line: 97]
!   !   Sibling: 47  Assign: = [type int] [line: 98]
!   !   !   Child: 0  Op: [ [type int] [line: 98]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 98]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 98]
!   !   !   Child: 1  Const: 1 [type int] [line: 98]
!   !   Sibling: 48  Assign: = [type int] [line: 100]
!   !   !   Child: 0  Op: [ [type int] [line: 100]
!   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 100]
!   !   !   !   Child: 1  Op: [ [type int] [line: 100]
!   !   !   !   !   Child: 0  Id: y is array [ref: Local, size: 11, loc: -26] [type int] [line: 100]
!   !   !   !   !   Child: 1  Op: [ [type int] [line: 100]
!   !   !   !   !   !   Child: 0  Id: z is array [ref: Local, size: 11, loc: -37] [type int] [line: 100]
!   !   !   !   !   !   Child: 1  Op: [ [type int] [line: 100]
!   !   !   !   !   !   !   Child: 0  Id: w is array [ref: Local, size: 11, loc: -48] [type int] [line: 100]
!   !   !   !   !   !   !   Child: 1  Op: [ [type int] [line: 100]
!   !   !   !   !   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 100]
!   !   !   !   !   !   !   !   Child: 1  Const: 5 [type int] [line: 100]
!   !   !   Child: 1  Const: 77 [type int] [line: 100]
!   !   Sibling: 49  Assign: = [type int] [line: 101]
!   !   !   Child: 0  Op: [ [type int] [line: 101]
!   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 101]
!   !   !   !   Child: 1  Const: 9 [type int] [line: 101]
!   !   !   Child: 1  Op: [ [type int] [line: 101]
!   !   !   !   Child: 0  Id: d is array [ref: Local, size: 11, loc: -15] [type int] [line: 101]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 101]
!   !   Sibling: 50  Call: dog [type void] [line: 103]
!   !   !   Child: 0  Const: 66 [type int] [line: 103]
!   !   !   Sibling: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 103]
!   !   Sibling: 51  Compound [ref: None, size: -60, loc: 0] [type void] [line: 105]
!   !   !   Child: 0  Var: p [ref: Local, size: 1, loc: -58] [type int] [line: 106]
!   !   !   Sibling: 0  Var: q [ref: Local, size: 1, loc: -59] [type int] [line: 106]
!   !   !   Child: 1  Assign: = [type int] [line: 108]
!   !   !   !   Child: 0  Id: p [ref: Local, size: 1, loc: -58] [type int] [line: 108]
!   !   !   !   Child: 1  Const: 0 [type int] [line: 108]
!   !   !   Sibling: 0  While  [type void] [line: 109]
!   !   !   !   Child: 0  Op: < [type bool] [line: 109]
!   !   !   !   !   Child: 0  Id: p [ref: Local, size: 1, loc: -58] [type int] [line: 109]
!   !   !   !   !   Child: 1  Const: 10 [type int] [line: 109]
!   !   !   !   Child: 1  Compound [ref: None, size: -60, loc: 0] [type void] [line: 109]
!   !   !   !   !   Child: 1  Assign: = [type int] [line: 110]
!   !   !   !   !   !   Child: 0  Id: q [ref: Local, size: 1, loc: -59] [type int] [line: 110]
!   !   !   !   !   !   Child: 1  Id: p [ref: Local, size: 1, loc: -58] [type int] [line: 110]
!   !   !   !   !   Sibling: 0  Assign: = [type int] [line: 111]
!   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 111]
!   !   !   !   !   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 111]
!   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 111]
!   !   !   !   !   !   !   !   Child: 0  Const: 9 [type int] [line: 111]
!   !   !   !   !   !   !   !   Child: 1  Id: q [ref: Local, size: 1, loc: -59] [type int] [line: 111]
!   !   !   !   !   !   Child: 1  Assign: += [type int] [line: 111]
!   !   !   !   !   !   !   Child: 0  Id: p [ref: Local, size: 1, loc: -58] [type int] [line: 111]
!   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 111]
!   !   Sibling: 52  Call: showIntArray [type int] [line: 115]
!   !   !   Child: 0  Id: c is array [ref: Local, size: 11, loc: -4] [type int] [line: 115]
!   !   !   Sibling: 0  Const: 10 [type int] [line: 115]
Offset for end of global space: -12
Number of warnings: 1
Number of errors: 0
