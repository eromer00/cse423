Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: x is array [ref: Global, size: 11, loc: -1] [type int] [line: 5]
Sibling: 7  Func minloc [ref: Global, size: -8, loc: 0] [type int] [line: 7]
!   Child: 0  Param a is array [ref: Param, size: 1, loc: -2] [type int] [line: 7]
!   Sibling: 0  Param low [ref: Param, size: 1, loc: -3] [type int] [line: 7]
!   Sibling: 1  Param high [ref: Param, size: 1, loc: -4] [type int] [line: 7]
!   Child: 1  Compound [ref: None, size: -8, loc: 0] [type void] [line: 8]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -5] [type int] [line: 9]
!   !   Sibling: 0  Var: x [ref: Local, size: 1, loc: -6] [type int] [line: 9]
!   !   Sibling: 1  Var: k [ref: Local, size: 1, loc: -7] [type int] [line: 9]
!   !   Child: 1  Assign: = [type int] [line: 11]
!   !   !   Child: 0  Id: k [ref: Local, size: 1, loc: -7] [type int] [line: 11]
!   !   !   Child: 1  Id: low [ref: Param, size: 1, loc: -3] [type int] [line: 11]
!   !   Sibling: 0  Assign: = [type int] [line: 12]
!   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -6] [type int] [line: 12]
!   !   !   Child: 1  Op: [ [type int] [line: 12]
!   !   !   !   Child: 0  Id: a is array [ref: Param, size: 1, loc: -2] [type int] [line: 12]
!   !   !   !   Child: 1  Id: low [ref: Param, size: 1, loc: -3] [type int] [line: 12]
!   !   Sibling: 1  Assign: = [type int] [line: 13]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -5] [type int] [line: 13]
!   !   !   Child: 1  Op: + [type int] [line: 13]
!   !   !   !   Child: 0  Id: low [ref: Param, size: 1, loc: -3] [type int] [line: 13]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 13]
!   !   Sibling: 2  While  [type void] [line: 15]
!   !   !   Child: 0  Op: < [type bool] [line: 15]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -5] [type int] [line: 15]
!   !   !   !   Child: 1  Id: high [ref: Param, size: 1, loc: -4] [type int] [line: 15]
!   !   !   Child: 1  Compound [ref: None, size: -8, loc: 0] [type void] [line: 15]
!   !   !   !   Child: 1  If  [type void] [line: 16]
!   !   !   !   !   Child: 0  Op: < [type bool] [line: 16]
!   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 16]
!   !   !   !   !   !   !   Child: 0  Id: a is array [ref: Param, size: 1, loc: -2] [type int] [line: 16]
!   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -5] [type int] [line: 16]
!   !   !   !   !   !   Child: 1  Id: x [ref: Local, size: 1, loc: -6] [type int] [line: 16]
!   !   !   !   !   Child: 1  Compound [ref: None, size: -8, loc: 0] [type void] [line: 16]
!   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 17]
!   !   !   !   !   !   !   Child: 0  Id: x [ref: Local, size: 1, loc: -6] [type int] [line: 17]
!   !   !   !   !   !   !   Child: 1  Op: [ [type int] [line: 17]
!   !   !   !   !   !   !   !   Child: 0  Id: a is array [ref: Param, size: 1, loc: -2] [type int] [line: 17]
!   !   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -5] [type int] [line: 17]
!   !   !   !   !   !   Sibling: 0  Assign: = [type int] [line: 18]
!   !   !   !   !   !   !   Child: 0  Id: k [ref: Local, size: 1, loc: -7] [type int] [line: 18]
!   !   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -5] [type int] [line: 18]
!   !   !   !   Sibling: 0  Assign: ++ [type int] [line: 20]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -5] [type int] [line: 20]
!   !   Sibling: 3  Return [type void] [line: 23]
!   !   !   Child: 0  Id: k [ref: Local, size: 1, loc: -7] [type int] [line: 23]
Sibling: 8  Func sort [ref: Global, size: -8, loc: 0] [type void] [line: 26]
!   Child: 0  Param a is array [ref: Param, size: 1, loc: -2] [type int] [line: 26]
!   Sibling: 0  Param low [ref: Param, size: 1, loc: -3] [type int] [line: 26]
!   Sibling: 1  Param high [ref: Param, size: 1, loc: -4] [type int] [line: 26]
!   Child: 1  Compound [ref: None, size: -7, loc: 0] [type void] [line: 27]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -5] [type int] [line: 27]
!   !   Sibling: 0  Var: k [ref: Local, size: 1, loc: -6] [type int] [line: 27]
!   !   Child: 1  Assign: = [type int] [line: 29]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -5] [type int] [line: 29]
!   !   !   Child: 1  Id: low [ref: Param, size: 1, loc: -3] [type int] [line: 29]
!   !   Sibling: 0  While  [type void] [line: 30]
!   !   !   Child: 0  Op: < [type bool] [line: 30]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -5] [type int] [line: 30]
!   !   !   !   Child: 1  Op: - [type int] [line: 30]
!   !   !   !   !   Child: 0  Id: high [ref: Param, size: 1, loc: -4] [type int] [line: 30]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 30]
!   !   !   Child: 1  Compound [ref: None, size: -8, loc: 0] [type void] [line: 30]
!   !   !   !   Child: 0  Var: t [ref: Local, size: 1, loc: -7] [type int] [line: 31]
!   !   !   !   Child: 1  Assign: = [type int] [line: 33]
!   !   !   !   !   Child: 0  Id: k [ref: Local, size: 1, loc: -6] [type int] [line: 33]
!   !   !   !   !   Child: 1  Call: minloc [type int] [line: 33]
!   !   !   !   !   !   Child: 0  Id: a is array [ref: Param, size: 1, loc: -2] [type int] [line: 33]
!   !   !   !   !   !   Sibling: 0  Id: i [ref: Local, size: 1, loc: -5] [type int] [line: 33]
!   !   !   !   !   !   Sibling: 1  Id: high [ref: Param, size: 1, loc: -4] [type int] [line: 33]
!   !   !   !   Sibling: 0  Assign: = [type int] [line: 34]
!   !   !   !   !   Child: 0  Id: t [ref: Local, size: 1, loc: -7] [type int] [line: 34]
!   !   !   !   !   Child: 1  Op: [ [type int] [line: 34]
!   !   !   !   !   !   Child: 0  Id: a is array [ref: Param, size: 1, loc: -2] [type int] [line: 34]
!   !   !   !   !   !   Child: 1  Id: k [ref: Local, size: 1, loc: -6] [type int] [line: 34]
!   !   !   !   Sibling: 1  Assign: = [type int] [line: 35]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 35]
!   !   !   !   !   !   Child: 0  Id: a is array [ref: Param, size: 1, loc: -2] [type int] [line: 35]
!   !   !   !   !   !   Child: 1  Id: k [ref: Local, size: 1, loc: -6] [type int] [line: 35]
!   !   !   !   !   Child: 1  Op: [ [type int] [line: 35]
!   !   !   !   !   !   Child: 0  Id: a is array [ref: Param, size: 1, loc: -2] [type int] [line: 35]
!   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -5] [type int] [line: 35]
!   !   !   !   Sibling: 2  Assign: = [type int] [line: 36]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 36]
!   !   !   !   !   !   Child: 0  Id: a is array [ref: Param, size: 1, loc: -2] [type int] [line: 36]
!   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -5] [type int] [line: 36]
!   !   !   !   !   Child: 1  Id: t [ref: Local, size: 1, loc: -7] [type int] [line: 36]
!   !   !   !   Sibling: 3  Assign: ++ [type int] [line: 37]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -5] [type int] [line: 37]
Sibling: 9  Func main [ref: Global, size: -3, loc: 0] [type void] [line: 41]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 42]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -2] [type int] [line: 42]
!   !   Child: 1  Assign: = [type int] [line: 44]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 44]
!   !   !   Child: 1  Const: 0 [type int] [line: 44]
!   !   Sibling: 0  While  [type void] [line: 45]
!   !   !   Child: 0  Op: < [type bool] [line: 45]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 45]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 45]
!   !   !   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 45]
!   !   !   !   Child: 1  Assign: = [type int] [line: 46]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 46]
!   !   !   !   !   !   Child: 0  Id: x is array [ref: Global, size: 11, loc: -1] [type int] [line: 46]
!   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 46]
!   !   !   !   !   Child: 1  Call: input [type int] [line: 46]
!   !   !   !   Sibling: 0  Assign: ++ [type int] [line: 47]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 47]
!   !   Sibling: 1  Call: sort [type void] [line: 50]
!   !   !   Child: 0  Id: x is array [ref: Global, size: 11, loc: -1] [type int] [line: 50]
!   !   !   Sibling: 0  Const: 0 [type int] [line: 50]
!   !   !   Sibling: 1  Const: 10 [type int] [line: 50]
!   !   Sibling: 2  Assign: = [type int] [line: 51]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 51]
!   !   !   Child: 1  Const: 0 [type int] [line: 51]
!   !   Sibling: 3  While  [type void] [line: 52]
!   !   !   Child: 0  Op: < [type bool] [line: 52]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 52]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 52]
!   !   !   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 52]
!   !   !   !   Child: 1  Call: output [type void] [line: 53]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 53]
!   !   !   !   !   !   Child: 0  Id: x is array [ref: Global, size: 11, loc: -1] [type int] [line: 53]
!   !   !   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 53]
!   !   !   !   Sibling: 0  Assign: ++ [type int] [line: 54]
!   !   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 54]
Offset for end of global space: -11
Number of warnings: 0
Number of errors: 0
