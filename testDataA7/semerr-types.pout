ERROR(11): '+' requires operands of type int but rhs is of type bool.
ERROR(12): '+' requires operands of type int but lhs is of type bool.
ERROR(13): '+' requires operands of type int but lhs is of type bool.
ERROR(13): '+' requires operands of type int but rhs is of type bool.
ERROR(15): 'and' requires operands of type bool but lhs is of type int.
ERROR(15): 'and' requires operands of type bool but rhs is of type int.
ERROR(16): 'and' requires operands of type bool but lhs is of type int.
ERROR(17): 'and' requires operands of type bool but rhs is of type int.
ERROR(21): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(22): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(26): '==' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(27): '==' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(31): '!=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(32): '!=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(35): The operation '+' does not work with arrays.
ERROR(36): '+' requires operands of type int but rhs is of type bool.
ERROR(36): The operation '+' does not work with arrays.
ERROR(37): '+' requires operands of type int but lhs is of type bool.
ERROR(37): The operation '+' does not work with arrays.
ERROR(38): '+' requires operands of type int but lhs is of type bool.
ERROR(38): '+' requires operands of type int but rhs is of type bool.
ERROR(38): The operation '+' does not work with arrays.
ERROR(40): 'and' requires operands of type bool but lhs is of type int.
ERROR(40): 'and' requires operands of type bool but rhs is of type int.
ERROR(40): The operation 'and' does not work with arrays.
ERROR(41): 'and' requires operands of type bool but lhs is of type int.
ERROR(41): The operation 'and' does not work with arrays.
ERROR(42): 'and' requires operands of type bool but rhs is of type int.
ERROR(42): The operation 'and' does not work with arrays.
ERROR(43): The operation 'and' does not work with arrays.
ERROR(46): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(47): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(51): '==' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(52): '==' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(55): '+' requires operands of type int but lhs is of type bool.
ERROR(56): '+' requires operands of type int but rhs is of type bool.
ERROR(57): '+' requires operands of type int but rhs is of type bool.
ERROR(59): 'or' requires operands of type bool but lhs is of type int.
ERROR(60): 'or' requires operands of type bool but rhs is of type int.
ERROR(61): 'or' requires operands of type bool but rhs is of type int.
ERROR(64): Unary 'not' requires an operand of type bool but was given type int.
ERROR(65): The operation 'not' does not work with arrays.
ERROR(66): Unary 'not' requires an operand of type bool but was given type int.
ERROR(66): The operation 'not' does not work with arrays.
ERROR(68): Unary '-' requires an operand of type int but was given type bool.
ERROR(70): Unary '-' requires an operand of type int but was given type bool.
ERROR(70): The operation '-' does not work with arrays.
ERROR(71): The operation '-' does not work with arrays.
ERROR(74): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(75): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(76): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(77): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(77): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(80): Expecting Boolean test condition in if statement but got type int.
ERROR(83): Cannot use array as test condition in if statement.
ERROR(86): Expecting Boolean test condition in if statement but got type int.
ERROR(86): Cannot use array as test condition in if statement.
ERROR(92): Expecting Boolean test condition in if statement but got type int.
ERROR(95): Expecting Boolean test condition in while statement but got type int.
ERROR(96): Cannot use array as test condition in while statement.
ERROR(97): Expecting Boolean test condition in while statement but got type int.
ERROR(97): Cannot use array as test condition in while statement.
ERROR(99): Expecting Boolean test condition in while statement but got type int.
WARNING(3): Expecting to return type int but function 'main' has no return statement.
Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func main [ref: Global, size: -10, loc: 0] [type int] [line: 3]
!   Child: 1  Compound [ref: None, size: -10, loc: 0] [type void] [line: 4]
!   !   Child: 0  Var: i [ref: Local, size: 1, loc: -2] [type int] [line: 5]
!   !   Sibling: 0  Var: b [ref: Local, size: 1, loc: -3] [type bool] [line: 6]
!   !   Sibling: 1  Var: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 7]
!   !   Sibling: 2  Var: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 8]
!   !   Child: 1  Op: + [type int] [line: 10]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 10]
!   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 10]
!   !   Sibling: 0  Op: + [type int] [line: 11]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 11]
!   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 11]
!   !   Sibling: 1  Op: + [type int] [line: 12]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 12]
!   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 12]
!   !   Sibling: 2  Op: + [type int] [line: 13]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 13]
!   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 13]
!   !   Sibling: 3  Op: and [type bool] [line: 15]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 15]
!   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 15]
!   !   Sibling: 4  Op: and [type bool] [line: 16]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 16]
!   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 16]
!   !   Sibling: 5  Op: and [type bool] [line: 17]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 17]
!   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 17]
!   !   Sibling: 6  Op: and [type bool] [line: 18]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 18]
!   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 18]
!   !   Sibling: 7  Assign: = [type int] [line: 20]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 20]
!   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 20]
!   !   Sibling: 8  Assign: = [type int] [line: 21]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 21]
!   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 21]
!   !   Sibling: 9  Assign: = [type bool] [line: 22]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 22]
!   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 22]
!   !   Sibling: 10  Assign: = [type bool] [line: 23]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 23]
!   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 23]
!   !   Sibling: 11  Op: == [type bool] [line: 25]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 25]
!   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 25]
!   !   Sibling: 12  Op: == [type bool] [line: 26]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 26]
!   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 26]
!   !   Sibling: 13  Op: == [type bool] [line: 27]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 27]
!   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 27]
!   !   Sibling: 14  Op: == [type bool] [line: 28]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 28]
!   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 28]
!   !   Sibling: 15  Op: != [type bool] [line: 30]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 30]
!   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 30]
!   !   Sibling: 16  Op: != [type bool] [line: 31]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 31]
!   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 31]
!   !   Sibling: 17  Op: != [type bool] [line: 32]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 32]
!   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 32]
!   !   Sibling: 18  Op: != [type bool] [line: 33]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 33]
!   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 33]
!   !   Sibling: 19  Op: + [type int] [line: 35]
!   !   !   Child: 0  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 35]
!   !   !   Child: 1  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 35]
!   !   Sibling: 20  Op: + [type int] [line: 36]
!   !   !   Child: 0  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 36]
!   !   !   Child: 1  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 36]
!   !   Sibling: 21  Op: + [type int] [line: 37]
!   !   !   Child: 0  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 37]
!   !   !   Child: 1  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 37]
!   !   Sibling: 22  Op: + [type int] [line: 38]
!   !   !   Child: 0  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 38]
!   !   !   Child: 1  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 38]
!   !   Sibling: 23  Op: and [type bool] [line: 40]
!   !   !   Child: 0  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 40]
!   !   !   Child: 1  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 40]
!   !   Sibling: 24  Op: and [type bool] [line: 41]
!   !   !   Child: 0  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 41]
!   !   !   Child: 1  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 41]
!   !   Sibling: 25  Op: and [type bool] [line: 42]
!   !   !   Child: 0  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 42]
!   !   !   Child: 1  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 42]
!   !   Sibling: 26  Op: and [type bool] [line: 43]
!   !   !   Child: 0  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 43]
!   !   !   Child: 1  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 43]
!   !   Sibling: 27  Assign: = [type int] [line: 45]
!   !   !   Child: 0  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 45]
!   !   !   Child: 1  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 45]
!   !   Sibling: 28  Assign: = [type int] [line: 46]
!   !   !   Child: 0  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 46]
!   !   !   Child: 1  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 46]
!   !   Sibling: 29  Assign: = [type bool] [line: 47]
!   !   !   Child: 0  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 47]
!   !   !   Child: 1  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 47]
!   !   Sibling: 30  Assign: = [type bool] [line: 48]
!   !   !   Child: 0  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 48]
!   !   !   Child: 1  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 48]
!   !   Sibling: 31  Op: == [type bool] [line: 50]
!   !   !   Child: 0  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 50]
!   !   !   Child: 1  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 50]
!   !   Sibling: 32  Op: == [type bool] [line: 51]
!   !   !   Child: 0  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 51]
!   !   !   Child: 1  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 51]
!   !   Sibling: 33  Op: == [type bool] [line: 52]
!   !   !   Child: 0  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 52]
!   !   !   Child: 1  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 52]
!   !   Sibling: 34  Op: == [type bool] [line: 53]
!   !   !   Child: 0  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 53]
!   !   !   Child: 1  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 53]
!   !   Sibling: 35  Op: + [type int] [line: 55]
!   !   !   Child: 0  Op: + [type int] [line: 55]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 55]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 55]
!   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 55]
!   !   Sibling: 36  Op: + [type int] [line: 56]
!   !   !   Child: 0  Op: + [type int] [line: 56]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 56]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 56]
!   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 56]
!   !   Sibling: 37  Op: + [type int] [line: 57]
!   !   !   Child: 0  Op: + [type int] [line: 57]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 57]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 57]
!   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 57]
!   !   Sibling: 38  Op: or [type bool] [line: 59]
!   !   !   Child: 0  Op: or [type bool] [line: 59]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 59]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 59]
!   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 59]
!   !   Sibling: 39  Op: or [type bool] [line: 60]
!   !   !   Child: 0  Op: or [type bool] [line: 60]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 60]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 60]
!   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 60]
!   !   Sibling: 40  Op: or [type bool] [line: 61]
!   !   !   Child: 0  Op: or [type bool] [line: 61]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 61]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 61]
!   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 61]
!   !   Sibling: 41  Op: not [type bool] [line: 63]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 63]
!   !   Sibling: 42  Op: not [type bool] [line: 64]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 64]
!   !   Sibling: 43  Op: not [type bool] [line: 65]
!   !   !   Child: 0  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 65]
!   !   Sibling: 44  Op: not [type bool] [line: 66]
!   !   !   Child: 0  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 66]
!   !   Sibling: 45  Op: - [type int] [line: 68]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 68]
!   !   Sibling: 46  Op: - [type int] [line: 69]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 69]
!   !   Sibling: 47  Op: - [type int] [line: 70]
!   !   !   Child: 0  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 70]
!   !   Sibling: 48  Op: - [type int] [line: 71]
!   !   !   Child: 0  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 71]
!   !   Sibling: 49  Op: or [type bool] [line: 73]
!   !   !   Child: 0  Op: > [type bool] [line: 73]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 73]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 73]
!   !   !   Child: 1  Op: > [type bool] [line: 73]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 73]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 73]
!   !   Sibling: 50  Op: or [type bool] [line: 74]
!   !   !   Child: 0  Op: > [type bool] [line: 74]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 74]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 74]
!   !   !   Child: 1  Op: > [type bool] [line: 74]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 74]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 74]
!   !   Sibling: 51  Op: or [type bool] [line: 75]
!   !   !   Child: 0  Op: > [type bool] [line: 75]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 75]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 75]
!   !   !   Child: 1  Op: > [type bool] [line: 75]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 75]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 75]
!   !   Sibling: 52  Op: or [type bool] [line: 76]
!   !   !   Child: 0  Op: > [type bool] [line: 76]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 76]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 76]
!   !   !   Child: 1  Op: > [type bool] [line: 76]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 76]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 76]
!   !   Sibling: 53  Op: or [type bool] [line: 77]
!   !   !   Child: 0  Op: > [type bool] [line: 77]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 77]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 77]
!   !   !   Child: 1  Op: > [type bool] [line: 77]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 77]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 77]
!   !   Sibling: 54  Op: and [type bool] [line: 78]
!   !   !   Child: 0  Op: or [type bool] [line: 78]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 78]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 78]
!   !   !   Child: 1  Op: or [type bool] [line: 78]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 78]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 78]
!   !   Sibling: 55  If  [type void] [line: 80]
!   !   !   Child: 0  Const: 1 [type int] [line: 80]
!   !   !   Child: 1  Assign: = [type int] [line: 80]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 80]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 80]
!   !   !   Child: 2  Assign: = [type bool] [line: 81]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 81]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 81]
!   !   Sibling: 56  If  [type void] [line: 83]
!   !   !   Child: 0  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 83]
!   !   !   Child: 1  Assign: = [type int] [line: 83]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 83]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 83]
!   !   !   Child: 2  Assign: = [type bool] [line: 84]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 84]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 84]
!   !   Sibling: 57  If  [type void] [line: 86]
!   !   !   Child: 0  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 86]
!   !   !   Child: 1  Assign: = [type int] [line: 86]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 86]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 86]
!   !   !   Child: 2  Assign: = [type bool] [line: 87]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 87]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 87]
!   !   Sibling: 58  If  [type void] [line: 89]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 89]
!   !   !   Child: 1  Assign: = [type int] [line: 89]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 89]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 89]
!   !   !   Child: 2  Assign: = [type bool] [line: 90]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 90]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 90]
!   !   Sibling: 59  If  [type void] [line: 92]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 92]
!   !   !   Child: 1  Assign: = [type int] [line: 92]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 92]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 92]
!   !   !   Child: 2  Assign: = [type bool] [line: 93]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 93]
!   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 93]
!   !   Sibling: 60  While  [type void] [line: 95]
!   !   !   Child: 0  Const: 1 [type int] [line: 95]
!   !   !   Child: 1  Assign: = [type int] [line: 95]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 95]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 95]
!   !   Sibling: 61  While  [type void] [line: 96]
!   !   !   Child: 0  Id: ba is array [ref: Local, size: 3, loc: -8] [type bool] [line: 96]
!   !   !   Child: 1  Assign: = [type int] [line: 96]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 96]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 96]
!   !   Sibling: 62  While  [type void] [line: 97]
!   !   !   Child: 0  Id: ia is array [ref: Local, size: 3, loc: -5] [type int] [line: 97]
!   !   !   Child: 1  Assign: = [type int] [line: 97]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 97]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 97]
!   !   Sibling: 63  While  [type void] [line: 98]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -3] [type bool] [line: 98]
!   !   !   Child: 1  Assign: = [type int] [line: 98]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 98]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 98]
!   !   Sibling: 64  While  [type void] [line: 99]
!   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 99]
!   !   !   Child: 1  Assign: = [type int] [line: 99]
!   !   !   !   Child: 0  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 99]
!   !   !   !   Child: 1  Id: i [ref: Local, size: 1, loc: -2] [type int] [line: 99]
Offset for end of global space: 0
Number of warnings: 1
Number of errors: 63
