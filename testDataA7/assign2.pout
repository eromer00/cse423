Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: gx is array [ref: Global, size: 8, loc: -1] [type int] [line: 3]
Sibling: 7  Var: gy is array [ref: Global, size: 7, loc: -9] [type int] [line: 3]
Sibling: 8  Var: ga is array [ref: Global, size: 6, loc: -16] [type bool] [line: 4]
Sibling: 9  Var: gb is array [ref: Global, size: 5, loc: -22] [type bool] [line: 4]
Sibling: 10  Func main [ref: Global, size: -32, loc: 0] [type void] [line: 6]
!   Child: 1  Compound [ref: None, size: -32, loc: 0] [type void] [line: 7]
!   !   Child: 0  Var: x is array [ref: Local, size: 9, loc: -3] [type int] [line: 8]
!   !   Sibling: 0  Var: y is array [ref: Local, size: 8, loc: -12] [type int] [line: 8]
!   !   Sibling: 1  Var: a is array [ref: Local, size: 7, loc: -20] [type bool] [line: 9]
!   !   Sibling: 2  Var: b is array [ref: Local, size: 6, loc: -27] [type bool] [line: 9]
!   !   Child: 1  Assign: = [type int] [line: 11]
!   !   !   Child: 0  Op: [ [type int] [line: 11]
!   !   !   !   Child: 0  Id: x is array [ref: Local, size: 9, loc: -3] [type int] [line: 11]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 11]
!   !   !   Child: 1  Const: 111 [type int] [line: 11]
!   !   Sibling: 0  Call: output [type void] [line: 12]
!   !   !   Child: 0  Op: [ [type int] [line: 12]
!   !   !   !   Child: 0  Id: x is array [ref: Local, size: 9, loc: -3] [type int] [line: 12]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 12]
!   !   Sibling: 1  Assign: = [type int] [line: 13]
!   !   !   Child: 0  Op: [ [type int] [line: 13]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 8, loc: -12] [type int] [line: 13]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 13]
!   !   !   Child: 1  Const: 222 [type int] [line: 13]
!   !   Sibling: 2  Call: output [type void] [line: 14]
!   !   !   Child: 0  Op: [ [type int] [line: 14]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 8, loc: -12] [type int] [line: 14]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 14]
!   !   Sibling: 3  Assign: = [type bool] [line: 15]
!   !   !   Child: 0  Op: [ [type bool] [line: 15]
!   !   !   !   Child: 0  Id: a is array [ref: Local, size: 7, loc: -20] [type bool] [line: 15]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 15]
!   !   !   Child: 1  Const: true [type bool] [line: 15]
!   !   Sibling: 4  Call: outputb [type void] [line: 16]
!   !   !   Child: 0  Op: [ [type bool] [line: 16]
!   !   !   !   Child: 0  Id: a is array [ref: Local, size: 7, loc: -20] [type bool] [line: 16]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 16]
!   !   Sibling: 5  Assign: = [type bool] [line: 17]
!   !   !   Child: 0  Op: [ [type bool] [line: 17]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 6, loc: -27] [type bool] [line: 17]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 17]
!   !   !   Child: 1  Const: false [type bool] [line: 17]
!   !   Sibling: 6  Call: outputb [type void] [line: 18]
!   !   !   Child: 0  Op: [ [type bool] [line: 18]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 6, loc: -27] [type bool] [line: 18]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 18]
!   !   Sibling: 7  Call: outnl [type void] [line: 19]
!   !   Sibling: 8  Assign: = [type int] [line: 21]
!   !   !   Child: 0  Op: [ [type int] [line: 21]
!   !   !   !   Child: 0  Id: gx is array [ref: Global, size: 8, loc: -1] [type int] [line: 21]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 21]
!   !   !   Child: 1  Const: 333 [type int] [line: 21]
!   !   Sibling: 9  Call: output [type void] [line: 22]
!   !   !   Child: 0  Op: [ [type int] [line: 22]
!   !   !   !   Child: 0  Id: gx is array [ref: Global, size: 8, loc: -1] [type int] [line: 22]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 22]
!   !   Sibling: 10  Assign: = [type int] [line: 23]
!   !   !   Child: 0  Op: [ [type int] [line: 23]
!   !   !   !   Child: 0  Id: gy is array [ref: Global, size: 7, loc: -9] [type int] [line: 23]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 23]
!   !   !   Child: 1  Const: 444 [type int] [line: 23]
!   !   Sibling: 11  Call: output [type void] [line: 24]
!   !   !   Child: 0  Op: [ [type int] [line: 24]
!   !   !   !   Child: 0  Id: gy is array [ref: Global, size: 7, loc: -9] [type int] [line: 24]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 24]
!   !   Sibling: 12  Assign: = [type bool] [line: 25]
!   !   !   Child: 0  Op: [ [type bool] [line: 25]
!   !   !   !   Child: 0  Id: ga is array [ref: Global, size: 6, loc: -16] [type bool] [line: 25]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 25]
!   !   !   Child: 1  Const: false [type bool] [line: 25]
!   !   Sibling: 13  Call: outputb [type void] [line: 26]
!   !   !   Child: 0  Op: [ [type bool] [line: 26]
!   !   !   !   Child: 0  Id: ga is array [ref: Global, size: 6, loc: -16] [type bool] [line: 26]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 26]
!   !   Sibling: 14  Assign: = [type bool] [line: 27]
!   !   !   Child: 0  Op: [ [type bool] [line: 27]
!   !   !   !   Child: 0  Id: gb is array [ref: Global, size: 5, loc: -22] [type bool] [line: 27]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 27]
!   !   !   Child: 1  Const: true [type bool] [line: 27]
!   !   Sibling: 15  Call: outputb [type void] [line: 28]
!   !   !   Child: 0  Op: [ [type bool] [line: 28]
!   !   !   !   Child: 0  Id: gb is array [ref: Global, size: 5, loc: -22] [type bool] [line: 28]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 28]
!   !   Sibling: 16  Call: outnl [type void] [line: 29]
!   !   Sibling: 17  Assign: = [type int] [line: 31]
!   !   !   Child: 0  Op: [ [type int] [line: 31]
!   !   !   !   Child: 0  Id: x is array [ref: Local, size: 9, loc: -3] [type int] [line: 31]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 31]
!   !   !   Child: 1  Op: [ [type int] [line: 31]
!   !   !   !   Child: 0  Id: y is array [ref: Local, size: 8, loc: -12] [type int] [line: 31]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 31]
!   !   Sibling: 18  Call: output [type void] [line: 32]
!   !   !   Child: 0  Op: [ [type int] [line: 32]
!   !   !   !   Child: 0  Id: x is array [ref: Local, size: 9, loc: -3] [type int] [line: 32]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 32]
!   !   Sibling: 19  Assign: = [type bool] [line: 33]
!   !   !   Child: 0  Op: [ [type bool] [line: 33]
!   !   !   !   Child: 0  Id: a is array [ref: Local, size: 7, loc: -20] [type bool] [line: 33]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 33]
!   !   !   Child: 1  Op: [ [type bool] [line: 33]
!   !   !   !   Child: 0  Id: b is array [ref: Local, size: 6, loc: -27] [type bool] [line: 33]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 33]
!   !   Sibling: 20  Call: outputb [type void] [line: 34]
!   !   !   Child: 0  Op: [ [type bool] [line: 34]
!   !   !   !   Child: 0  Id: a is array [ref: Local, size: 7, loc: -20] [type bool] [line: 34]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 34]
!   !   Sibling: 21  Call: outnl [type void] [line: 35]
!   !   Sibling: 22  Assign: = [type int] [line: 37]
!   !   !   Child: 0  Op: [ [type int] [line: 37]
!   !   !   !   Child: 0  Id: gx is array [ref: Global, size: 8, loc: -1] [type int] [line: 37]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 37]
!   !   !   Child: 1  Op: [ [type int] [line: 37]
!   !   !   !   Child: 0  Id: gy is array [ref: Global, size: 7, loc: -9] [type int] [line: 37]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 37]
!   !   Sibling: 23  Call: output [type void] [line: 38]
!   !   !   Child: 0  Op: [ [type int] [line: 38]
!   !   !   !   Child: 0  Id: gx is array [ref: Global, size: 8, loc: -1] [type int] [line: 38]
!   !   !   !   Child: 1  Const: 5 [type int] [line: 38]
!   !   Sibling: 24  Assign: = [type bool] [line: 39]
!   !   !   Child: 0  Op: [ [type bool] [line: 39]
!   !   !   !   Child: 0  Id: ga is array [ref: Global, size: 6, loc: -16] [type bool] [line: 39]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 39]
!   !   !   Child: 1  Op: [ [type bool] [line: 39]
!   !   !   !   Child: 0  Id: gb is array [ref: Global, size: 5, loc: -22] [type bool] [line: 39]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 39]
!   !   Sibling: 25  Call: outputb [type void] [line: 40]
!   !   !   Child: 0  Op: [ [type bool] [line: 40]
!   !   !   !   Child: 0  Id: ga is array [ref: Global, size: 6, loc: -16] [type bool] [line: 40]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 40]
!   !   Sibling: 26  Call: outnl [type void] [line: 41]
!   !   Sibling: 27  Return [type void] [line: 43]
Offset for end of global space: -26
Number of warnings: 0
Number of errors: 0
