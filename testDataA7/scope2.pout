Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: g [ref: Global, size: 1, loc: 0] [type int] [line: 2]
Sibling: 7  Func ant [ref: Global, size: -7, loc: 0] [type int] [line: 3]
!   Child: 0  Param x [ref: Param, size: 1, loc: -2] [type int] [line: 3]
!   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 4]
!   !   Child: 0  Var: a [ref: Local, size: 1, loc: -3] [type int] [line: 5]
!   !   Sibling: 0  Var: b [ref: Local, size: 1, loc: -4] [type int] [line: 6]
!   !   Child: 1  Assign: = [type int] [line: 7]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -4] [type int] [line: 7]
!   !   !   Child: 1  Const: 111 [type int] [line: 7]
!   !   Sibling: 0  Assign: = [type int] [line: 8]
!   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 8]
!   !   !   Child: 1  Const: 222 [type int] [line: 8]
!   !   Sibling: 1  Assign: = [type int] [line: 9]
!   !   !   Child: 0  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 9]
!   !   !   Child: 1  Const: 333 [type int] [line: 9]
!   !   Sibling: 2  Compound [ref: None, size: -7, loc: 0] [type void] [line: 10]
!   !   !   Child: 0  Var: c [ref: Local, size: 1, loc: -5] [type int] [line: 11]
!   !   !   Sibling: 0  Var: b [ref: Local, size: 1, loc: -6] [type int] [line: 12]
!   !   !   Child: 1  Assign: = [type int] [line: 13]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -3] [type int] [line: 13]
!   !   !   !   Child: 1  Const: 444 [type int] [line: 13]
!   !   !   Sibling: 0  Assign: = [type int] [line: 14]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -6] [type int] [line: 14]
!   !   !   !   Child: 1  Const: 555 [type int] [line: 14]
!   !   !   Sibling: 1  Assign: = [type int] [line: 15]
!   !   !   !   Child: 0  Id: c [ref: Local, size: 1, loc: -5] [type int] [line: 15]
!   !   !   !   Child: 1  Const: 666 [type int] [line: 15]
!   !   !   Sibling: 2  Assign: = [type int] [line: 16]
!   !   !   !   Child: 0  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 16]
!   !   !   !   Child: 1  Const: 777 [type int] [line: 16]
!   !   !   Sibling: 3  Assign: = [type int] [line: 17]
!   !   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 17]
!   !   !   !   Child: 1  Const: 888 [type int] [line: 17]
!   !   !   Sibling: 4  Call: output [type void] [line: 18]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -3] [type int] [line: 18]
!   !   !   Sibling: 5  Call: output [type void] [line: 19]
!   !   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -6] [type int] [line: 19]
!   !   !   Sibling: 6  Call: output [type void] [line: 20]
!   !   !   !   Child: 0  Id: c [ref: Local, size: 1, loc: -5] [type int] [line: 20]
!   !   !   Sibling: 7  Call: output [type void] [line: 21]
!   !   !   !   Child: 0  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 21]
!   !   !   Sibling: 8  Call: output [type void] [line: 22]
!   !   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 22]
!   !   !   Sibling: 9  Call: outnl [type void] [line: 23]
!   !   Sibling: 3  Call: output [type void] [line: 25]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -3] [type int] [line: 25]
!   !   Sibling: 4  Call: output [type void] [line: 26]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -4] [type int] [line: 26]
!   !   Sibling: 5  Call: output [type void] [line: 27]
!   !   !   Child: 0  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 27]
!   !   Sibling: 6  Call: output [type void] [line: 28]
!   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 28]
!   !   Sibling: 7  Call: outnl [type void] [line: 29]
!   !   Sibling: 8  Assign: = [type int] [line: 30]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -3] [type int] [line: 30]
!   !   !   Child: 1  Const: 11 [type int] [line: 30]
!   !   Sibling: 9  Assign: = [type int] [line: 31]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -4] [type int] [line: 31]
!   !   !   Child: 1  Const: 12 [type int] [line: 31]
!   !   Sibling: 10  Assign: = [type int] [line: 32]
!   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 32]
!   !   !   Child: 1  Const: 14 [type int] [line: 32]
!   !   Sibling: 11  Compound [ref: None, size: -7, loc: 0] [type void] [line: 33]
!   !   !   Child: 1  Assign: = [type int] [line: 34]
!   !   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 34]
!   !   !   !   Child: 1  Const: 15 [type int] [line: 34]
!   !   Sibling: 12  Call: output [type void] [line: 36]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -3] [type int] [line: 36]
!   !   Sibling: 13  Call: output [type void] [line: 37]
!   !   !   Child: 0  Id: b [ref: Local, size: 1, loc: -4] [type int] [line: 37]
!   !   Sibling: 14  Call: output [type void] [line: 38]
!   !   !   Child: 0  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 38]
!   !   Sibling: 15  Call: output [type void] [line: 39]
!   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 39]
!   !   Sibling: 16  Call: outnl [type void] [line: 40]
!   !   Sibling: 17  Return [type void] [line: 42]
!   !   !   Child: 0  Op: + [type int] [line: 42]
!   !   !   !   Child: 0  Op: + [type int] [line: 42]
!   !   !   !   !   Child: 0  Op: + [type int] [line: 42]
!   !   !   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -3] [type int] [line: 42]
!   !   !   !   !   !   Child: 1  Id: b [ref: Local, size: 1, loc: -4] [type int] [line: 42]
!   !   !   !   !   Child: 1  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 42]
!   !   !   !   Child: 1  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 42]
Sibling: 8  Func main [ref: Global, size: -3, loc: 0] [type void] [line: 45]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 46]
!   !   Child: 0  Var: a [ref: Local, size: 1, loc: -2] [type int] [line: 47]
!   !   Child: 1  Assign: = [type int] [line: 48]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 48]
!   !   !   Child: 1  Const: 16 [type int] [line: 48]
!   !   Sibling: 0  Assign: = [type int] [line: 49]
!   !   !   Child: 0  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 49]
!   !   !   Child: 1  Const: 1 [type int] [line: 49]
!   !   Sibling: 1  Call: output [type void] [line: 50]
!   !   !   Child: 0  Call: ant [type int] [line: 50]
!   !   !   !   Child: 0  Const: 2 [type int] [line: 50]
!   !   Sibling: 2  Call: output [type void] [line: 51]
!   !   !   Child: 0  Id: g [ref: Global, size: 1, loc: 0] [type int] [line: 51]
!   !   Sibling: 3  Call: output [type void] [line: 52]
!   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -2] [type int] [line: 52]
!   !   Sibling: 4  Call: outnl [type void] [line: 53]
Offset for end of global space: -1
Number of warnings: 0
Number of errors: 0
