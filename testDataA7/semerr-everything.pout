Func input [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy* [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var: gromit [ref: Global, size: 1, loc: 0] [type int] [line: 6]
Sibling: 7  Func wallace [ref: Global, size: -26, loc: 0] [type void] [line: 8]
!   Child: 0  Param wrong [ref: Param, size: 1, loc: -2] [type int] [line: 8]
!   Sibling: 0  Param trousers [ref: Param, size: 1, loc: -3] [type int] [line: 8]
!   Child: 1  Compound [ref: None, size: -6, loc: 0] [type void] [line: 9]
!   !   Child: 0  Var: close [ref: Local, size: 1, loc: -4] [type bool] [line: 10]
!   !   Sibling: 0  Var: shave [ref: Local, size: 1, loc: -5] [type bool] [line: 10]
!   !   Child: 1  Id: close [ref: Local, size: 1, loc: -4] [type bool] [line: 12]
!   !   Sibling: 0  Assign: = [type bool] [line: 13]
!   !   !   Child: 0  Id: close [ref: Local, size: 1, loc: -4] [type bool] [line: 13]
!   !   !   Child: 1  Id: shave [ref: Local, size: 1, loc: -5] [type bool] [line: 13]
!   !   Sibling: 1  Assign: = [type int] [line: 14]
!   !   !   Child: 0  Id: wrong [ref: Param, size: 1, loc: -2] [type int] [line: 14]
!   !   !   Child: 1  Op: % [type int] [line: 14]
!   !   !   !   Child: 0  Id: trousers [ref: Param, size: 1, loc: -3] [type int] [line: 14]
!   !   !   !   Child: 1  Op: / [type int] [line: 14]
!   !   !   !   !   Child: 0  Const: 666 [type int] [line: 14]
!   !   !   !   !   Child: 1  Id: wrong [ref: Param, size: 1, loc: -2] [type int] [line: 14]
!   !   Sibling: 2  Assign: = [type int] [line: 15]
!   !   !   Child: 0  Id: gromit [ref: Global, size: 1, loc: 0] [type int] [line: 15]
!   !   !   Child: 1  Op: + [type int] [line: 15]
!   !   !   !   Child: 0  Op: - [type int] [line: 15]
!   !   !   !   !   Child: 0  Op: * [type int] [line: 15]
!   !   !   !   !   !   Child: 0  Id: wrong [ref: Param, size: 1, loc: -2] [type int] [line: 15]
!   !   !   !   !   !   Child: 1  Id: trousers [ref: Param, size: 1, loc: -3] [type int] [line: 15]
!   !   !   !   !   Child: 1  Id: gromit [ref: Global, size: 1, loc: 0] [type int] [line: 15]
!   !   !   !   Child: 1  Op: - [type int] [line: 15]
!   !   !   !   !   Child: 0  Const: 42 [type int] [line: 15]
!   !   Sibling: 3  Assign: += [type int] [line: 16]
!   !   !   Child: 0  Id: gromit [ref: Global, size: 1, loc: 0] [type int] [line: 16]
!   !   !   Child: 1  Const: 27182818 [type int] [line: 16]
!   !   Sibling: 4  Assign: -= [type int] [line: 17]
!   !   !   Child: 0  Id: gromit [ref: Global, size: 1, loc: 0] [type int] [line: 17]
!   !   !   Child: 1  Const: 31415927 [type int] [line: 17]
!   !   Sibling: 5  Assign: = [type bool] [line: 18]
!   !   !   Child: 0  Id: close [ref: Local, size: 1, loc: -4] [type bool] [line: 18]
!   !   !   Child: 1  Op: and [type bool] [line: 18]
!   !   !   !   Child: 0  Op: < [type bool] [line: 18]
!   !   !   !   !   Child: 0  Id: wrong [ref: Param, size: 1, loc: -2] [type int] [line: 18]
!   !   !   !   !   Child: 1  Id: trousers [ref: Param, size: 1, loc: -3] [type int] [line: 18]
!   !   !   !   Child: 1  Op: <= [type bool] [line: 18]
!   !   !   !   !   Child: 0  Id: trousers [ref: Param, size: 1, loc: -3] [type int] [line: 18]
!   !   !   !   !   Child: 1  Id: gromit [ref: Global, size: 1, loc: 0] [type int] [line: 18]
!   !   Sibling: 6  Assign: = [type bool] [line: 19]
!   !   !   Child: 0  Id: shave [ref: Local, size: 1, loc: -5] [type bool] [line: 19]
!   !   !   Child: 1  Op: and [type bool] [line: 19]
!   !   !   !   Child: 0  Op: > [type bool] [line: 19]
!   !   !   !   !   Child: 0  Id: wrong [ref: Param, size: 1, loc: -2] [type int] [line: 19]
!   !   !   !   !   Child: 1  Id: trousers [ref: Param, size: 1, loc: -3] [type int] [line: 19]
!   !   !   !   Child: 1  Op: >= [type bool] [line: 19]
!   !   !   !   !   Child: 0  Id: trousers [ref: Param, size: 1, loc: -3] [type int] [line: 19]
!   !   !   !   !   Child: 1  Id: gromit [ref: Global, size: 1, loc: 0] [type int] [line: 19]
!   !   Sibling: 7  Compound [ref: None, size: -10, loc: 0] [type void] [line: 20]
!   !   !   Child: 0  Var: a [ref: Local, size: 1, loc: -6] [type int] [line: 21]
!   !   !   Sibling: 0  Var: grand [ref: Local, size: 1, loc: -7] [type int] [line: 21]
!   !   !   Sibling: 1  Var: day [ref: Local, size: 1, loc: -8] [type int] [line: 21]
!   !   !   Sibling: 2  Var: out [ref: Local, size: 1, loc: -9] [type int] [line: 21]
!   !   !   Child: 1  Assign: = [type int] [line: 22]
!   !   !   !   Child: 0  Id: a [ref: Local, size: 1, loc: -6] [type int] [line: 22]
!   !   !   !   Child: 1  Assign: += [type int] [line: 22]
!   !   !   !   !   Child: 0  Id: grand [ref: Local, size: 1, loc: -7] [type int] [line: 22]
!   !   !   !   !   Child: 1  Assign: -= [type int] [line: 22]
!   !   !   !   !   !   Child: 0  Id: day [ref: Local, size: 1, loc: -8] [type int] [line: 22]
!   !   !   !   !   !   Child: 1  Id: out [ref: Local, size: 1, loc: -9] [type int] [line: 22]
!   !   Sibling: 8  Assign: = [type bool] [line: 24]
!   !   !   Child: 0  Id: close [ref: Local, size: 1, loc: -4] [type bool] [line: 24]
!   !   !   Child: 1  Op: and [type bool] [line: 24]
!   !   !   !   Child: 0  Op: < [type bool] [line: 24]
!   !   !   !   !   Child: 0  Op: + [type int] [line: 24]
!   !   !   !   !   !   Child: 0  Op: * [type int] [line: 24]
!   !   !   !   !   !   !   Child: 0  Op: - [type int] [line: 24]
!   !   !   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 24]
!   !   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 24]
!   !   !   !   !   !   Child: 1  Const: 3 [type int] [line: 24]
!   !   !   !   !   Child: 1  Op: * [type int] [line: 24]
!   !   !   !   !   !   Child: 0  Const: 4 [type int] [line: 24]
!   !   !   !   !   !   Child: 1  Const: 5 [type int] [line: 24]
!   !   !   !   Child: 1  Op: > [type bool] [line: 24]
!   !   !   !   !   Child: 0  Op: + [type int] [line: 24]
!   !   !   !   !   !   Child: 0  Const: 6 [type int] [line: 24]
!   !   !   !   !   !   Child: 1  Const: 7 [type int] [line: 24]
!   !   !   !   !   Child: 1  Op: - [type int] [line: 24]
!   !   !   !   !   !   Child: 0  Const: 3 [type int] [line: 24]
!   !   Sibling: 9  Assign: = [type bool] [line: 25]
!   !   !   Child: 0  Id: shave [ref: Local, size: 1, loc: -5] [type bool] [line: 25]
!   !   !   Child: 1  Op: or [type bool] [line: 25]
!   !   !   !   Child: 0  Const: true [type bool] [line: 25]
!   !   !   !   Child: 1  Op: and [type bool] [line: 25]
!   !   !   !   !   Child: 0  Op: < [type bool] [line: 25]
!   !   !   !   !   !   Child: 0  Op: - [type int] [line: 25]
!   !   !   !   !   !   !   Child: 0  Op: * [type int] [line: 25]
!   !   !   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 25]
!   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 25]
!   !   !   !   !   !   !   !   !   Child: 0  Const: 2 [type int] [line: 25]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 3 [type int] [line: 25]
!   !   !   !   !   !   Child: 1  Op: * [type int] [line: 25]
!   !   !   !   !   !   !   Child: 0  Const: 4 [type int] [line: 25]
!   !   !   !   !   !   !   Child: 1  Const: 5 [type int] [line: 25]
!   !   !   !   !   Child: 1  Op: > [type bool] [line: 25]
!   !   !   !   !   !   Child: 0  Op: + [type int] [line: 25]
!   !   !   !   !   !   !   Child: 0  Const: 6 [type int] [line: 25]
!   !   !   !   !   !   !   Child: 1  Const: 7 [type int] [line: 25]
!   !   !   !   !   !   Child: 1  Op: - [type int] [line: 25]
!   !   !   !   !   !   !   Child: 0  Const: 3 [type int] [line: 25]
!   !   Sibling: 10  If  [type void] [line: 26]
!   !   !   Child: 0  Op: != [type bool] [line: 26]
!   !   !   !   Child: 0  Id: shave [ref: Local, size: 1, loc: -5] [type bool] [line: 26]
!   !   !   !   Child: 1  Id: close [ref: Local, size: 1, loc: -4] [type bool] [line: 26]
!   !   !   Child: 1  Assign: = [type bool] [line: 26]
!   !   !   !   Child: 0  Id: shave [ref: Local, size: 1, loc: -5] [type bool] [line: 26]
!   !   !   !   Child: 1  Op: not [type bool] [line: 26]
!   !   !   !   !   Child: 0  Id: close [ref: Local, size: 1, loc: -4] [type bool] [line: 26]
!   !   Sibling: 11  If  [type void] [line: 27]
!   !   !   Child: 0  Op: or [type bool] [line: 27]
!   !   !   !   Child: 0  Op: not [type bool] [line: 27]
!   !   !   !   !   Child: 0  Op: == [type bool] [line: 27]
!   !   !   !   !   !   Child: 0  Id: shave [ref: Local, size: 1, loc: -5] [type bool] [line: 27]
!   !   !   !   !   !   Child: 1  Id: close [ref: Local, size: 1, loc: -4] [type bool] [line: 27]
!   !   !   !   Child: 1  Op: not [type bool] [line: 27]
!   !   !   !   !   Child: 0  Id: close [ref: Local, size: 1, loc: -4] [type bool] [line: 27]
!   !   !   Child: 1  Assign: = [type bool] [line: 27]
!   !   !   !   Child: 0  Id: shave [ref: Local, size: 1, loc: -5] [type bool] [line: 27]
!   !   !   !   Child: 1  Const: true [type bool] [line: 27]
!   !   !   Child: 2  Assign: = [type bool] [line: 28]
!   !   !   !   Child: 0  Id: close [ref: Local, size: 1, loc: -4] [type bool] [line: 28]
!   !   !   !   Child: 1  Const: false [type bool] [line: 28]
!   !   Sibling: 12  While  [type void] [line: 29]
!   !   !   Child: 0  Id: shave [ref: Local, size: 1, loc: -5] [type bool] [line: 29]
!   !   !   Child: 1  Compound [ref: None, size: -23, loc: 0] [type void] [line: 29]
!   !   !   !   Child: 0  Var: were [ref: Local, size: 1, loc: -10] [type int] [line: 30]
!   !   !   !   Sibling: 0  Var: rabbit [ref: Local, size: 1, loc: -11] [type int] [line: 30]
!   !   !   !   Sibling: 1  Var: sheep is array [ref: Local, size: 11, loc: -13] [type int] [line: 31]
!   !   !   !   Child: 1  Assign: = [type int] [line: 33]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 33]
!   !   !   !   !   !   Child: 0  Id: sheep is array [ref: Local, size: 11, loc: -13] [type int] [line: 33]
!   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 33]
!   !   !   !   !   Child: 1  Const: 1618 [type int] [line: 33]
!   !   !   !   Sibling: 0  If  [type void] [line: 34]
!   !   !   !   !   Child: 0  Op: < [type bool] [line: 34]
!   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 34]
!   !   !   !   !   !   !   Child: 0  Id: sheep is array [ref: Local, size: 11, loc: -13] [type int] [line: 34]
!   !   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 34]
!   !   !   !   !   !   Child: 1  Const: 496 [type int] [line: 34]
!   !   !   !   !   Child: 1  Break [type void] [line: 34]
!   !   !   !   Sibling: 1  Call: wallace [type void] [line: 35]
!   !   !   !   !   Child: 0  Assign: -- [type int] [line: 35]
!   !   !   !   !   !   Child: 0  Id: gromit [ref: Global, size: 1, loc: 0] [type int] [line: 35]
!   !   !   !   !   Sibling: 0  Op: - [type int] [line: 35]
!   !   !   !   !   !   Child: 0  Id: were [ref: Local, size: 1, loc: -10] [type int] [line: 35]
!   !   !   !   !   !   Child: 1  Id: rabbit [ref: Local, size: 1, loc: -11] [type int] [line: 35]
!   !   !   !   Sibling: 2  Compound [ref: None, size: -26, loc: 0] [type void] [line: 36]
!   !   !   !   !   Child: 0  Var: the [ref: Local, size: 1, loc: -23] [type int] [line: 37]
!   !   !   !   !   Sibling: 0  Var: wrong [ref: Local, size: 1, loc: -24] [type int] [line: 37]
!   !   !   !   !   Sibling: 1  Var: trousers [ref: Local, size: 1, loc: -25] [type int] [line: 37]
!   !   !   !   !   Child: 1  Assign: = [type int] [line: 39]
!   !   !   !   !   !   Child: 0  Id: the [ref: Local, size: 1, loc: -23] [type int] [line: 39]
!   !   !   !   !   !   Child: 1  Assign: += [type int] [line: 39]
!   !   !   !   !   !   !   Child: 0  Id: wrong [ref: Local, size: 1, loc: -24] [type int] [line: 39]
!   !   !   !   !   !   !   Child: 1  Assign: ++ [type int] [line: 39]
!   !   !   !   !   !   !   !   Child: 0  Id: trousers [ref: Local, size: 1, loc: -25] [type int] [line: 39]
!   !   !   !   !   Sibling: 0  If  [type void] [line: 40]
!   !   !   !   !   !   Child: 0  Op: == [type bool] [line: 40]
!   !   !   !   !   !   !   Child: 0  Id: were [ref: Local, size: 1, loc: -10] [type int] [line: 40]
!   !   !   !   !   !   !   Child: 1  Id: rabbit [ref: Local, size: 1, loc: -11] [type int] [line: 40]
!   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 40]
!   !   !   !   !   !   !   Child: 0  Id: were [ref: Local, size: 1, loc: -10] [type int] [line: 40]
!   !   !   !   !   !   !   Child: 1  Assign: -- [type int] [line: 40]
!   !   !   !   !   !   !   !   Child: 0  Id: wrong [ref: Local, size: 1, loc: -24] [type int] [line: 40]
!   !   Sibling: 13  Return [type void] [line: 43]
Sibling: 8  Func Wendolene [ref: Global, size: -6, loc: 0] [type int] [line: 46]
!   Child: 0  Param wool [ref: Param, size: 1, loc: -2] [type int] [line: 46]
!   Sibling: 0  Param shawn [ref: Param, size: 1, loc: -3] [type bool] [line: 46]
!   Sibling: 1  Param yarn is array [ref: Param, size: 1, loc: -4] [type int] [line: 46]
!   Sibling: 2  Param preston is array [ref: Param, size: 1, loc: -5] [type bool] [line: 46]
!   Child: 1  Compound [ref: None, size: -6, loc: 0] [type void] [line: 47]
!   !   Child: 1  Return [type void] [line: 48]
!   !   !   Child: 0  Op: + [type int] [line: 48]
!   !   !   !   Child: 0  Op: + [type int] [line: 48]
!   !   !   !   !   Child: 0  Op: + [type int] [line: 48]
!   !   !   !   !   !   Child: 0  Id: wool [ref: Param, size: 1, loc: -2] [type int] [line: 48]
!   !   !   !   !   !   Child: 1  Op: [ [type int] [line: 48]
!   !   !   !   !   !   !   Child: 0  Id: yarn is array [ref: Param, size: 1, loc: -4] [type int] [line: 48]
!   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 48]
!   !   !   !   !   Child: 1  Op: * [type int] [line: 48]
!   !   !   !   !   !   Child: 0  Id: yarn is array [ref: Param, size: 1, loc: -4] [type int] [line: 48]
!   !   !   !   Child: 1  Op: [ [type int] [line: 48]
!   !   !   !   !   Child: 0  Id: yarn is array [ref: Param, size: 1, loc: -4] [type int] [line: 48]
!   !   !   !   !   Child: 1  Op: * [type int] [line: 48]
!   !   !   !   !   !   Child: 0  Const: 7 [type int] [line: 48]
!   !   !   !   !   !   Child: 1  Id: wool [ref: Param, size: 1, loc: -2] [type int] [line: 48]
Sibling: 9  Func ramsBottom [ref: Global, size: -16, loc: 0] [type bool] [line: 51]
!   Child: 1  Compound [ref: None, size: -16, loc: 0] [type void] [line: 52]
!   !   Child: 0  Var: chicken is array [ref: Local, size: 3, loc: -3] [type int] [line: 53]
!   !   Sibling: 0  Var: run is array [ref: Local, size: 4, loc: -6] [type bool] [line: 54]
!   !   Sibling: 1  Var: wallace is array [ref: Local, size: 3, loc: -10] [type int] [line: 55]
!   !   Sibling: 2  Var: gromit is array [ref: Local, size: 4, loc: -13] [type int] [line: 55]
!   !   Child: 1  Op: * [type int] [line: 57]
!   !   !   Child: 0  Const: 42 [type int] [line: 57]
!   !   !   Child: 1  Call: Wendolene [type int] [line: 57]
!   !   !   !   Child: 0  Op: + [type int] [line: 57]
!   !   !   !   !   Child: 0  Op: + [type int] [line: 57]
!   !   !   !   !   !   Child: 0  Const: 1 [type int] [line: 57]
!   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 57]
!   !   !   !   !   Child: 1  Const: 3 [type int] [line: 57]
!   !   !   !   Sibling: 0  Op: or [type bool] [line: 57]
!   !   !   !   !   Child: 0  Op: not [type bool] [line: 57]
!   !   !   !   !   !   Child: 0  Const: true [type bool] [line: 57]
!   !   !   !   !   Child: 1  Op: and [type bool] [line: 57]
!   !   !   !   !   !   Child: 0  Const: true [type bool] [line: 57]
!   !   !   !   !   !   Child: 1  Const: false [type bool] [line: 57]
!   !   !   !   Sibling: 1  Id: chicken is array [ref: Local, size: 3, loc: -3] [type int] [line: 57]
!   !   !   !   Sibling: 2  Id: run is array [ref: Local, size: 4, loc: -6] [type bool] [line: 57]
!   !   Sibling: 0  Op: [ [type bool] [line: 58]
!   !   !   Child: 0  Id: run is array [ref: Local, size: 4, loc: -6] [type bool] [line: 58]
!   !   !   Child: 1  Op: - [type int] [line: 58]
!   !   !   !   Child: 0  Op: * [type int] [line: 58]
!   !   !   !   !   Child: 0  Id: run is array [ref: Local, size: 4, loc: -6] [type bool] [line: 58]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 58]
!   !   Sibling: 1  Return [type void] [line: 60]
!   !   !   Child: 0  Op: not [type bool] [line: 60]
!   !   !   !   Child: 0  Op: >= [type bool] [line: 60]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 60]
!   !   !   !   !   !   Child: 0  Id: wallace is array [ref: Local, size: 3, loc: -10] [type int] [line: 60]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 60]
!   !   !   !   !   Child: 1  Op: * [type int] [line: 60]
!   !   !   !   !   !   Child: 0  Op: - [type int] [line: 60]
!   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 60]
!   !   !   !   !   !   !   !   Child: 0  Id: gromit is array [ref: Local, size: 4, loc: -13] [type int] [line: 60]
!   !   !   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 60]
!   !   !   !   !   !   Child: 1  Const: 3 [type int] [line: 60]
Sibling: 10  Func cheese [ref: Global, size: -4, loc: 0] [type int] [line: 63]
!   Child: 0  Param x [ref: Param, size: 1, loc: -2] [type int] [line: 63]
!   Sibling: 0  Param y [ref: Param, size: 1, loc: -3] [type int] [line: 63]
!   Child: 1  While  [type void] [line: 63]
!   !   Child: 0  Op: > [type bool] [line: 63]
!   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 63]
!   !   !   Child: 1  Const: 0 [type int] [line: 63]
!   !   Child: 1  If  [type void] [line: 63]
!   !   !   Child: 0  Op: > [type bool] [line: 63]
!   !   !   !   Child: 0  Id: y [ref: Param, size: 1, loc: -3] [type int] [line: 63]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 63]
!   !   !   Child: 1  Assign: -- [type int] [line: 63]
!   !   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 63]
!   !   !   Child: 2  Return [type void] [line: 63]
!   !   !   !   Child: 0  Op: % [type int] [line: 63]
!   !   !   !   !   Child: 0  Op: * [type int] [line: 63]
!   !   !   !   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 63]
!   !   !   !   !   !   Child: 1  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 63]
!   !   !   !   !   Child: 1  Id: y [ref: Param, size: 1, loc: -3] [type int] [line: 63]
Sibling: 11  Func Wensleydale [ref: Global, size: -4, loc: 0] [type int] [line: 65]
!   Child: 0  Param x [ref: Param, size: 1, loc: -2] [type int] [line: 65]
!   Sibling: 0  Param y [ref: Param, size: 1, loc: -3] [type int] [line: 65]
!   Child: 1  Return [type void] [line: 65]
!   !   Child: 0  Call: cheese [type int] [line: 65]
!   !   !   Child: 0  Id: x [ref: Param, size: 1, loc: -2] [type int] [line: 65]
!   !   !   Sibling: 0  Id: gromit [ref: Global, size: 1, loc: 0] [type int] [line: 65]
Sibling: 12  Func main [ref: Global, size: -141, loc: 0] [type int] [line: 67]
!   Child: 1  Compound [ref: None, size: -141, loc: 0] [type void] [line: 68]
!   !   Child: 0  Var: wool [ref: Local, size: 1, loc: -2] [type int] [line: 69]
!   !   Sibling: 0  Var: yarn is array [ref: Local, size: 114, loc: -4] [type int] [line: 69]
!   !   Sibling: 1  Var: shawn [ref: Local, size: 1, loc: -117] [type bool] [line: 70]
!   !   Sibling: 2  Var: preston is array [ref: Local, size: 23, loc: -119] [type bool] [line: 70]
!   !   Child: 1  Call: wallace [type void] [line: 72]
!   !   !   Child: 0  Call: cheese [type int] [line: 72]
!   !   !   !   Child: 0  Const: 61 [type int] [line: 72]
!   !   !   !   Sibling: 0  Const: 73 [type int] [line: 72]
!   !   !   Sibling: 0  Id: gromit [ref: Global, size: 1, loc: 0] [type int] [line: 72]
!   !   Sibling: 0  Return [type void] [line: 73]
!   !   !   Child: 0  Call: Wendolene [type int] [line: 73]
!   !   !   !   Child: 0  Op: * [type int] [line: 73]
!   !   !   !   !   Child: 0  Op: * [type int] [line: 73]
!   !   !   !   !   !   Child: 0  Id: preston is array [ref: Local, size: 23, loc: -119] [type bool] [line: 73]
!   !   !   !   !   Child: 1  Op: * [type int] [line: 73]
!   !   !   !   !   !   Child: 0  Id: yarn is array [ref: Local, size: 114, loc: -4] [type int] [line: 73]
!   !   !   !   Sibling: 0  Id: shawn [ref: Local, size: 1, loc: -117] [type bool] [line: 73]
!   !   !   !   Sibling: 1  Id: yarn is array [ref: Local, size: 114, loc: -4] [type int] [line: 73]
!   !   !   !   Sibling: 2  Id: preston is array [ref: Local, size: 23, loc: -119] [type bool] [line: 73]
Offset for end of global space: -1
Number of warnings: 0
Number of errors: 0
